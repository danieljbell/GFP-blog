var module;!function(e,t){"function"==typeof define&&define.amd?define([],function(){return t(e)}):"object"==typeof exports?module.exports=t(e):window.atomic=t(e)}("undefined"!=typeof global?global:"undefined"!=typeof window?window:this,function(n){"use strict";var a,r={method:"GET",username:null,password:null,data:{},headers:{"Content-type":"application/x-www-form-urlencoded"},responseType:"text",timeout:null,withCredentials:!1},i=function(){for(var n={},e=0;e<arguments.length;e++){!function(e){for(var t in e)e.hasOwnProperty(t)&&("[object Object]"===Object.prototype.toString.call(e[t])?n[t]=i(n[t],e[t]):n[t]=e[t])}(arguments[e])}return n},o=function(r){var i=new XMLHttpRequest,e=new Promise(function(e,t){for(var n in i.onreadystatechange=function(){4===i.readyState&&(200<=i.status&&i.status<300?e(function(t){var n;if("text"!==a.responseType&&""!==a.responseType)return{data:t.response,xhr:t};try{n=JSON.parse(t.responseText)}catch(e){n=t.responseText}return{data:n,xhr:t}}(i)):t({status:i.status,statusText:i.statusText}))},i.open(a.method,r,!0,a.username,a.password),i.responseType=a.responseType,a.headers)a.headers.hasOwnProperty(n)&&i.setRequestHeader(n,a.headers[n]);a.timeout&&(i.timeout=a.timeout,i.ontimeout=function(e){t({status:408,statusText:"Request timeout"})}),a.withCredentials&&(i.withCredentials=!0),i.send(function(e){if("string"==typeof e||"[object FormData]"===Object.prototype.toString.call(e))return e;if(/application\/json/i.test(a.headers["Content-type"])||"[object Array]"===Object.prototype.toString.call(e))return JSON.stringify(e);var t=[];for(var n in e)e.hasOwnProperty(n)&&t.push(encodeURIComponent(n)+"="+encodeURIComponent(e[n]));return t.join("&")}(a.data))});return e.cancel=function(){i.abort()},e};return function(e,t){if(!("XMLHttpRequest"in n&&"JSON"in n&&"Promise"in n))throw"Atomic: This browser does not support the methods used in this plugin.";return a=i(r,t||{}),o(e)}}),function(e,t){"object"==typeof exports&&void 0!==module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.DOMPurify=t()}(this,function(){"use strict";function me(e,t){a&&a(e,null);for(var n=t.length;n--;){var r=t[n];if("string"==typeof r){var i=r.toLowerCase();i!==r&&(r=t[n]=i)}e[r]=!0}return e}function pe(e){var t={},n=void 0;for(n in e)i(r,e,[n])&&(t[n]=e[n]);return t}function ye(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}var e=Object.freeze||function(e){return e},ve=e(["a","abbr","acronym","address","area","article","aside","audio","b","bdi","bdo","big","blink","blockquote","body","br","button","canvas","caption","center","cite","code","col","colgroup","content","data","datalist","dd","decorator","del","details","dfn","dir","div","dl","dt","element","em","fieldset","figcaption","figure","font","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","img","input","ins","kbd","label","legend","li","main","map","mark","marquee","menu","menuitem","meter","nav","nobr","ol","optgroup","option","output","p","pre","progress","q","rp","rt","ruby","s","samp","section","select","shadow","small","source","spacer","span","strike","strong","style","sub","summary","sup","table","tbody","td","template","textarea","tfoot","th","thead","time","tr","track","tt","u","ul","var","video","wbr"]),ge=e(["svg","a","altglyph","altglyphdef","altglyphitem","animatecolor","animatemotion","animatetransform","audio","canvas","circle","clippath","defs","desc","ellipse","filter","font","g","glyph","glyphref","hkern","image","line","lineargradient","marker","mask","metadata","mpath","path","pattern","polygon","polyline","radialgradient","rect","stop","style","switch","symbol","text","textpath","title","tref","tspan","video","view","vkern"]),_e=e(["feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence"]),we=e(["math","menclose","merror","mfenced","mfrac","mglyph","mi","mlabeledtr","mmuliscripts","mn","mo","mover","mpadded","mphantom","mroot","mrow","ms","mpspace","msqrt","mystyle","msub","msup","msubsup","mtable","mtd","mtext","mtr","munder","munderover"]),be=e(["#text"]),t=Object.freeze||function(e){return e},Se=t(["accept","action","align","alt","autocomplete","background","bgcolor","border","cellpadding","cellspacing","checked","cite","class","clear","color","cols","colspan","coords","crossorigin","datetime","default","dir","disabled","download","enctype","face","for","headers","height","hidden","high","href","hreflang","id","integrity","ismap","label","lang","list","loop","low","max","maxlength","media","method","min","multiple","name","noshade","novalidate","nowrap","open","optimum","pattern","placeholder","poster","preload","pubdate","radiogroup","readonly","rel","required","rev","reversed","role","rows","rowspan","spellcheck","scope","selected","shape","size","sizes","span","srclang","start","src","srcset","step","style","summary","tabindex","title","type","usemap","valign","value","width","xmlns"]),Me=t(["accent-height","accumulate","additivive","alignment-baseline","ascent","attributename","attributetype","azimuth","basefrequency","baseline-shift","begin","bias","by","class","clip","clip-path","clip-rule","color","color-interpolation","color-interpolation-filters","color-profile","color-rendering","cx","cy","d","dx","dy","diffuseconstant","direction","display","divisor","dur","edgemode","elevation","end","fill","fill-opacity","fill-rule","filter","flood-color","flood-opacity","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","fx","fy","g1","g2","glyph-name","glyphref","gradientunits","gradienttransform","height","href","id","image-rendering","in","in2","k","k1","k2","k3","k4","kerning","keypoints","keysplines","keytimes","lang","lengthadjust","letter-spacing","kernelmatrix","kernelunitlength","lighting-color","local","marker-end","marker-mid","marker-start","markerheight","markerunits","markerwidth","maskcontentunits","maskunits","max","mask","media","method","mode","min","name","numoctaves","offset","operator","opacity","order","orient","orientation","origin","overflow","paint-order","path","pathlength","patterncontentunits","patterntransform","patternunits","points","preservealpha","preserveaspectratio","r","rx","ry","radius","refx","refy","repeatcount","repeatdur","restart","result","rotate","scale","seed","shape-rendering","specularconstant","specularexponent","spreadmethod","stddeviation","stitchtiles","stop-color","stop-opacity","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke","stroke-width","style","surfacescale","tabindex","targetx","targety","transform","text-anchor","text-decoration","text-rendering","textlength","type","u1","u2","unicode","values","viewbox","visibility","vert-adv-y","vert-origin-x","vert-origin-y","width","word-spacing","wrap","writing-mode","xchannelselector","ychannelselector","x","x1","x2","xmlns","y","y1","y2","z","zoomandpan"]),xe=t(["accent","accentunder","align","bevelled","close","columnsalign","columnlines","columnspan","denomalign","depth","dir","display","displaystyle","fence","frame","height","href","id","largeop","length","linethickness","lspace","lquote","mathbackground","mathcolor","mathsize","mathvariant","maxsize","minsize","movablelimits","notation","numalign","open","rowalign","rowlines","rowspacing","rowspan","rspace","rquote","scriptlevel","scriptminsize","scriptsizemultiplier","selection","separator","separators","stretchy","subscriptshift","supscriptshift","symmetric","voffset","width","xmlns"]),ke=t(["xlink:href","xml:id","xlink:title","xml:space","xmlns:xlink"]),r=Object.hasOwnProperty,a=Object.setPrototypeOf,i=("undefined"!=typeof Reflect&&Reflect).apply;i||(i=function(e,t,n){return e.apply(t,n)});var n=Object.seal||function(e){return e},Te=n(/\{\{[\s\S]*|[\s\S]*\}\}/gm),De=n(/<%[\s\S]*|[\s\S]*%>/gm),Le=n(/^data-[\-\w.\u00B7-\uFFFF]/),Oe=n(/^aria-[\-\w]+$/),Ce=n(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i),Ye=n(/^(?:\w+script|data):/i),Ee=n(/[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205f\u3000]/g),Ne="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Ae=("undefined"!=typeof Reflect&&Reflect).apply,He=Array.prototype.slice,Pe=Object.freeze,je=function(){return"undefined"==typeof window?null:window};return Ae||(Ae=function(e,t,n){return e.apply(t,n)}),function t(){var l=0<arguments.length&&void 0!==arguments[0]?arguments[0]:je(),f=function(e){return t(e)};if(f.version="1.0.8",f.removed=[],!l||!l.document||9!==l.document.nodeType)return f.isSupported=!1,f;var c=l.document,a=!1,o=!1,s=l.document,u=l.DocumentFragment,e=l.HTMLTemplateElement,d=l.Node,n=l.NodeFilter,r=l.NamedNodeMap,i=void 0===r?l.NamedNodeMap||l.MozNamedAttrMap:r,h=l.Text,m=l.Comment,p=l.DOMParser;if("function"==typeof e){var y=s.createElement("template");y.content&&y.content.ownerDocument&&(s=y.content.ownerDocument)}var v=s,g=v.implementation,_=v.createNodeIterator,w=v.getElementsByTagName,b=v.createDocumentFragment,S=c.importNode,M={};f.isSupported=g&&void 0!==g.createHTMLDocument&&9!==s.documentMode;var x=Te,k=De,T=Le,D=Oe,L=Ye,O=Ee,C=Ce,Y=null,E=me({},[].concat(ye(ve),ye(ge),ye(_e),ye(we),ye(be))),N=null,A=me({},[].concat(ye(Se),ye(Me),ye(xe),ye(ke))),H=null,P=null,j=!0,R=!0,W=!1,F=!1,q=!1,I=!1,U=!1,z=!1,G=!1,V=!1,B=!1,Z=!0,$=!0,Q=!1,J={},X=me({},["audio","head","math","script","style","template","svg","video"]),K=me({},["audio","video","img","source","image"]),ee=me({},["alt","class","for","id","label","name","pattern","placeholder","summary","title","value","style","xmlns"]),te=null,ne=s.createElement("form"),re=function(e){e&&"object"===(void 0===e?"undefined":Ne(e))||(e={}),Y="ALLOWED_TAGS"in e?me({},e.ALLOWED_TAGS):E,N="ALLOWED_ATTR"in e?me({},e.ALLOWED_ATTR):A,H="FORBID_TAGS"in e?me({},e.FORBID_TAGS):{},P="FORBID_ATTR"in e?me({},e.FORBID_ATTR):{},J="USE_PROFILES"in e&&e.USE_PROFILES,j=!1!==e.ALLOW_ARIA_ATTR,R=!1!==e.ALLOW_DATA_ATTR,W=e.ALLOW_UNKNOWN_PROTOCOLS||!1,F=e.SAFE_FOR_JQUERY||!1,q=e.SAFE_FOR_TEMPLATES||!1,I=e.WHOLE_DOCUMENT||!1,G=e.RETURN_DOM||!1,V=e.RETURN_DOM_FRAGMENT||!1,B=e.RETURN_DOM_IMPORT||!1,z=e.FORCE_BODY||!1,Z=!1!==e.SANITIZE_DOM,$=!1!==e.KEEP_CONTENT,Q=e.IN_PLACE||!1,C=e.ALLOWED_URI_REGEXP||C,q&&(R=!1),V&&(G=!0),J&&(Y=me({},[].concat(ye(be))),N=[],!0===J.html&&(me(Y,ve),me(N,Se)),!0===J.svg&&(me(Y,ge),me(N,Me),me(N,ke)),!0===J.svgFilters&&(me(Y,_e),me(N,Me),me(N,ke)),!0===J.mathMl&&(me(Y,we),me(N,xe),me(N,ke))),e.ADD_TAGS&&(Y===E&&(Y=pe(Y)),me(Y,e.ADD_TAGS)),e.ADD_ATTR&&(N===A&&(N=pe(N)),me(N,e.ADD_ATTR)),e.ADD_URI_SAFE_ATTR&&me(ee,e.ADD_URI_SAFE_ATTR),$&&(Y["#text"]=!0),I&&me(Y,["html","head","body"]),Y.table&&me(Y,["tbody"]),Pe&&Pe(e),te=e},ie=function(t){f.removed.push({element:t});try{t.parentNode.removeChild(t)}catch(e){t.outerHTML=""}},ae=function(e,t){try{f.removed.push({attribute:t.getAttributeNode(e),from:t})}catch(e){f.removed.push({attribute:null,from:t})}t.removeAttribute(e)},oe=function(e){var t=void 0,n=void 0;if(z)e="<remove></remove>"+e;else{var r=e.match(/^[\s]+/);(n=r&&r[0])&&(e=e.slice(n.length))}if(a)try{t=(new p).parseFromString(e,"text/html")}catch(e){}if(o&&me(H,["title"]),!t||!t.documentElement){var i=(t=g.createHTMLDocument("")).body;i.parentNode.removeChild(i.parentNode.firstElementChild),i.outerHTML=e}return n&&t.body.insertBefore(s.createTextNode(n),t.body.childNodes[0]||null),w.call(t,I?"html":"body")[0]};f.isSupported&&(function(){try{oe('<svg><p><style><img src="</style><img src=x onerror=alert(1)//">').querySelector("svg img")&&(a=!0)}catch(e){}}(),function(){try{oe("<x/><title>&lt;/title&gt;&lt;img&gt;").querySelector("title").innerHTML.match(/<\/title/)&&(o=!0)}catch(e){}}());var se=function(e){return _.call(e.ownerDocument||e,e,n.SHOW_ELEMENT|n.SHOW_COMMENT|n.SHOW_TEXT,function(){return n.FILTER_ACCEPT},!1)},le=function(e){return"object"===(void 0===d?"undefined":Ne(d))?e instanceof d:e&&"object"===(void 0===e?"undefined":Ne(e))&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName},ce=function(e,t,n){M[e]&&M[e].forEach(function(e){e.call(f,t,n,te)})},ue=function(e){var t,n=void 0;if(ce("beforeSanitizeElements",e,null),!((t=e)instanceof h||t instanceof m||"string"==typeof t.nodeName&&"string"==typeof t.textContent&&"function"==typeof t.removeChild&&t.attributes instanceof i&&"function"==typeof t.removeAttribute&&"function"==typeof t.setAttribute))return ie(e),!0;var r=e.nodeName.toLowerCase();if(ce("uponSanitizeElement",e,{tagName:r,allowedTags:Y}),Y[r]&&!H[r])return!F||e.firstElementChild||e.content&&e.content.firstElementChild||!/</g.test(e.textContent)||(f.removed.push({element:e.cloneNode()}),e.innerHTML?e.innerHTML=e.innerHTML.replace(/</g,"&lt;"):e.innerHTML=e.textContent.replace(/</g,"&lt;")),q&&3===e.nodeType&&(n=(n=(n=e.textContent).replace(x," ")).replace(k," "),e.textContent!==n&&(f.removed.push({element:e.cloneNode()}),e.textContent=n)),ce("afterSanitizeElements",e,null),!1;if($&&!X[r]&&"function"==typeof e.insertAdjacentHTML)try{e.insertAdjacentHTML("AfterEnd",e.innerHTML)}catch(e){}return ie(e),!0},de=function(e,t,n){if(Z&&("id"===t||"name"===t)&&(n in s||n in ne))return!1;if(q&&(n=(n=n.replace(x," ")).replace(k," ")),R&&T.test(t));else if(j&&D.test(t));else{if(!N[t]||P[t])return!1;if(ee[t]);else if(C.test(n.replace(O,"")));else if("src"!==t&&"xlink:href"!==t||"script"===e||0!==n.indexOf("data:")||!K[e])if(W&&!L.test(n.replace(O,"")));else if(n)return!1}return!0},fe=function(e){var t=void 0,n=void 0,r=void 0,i=void 0,a=void 0;ce("beforeSanitizeAttributes",e,null);var o=e.attributes;if(o){var s={attrName:"",attrValue:"",keepAttr:!0,allowedAttributes:N};for(a=o.length;a--;){var l=t=o[a],c=l.name,u=l.namespaceURI;if(n=t.value.trim(),r=c.toLowerCase(),s.attrName=r,s.attrValue=n,s.keepAttr=!0,ce("uponSanitizeAttribute",e,s),n=s.attrValue,"name"===r&&"IMG"===e.nodeName&&o.id)i=o.id,o=Ae(He,o,[]),ae("id",e),ae(c,e),o.indexOf(i)>a&&e.setAttribute("id",i.value);else{if("INPUT"===e.nodeName&&"type"===r&&"file"===n&&(N[r]||!P[r]))continue;"id"===c&&e.setAttribute(c,""),ae(c,e)}if(s.keepAttr){var d=e.nodeName.toLowerCase();if(de(d,r,n))try{u?e.setAttributeNS(u,c,n):e.setAttribute(c,n),f.removed.pop()}catch(e){}}}ce("afterSanitizeAttributes",e,null)}},he=function e(t){var n=void 0,r=se(t);for(ce("beforeSanitizeShadowDOM",t,null);n=r.nextNode();)ce("uponSanitizeShadowNode",n,null),ue(n)||(n.content instanceof u&&e(n.content),fe(n));ce("afterSanitizeShadowDOM",t,null)};return f.sanitize=function(e,t){var n=void 0,r=void 0,i=void 0,a=void 0,o=void 0;if(e||(e="\x3c!--\x3e"),"string"!=typeof e&&!le(e)){if("function"!=typeof e.toString)throw new TypeError("toString is not a function");if("string"!=typeof(e=e.toString()))throw new TypeError("dirty is not a string, aborting")}if(!f.isSupported){if("object"===Ne(l.toStaticHTML)||"function"==typeof l.toStaticHTML){if("string"==typeof e)return l.toStaticHTML(e);if(le(e))return l.toStaticHTML(e.outerHTML)}return e}if(U||re(t),f.removed=[],Q);else if(e instanceof d)1===(r=(n=oe("\x3c!--\x3e")).ownerDocument.importNode(e,!0)).nodeType&&"BODY"===r.nodeName?n=r:n.appendChild(r);else{if(!G&&!I&&-1===e.indexOf("<"))return e;if(!(n=oe(e)))return G?null:""}n&&z&&ie(n.firstChild);for(var s=se(Q?e:n);i=s.nextNode();)3===i.nodeType&&i===a||ue(i)||(i.content instanceof u&&he(i.content),fe(i),a=i);if(Q)return e;if(G){if(V)for(o=b.call(n.ownerDocument);n.firstChild;)o.appendChild(n.firstChild);else o=n;return B&&(o=S.call(c,o,!0)),o}return I?n.outerHTML:n.innerHTML},f.setConfig=function(e){re(e),U=!0},f.clearConfig=function(){te=null,U=!1},f.isValidAttribute=function(e,t,n){te||re({});var r=e.toLowerCase(),i=t.toLowerCase();return de(r,i,n)},f.addHook=function(e,t){"function"==typeof t&&(M[e]=M[e]||[],M[e].push(t))},f.removeHook=function(e){M[e]&&M[e].pop()},f.removeHooks=function(e){M[e]&&(M[e]=[])},f.removeAllHooks=function(){M={}},f}()}),function(e,t){"object"==typeof exports&&void 0!==module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.moment=t()}(this,function(){"use strict";var e,i;function g(){return e.apply(null,arguments)}function s(e){return e instanceof Array||"[object Array]"===Object.prototype.toString.call(e)}function l(e){return null!=e&&"[object Object]"===Object.prototype.toString.call(e)}function c(e){return void 0===e}function u(e){return"number"==typeof e||"[object Number]"===Object.prototype.toString.call(e)}function d(e){return e instanceof Date||"[object Date]"===Object.prototype.toString.call(e)}function f(e,t){var n,r=[];for(n=0;n<e.length;++n)r.push(t(e[n],n));return r}function _(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function h(e,t){for(var n in t)_(t,n)&&(e[n]=t[n]);return _(t,"toString")&&(e.toString=t.toString),_(t,"valueOf")&&(e.valueOf=t.valueOf),e}function m(e,t,n,r){return kt(e,t,n,r,!0).utc()}function w(e){return null==e._pf&&(e._pf={empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],meridiem:null,rfc2822:!1,weekdayMismatch:!1}),e._pf}function p(e){if(null==e._isValid){var t=w(e),n=i.call(t.parsedDateParts,function(e){return null!=e}),r=!isNaN(e._d.getTime())&&t.overflow<0&&!t.empty&&!t.invalidMonth&&!t.invalidWeekday&&!t.weekdayMismatch&&!t.nullInput&&!t.invalidFormat&&!t.userInvalidated&&(!t.meridiem||t.meridiem&&n);if(e._strict&&(r=r&&0===t.charsLeftOver&&0===t.unusedTokens.length&&void 0===t.bigHour),null!=Object.isFrozen&&Object.isFrozen(e))return r;e._isValid=r}return e._isValid}function y(e){var t=m(NaN);return null!=e?h(w(t),e):w(t).userInvalidated=!0,t}i=Array.prototype.some?Array.prototype.some:function(e){for(var t=Object(this),n=t.length>>>0,r=0;r<n;r++)if(r in t&&e.call(this,t[r],r,t))return!0;return!1};var a=g.momentProperties=[];function v(e,t){var n,r,i;if(c(t._isAMomentObject)||(e._isAMomentObject=t._isAMomentObject),c(t._i)||(e._i=t._i),c(t._f)||(e._f=t._f),c(t._l)||(e._l=t._l),c(t._strict)||(e._strict=t._strict),c(t._tzm)||(e._tzm=t._tzm),c(t._isUTC)||(e._isUTC=t._isUTC),c(t._offset)||(e._offset=t._offset),c(t._pf)||(e._pf=w(t)),c(t._locale)||(e._locale=t._locale),0<a.length)for(n=0;n<a.length;n++)c(i=t[r=a[n]])||(e[r]=i);return e}var t=!1;function b(e){v(this,e),this._d=new Date(null!=e._d?e._d.getTime():NaN),this.isValid()||(this._d=new Date(NaN)),!1===t&&(t=!0,g.updateOffset(this),t=!1)}function S(e){return e instanceof b||null!=e&&null!=e._isAMomentObject}function M(e){return e<0?Math.ceil(e)||0:Math.floor(e)}function x(e){var t=+e,n=0;return 0!==t&&isFinite(t)&&(n=M(t)),n}function o(e,t,n){var r,i=Math.min(e.length,t.length),a=Math.abs(e.length-t.length),o=0;for(r=0;r<i;r++)(n&&e[r]!==t[r]||!n&&x(e[r])!==x(t[r]))&&o++;return o+a}function k(e){!1===g.suppressDeprecationWarnings&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+e)}function n(i,a){var o=!0;return h(function(){if(null!=g.deprecationHandler&&g.deprecationHandler(null,i),o){for(var e,t=[],n=0;n<arguments.length;n++){if(e="","object"==typeof arguments[n]){for(var r in e+="\n["+n+"] ",arguments[0])e+=r+": "+arguments[0][r]+", ";e=e.slice(0,-2)}else e=arguments[n];t.push(e)}k(i+"\nArguments: "+Array.prototype.slice.call(t).join("")+"\n"+(new Error).stack),o=!1}return a.apply(this,arguments)},a)}var r,T={};function D(e,t){null!=g.deprecationHandler&&g.deprecationHandler(e,t),T[e]||(k(t),T[e]=!0)}function L(e){return e instanceof Function||"[object Function]"===Object.prototype.toString.call(e)}function O(e,t){var n,r=h({},e);for(n in t)_(t,n)&&(l(e[n])&&l(t[n])?(r[n]={},h(r[n],e[n]),h(r[n],t[n])):null!=t[n]?r[n]=t[n]:delete r[n]);for(n in e)_(e,n)&&!_(t,n)&&l(e[n])&&(r[n]=h({},r[n]));return r}function C(e){null!=e&&this.set(e)}g.suppressDeprecationWarnings=!1,g.deprecationHandler=null,r=Object.keys?Object.keys:function(e){var t,n=[];for(t in e)_(e,t)&&n.push(t);return n};var Y={};function E(e,t){var n=e.toLowerCase();Y[n]=Y[n+"s"]=Y[t]=e}function N(e){return"string"==typeof e?Y[e]||Y[e.toLowerCase()]:void 0}function A(e){var t,n,r={};for(n in e)_(e,n)&&(t=N(n))&&(r[t]=e[n]);return r}var H={};function P(e,t){H[e]=t}function j(e,t,n){var r=""+Math.abs(e),i=t-r.length;return(0<=e?n?"+":"":"-")+Math.pow(10,Math.max(0,i)).toString().substr(1)+r}var R=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,W=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,F={},q={};function I(e,t,n,r){var i=r;"string"==typeof r&&(i=function(){return this[r]()}),e&&(q[e]=i),t&&(q[t[0]]=function(){return j(i.apply(this,arguments),t[1],t[2])}),n&&(q[n]=function(){return this.localeData().ordinal(i.apply(this,arguments),e)})}function U(e,t){return e.isValid()?(t=z(t,e.localeData()),F[t]=F[t]||function(r){var e,i,t,a=r.match(R);for(e=0,i=a.length;e<i;e++)q[a[e]]?a[e]=q[a[e]]:a[e]=(t=a[e]).match(/\[[\s\S]/)?t.replace(/^\[|\]$/g,""):t.replace(/\\/g,"");return function(e){var t,n="";for(t=0;t<i;t++)n+=L(a[t])?a[t].call(e,r):a[t];return n}}(t),F[t](e)):e.localeData().invalidDate()}function z(e,t){var n=5;function r(e){return t.longDateFormat(e)||e}for(W.lastIndex=0;0<=n&&W.test(e);)e=e.replace(W,r),W.lastIndex=0,n-=1;return e}var G=/\d/,V=/\d\d/,B=/\d{3}/,Z=/\d{4}/,$=/[+-]?\d{6}/,Q=/\d\d?/,J=/\d\d\d\d?/,X=/\d\d\d\d\d\d?/,K=/\d{1,3}/,ee=/\d{1,4}/,te=/[+-]?\d{1,6}/,ne=/\d+/,re=/[+-]?\d+/,ie=/Z|[+-]\d\d:?\d\d/gi,ae=/Z|[+-]\d\d(?::?\d\d)?/gi,oe=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,se={};function le(e,n,r){se[e]=L(n)?n:function(e,t){return e&&r?r:n}}function ce(e){return e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}var ue={};function de(e,n){var t,r=n;for("string"==typeof e&&(e=[e]),u(n)&&(r=function(e,t){t[n]=x(e)}),t=0;t<e.length;t++)ue[e[t]]=r}function fe(e,i){de(e,function(e,t,n,r){n._w=n._w||{},i(e,n._w,n,r)})}var he=0,me=1,pe=2,ye=3,ve=4,ge=5,_e=6,we=7,be=8;function Se(e){return Me(e)?366:365}function Me(e){return e%4==0&&e%100!=0||e%400==0}I("Y",0,0,function(){var e=this.year();return e<=9999?""+e:"+"+e}),I(0,["YY",2],0,function(){return this.year()%100}),I(0,["YYYY",4],0,"year"),I(0,["YYYYY",5],0,"year"),I(0,["YYYYYY",6,!0],0,"year"),E("year","y"),P("year",1),le("Y",re),le("YY",Q,V),le("YYYY",ee,Z),le("YYYYY",te,$),le("YYYYYY",te,$),de(["YYYYY","YYYYYY"],he),de("YYYY",function(e,t){t[he]=2===e.length?g.parseTwoDigitYear(e):x(e)}),de("YY",function(e,t){t[he]=g.parseTwoDigitYear(e)}),de("Y",function(e,t){t[he]=parseInt(e,10)}),g.parseTwoDigitYear=function(e){return x(e)+(68<x(e)?1900:2e3)};var xe,ke=Te("FullYear",!0);function Te(t,n){return function(e){return null!=e?(Le(this,t,e),g.updateOffset(this,n),this):De(this,t)}}function De(e,t){return e.isValid()?e._d["get"+(e._isUTC?"UTC":"")+t]():NaN}function Le(e,t,n){e.isValid()&&!isNaN(n)&&("FullYear"===t&&Me(e.year())&&1===e.month()&&29===e.date()?e._d["set"+(e._isUTC?"UTC":"")+t](n,e.month(),Oe(n,e.month())):e._d["set"+(e._isUTC?"UTC":"")+t](n))}function Oe(e,t){if(isNaN(e)||isNaN(t))return NaN;var n=(t%12+12)%12;return e+=(t-n)/12,1===n?Me(e)?29:28:31-n%7%2}xe=Array.prototype.indexOf?Array.prototype.indexOf:function(e){var t;for(t=0;t<this.length;++t)if(this[t]===e)return t;return-1},I("M",["MM",2],"Mo",function(){return this.month()+1}),I("MMM",0,0,function(e){return this.localeData().monthsShort(this,e)}),I("MMMM",0,0,function(e){return this.localeData().months(this,e)}),E("month","M"),P("month",8),le("M",Q),le("MM",Q,V),le("MMM",function(e,t){return t.monthsShortRegex(e)}),le("MMMM",function(e,t){return t.monthsRegex(e)}),de(["M","MM"],function(e,t){t[me]=x(e)-1}),de(["MMM","MMMM"],function(e,t,n,r){var i=n._locale.monthsParse(e,r,n._strict);null!=i?t[me]=i:w(n).invalidMonth=e});var Ce=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,Ye="January_February_March_April_May_June_July_August_September_October_November_December".split("_"),Ee="Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_");function Ne(e,t){var n;if(!e.isValid())return e;if("string"==typeof t)if(/^\d+$/.test(t))t=x(t);else if(!u(t=e.localeData().monthsParse(t)))return e;return n=Math.min(e.date(),Oe(e.year(),t)),e._d["set"+(e._isUTC?"UTC":"")+"Month"](t,n),e}function Ae(e){return null!=e?(Ne(this,e),g.updateOffset(this,!0),this):De(this,"Month")}var He=oe,Pe=oe;function je(){function e(e,t){return t.length-e.length}var t,n,r=[],i=[],a=[];for(t=0;t<12;t++)n=m([2e3,t]),r.push(this.monthsShort(n,"")),i.push(this.months(n,"")),a.push(this.months(n,"")),a.push(this.monthsShort(n,""));for(r.sort(e),i.sort(e),a.sort(e),t=0;t<12;t++)r[t]=ce(r[t]),i[t]=ce(i[t]);for(t=0;t<24;t++)a[t]=ce(a[t]);this._monthsRegex=new RegExp("^("+a.join("|")+")","i"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp("^("+i.join("|")+")","i"),this._monthsShortStrictRegex=new RegExp("^("+r.join("|")+")","i")}function Re(e){var t;if(e<100&&0<=e){var n=Array.prototype.slice.call(arguments);n[0]=e+400,t=new Date(Date.UTC.apply(null,n)),isFinite(t.getUTCFullYear())&&t.setUTCFullYear(e)}else t=new Date(Date.UTC.apply(null,arguments));return t}function We(e,t,n){var r=7+t-n;return-(7+Re(e,0,r).getUTCDay()-t)%7+r-1}function Fe(e,t,n,r,i){var a,o,s=1+7*(t-1)+(7+n-r)%7+We(e,r,i);return o=s<=0?Se(a=e-1)+s:s>Se(e)?(a=e+1,s-Se(e)):(a=e,s),{year:a,dayOfYear:o}}function qe(e,t,n){var r,i,a=We(e.year(),t,n),o=Math.floor((e.dayOfYear()-a-1)/7)+1;return o<1?r=o+Ie(i=e.year()-1,t,n):o>Ie(e.year(),t,n)?(r=o-Ie(e.year(),t,n),i=e.year()+1):(i=e.year(),r=o),{week:r,year:i}}function Ie(e,t,n){var r=We(e,t,n),i=We(e+1,t,n);return(Se(e)-r+i)/7}function Ue(e,t){return e.slice(t,7).concat(e.slice(0,t))}I("w",["ww",2],"wo","week"),I("W",["WW",2],"Wo","isoWeek"),E("week","w"),E("isoWeek","W"),P("week",5),P("isoWeek",5),le("w",Q),le("ww",Q,V),le("W",Q),le("WW",Q,V),fe(["w","ww","W","WW"],function(e,t,n,r){t[r.substr(0,1)]=x(e)}),I("d",0,"do","day"),I("dd",0,0,function(e){return this.localeData().weekdaysMin(this,e)}),I("ddd",0,0,function(e){return this.localeData().weekdaysShort(this,e)}),I("dddd",0,0,function(e){return this.localeData().weekdays(this,e)}),I("e",0,0,"weekday"),I("E",0,0,"isoWeekday"),E("day","d"),E("weekday","e"),E("isoWeekday","E"),P("day",11),P("weekday",11),P("isoWeekday",11),le("d",Q),le("e",Q),le("E",Q),le("dd",function(e,t){return t.weekdaysMinRegex(e)}),le("ddd",function(e,t){return t.weekdaysShortRegex(e)}),le("dddd",function(e,t){return t.weekdaysRegex(e)}),fe(["dd","ddd","dddd"],function(e,t,n,r){var i=n._locale.weekdaysParse(e,r,n._strict);null!=i?t.d=i:w(n).invalidWeekday=e}),fe(["d","e","E"],function(e,t,n,r){t[r]=x(e)});var ze="Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),Ge="Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),Ve="Su_Mo_Tu_We_Th_Fr_Sa".split("_"),Be=oe,Ze=oe,$e=oe;function Qe(){function e(e,t){return t.length-e.length}var t,n,r,i,a,o=[],s=[],l=[],c=[];for(t=0;t<7;t++)n=m([2e3,1]).day(t),r=this.weekdaysMin(n,""),i=this.weekdaysShort(n,""),a=this.weekdays(n,""),o.push(r),s.push(i),l.push(a),c.push(r),c.push(i),c.push(a);for(o.sort(e),s.sort(e),l.sort(e),c.sort(e),t=0;t<7;t++)s[t]=ce(s[t]),l[t]=ce(l[t]),c[t]=ce(c[t]);this._weekdaysRegex=new RegExp("^("+c.join("|")+")","i"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp("^("+l.join("|")+")","i"),this._weekdaysShortStrictRegex=new RegExp("^("+s.join("|")+")","i"),this._weekdaysMinStrictRegex=new RegExp("^("+o.join("|")+")","i")}function Je(){return this.hours()%12||12}function Xe(e,t){I(e,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),t)})}function Ke(e,t){return t._meridiemParse}I("H",["HH",2],0,"hour"),I("h",["hh",2],0,Je),I("k",["kk",2],0,function(){return this.hours()||24}),I("hmm",0,0,function(){return""+Je.apply(this)+j(this.minutes(),2)}),I("hmmss",0,0,function(){return""+Je.apply(this)+j(this.minutes(),2)+j(this.seconds(),2)}),I("Hmm",0,0,function(){return""+this.hours()+j(this.minutes(),2)}),I("Hmmss",0,0,function(){return""+this.hours()+j(this.minutes(),2)+j(this.seconds(),2)}),Xe("a",!0),Xe("A",!1),E("hour","h"),P("hour",13),le("a",Ke),le("A",Ke),le("H",Q),le("h",Q),le("k",Q),le("HH",Q,V),le("hh",Q,V),le("kk",Q,V),le("hmm",J),le("hmmss",X),le("Hmm",J),le("Hmmss",X),de(["H","HH"],ye),de(["k","kk"],function(e,t,n){var r=x(e);t[ye]=24===r?0:r}),de(["a","A"],function(e,t,n){n._isPm=n._locale.isPM(e),n._meridiem=e}),de(["h","hh"],function(e,t,n){t[ye]=x(e),w(n).bigHour=!0}),de("hmm",function(e,t,n){var r=e.length-2;t[ye]=x(e.substr(0,r)),t[ve]=x(e.substr(r)),w(n).bigHour=!0}),de("hmmss",function(e,t,n){var r=e.length-4,i=e.length-2;t[ye]=x(e.substr(0,r)),t[ve]=x(e.substr(r,2)),t[ge]=x(e.substr(i)),w(n).bigHour=!0}),de("Hmm",function(e,t,n){var r=e.length-2;t[ye]=x(e.substr(0,r)),t[ve]=x(e.substr(r))}),de("Hmmss",function(e,t,n){var r=e.length-4,i=e.length-2;t[ye]=x(e.substr(0,r)),t[ve]=x(e.substr(r,2)),t[ge]=x(e.substr(i))});var et,tt=Te("Hours",!0),nt={calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},longDateFormat:{LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},invalidDate:"Invalid date",ordinal:"%d",dayOfMonthOrdinalParse:/\d{1,2}/,relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},months:Ye,monthsShort:Ee,week:{dow:0,doy:6},weekdays:ze,weekdaysMin:Ve,weekdaysShort:Ge,meridiemParse:/[ap]\.?m?\.?/i},rt={},it={};function at(e){return e?e.toLowerCase().replace("_","-"):e}function ot(e){var t=null;if(!rt[e]&&void 0!==module&&module&&module.exports)try{t=et._abbr,require("./locale/"+e),st(t)}catch(e){}return rt[e]}function st(e,t){var n;return e&&((n=c(t)?ct(e):lt(e,t))?et=n:"undefined"!=typeof console&&console.warn&&console.warn("Locale "+e+" not found. Did you forget to load it?")),et._abbr}function lt(e,t){if(null===t)return delete rt[e],null;var n,r=nt;if(t.abbr=e,null!=rt[e])D("defineLocaleOverride","use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."),r=rt[e]._config;else if(null!=t.parentLocale)if(null!=rt[t.parentLocale])r=rt[t.parentLocale]._config;else{if(null==(n=ot(t.parentLocale)))return it[t.parentLocale]||(it[t.parentLocale]=[]),it[t.parentLocale].push({name:e,config:t}),null;r=n._config}return rt[e]=new C(O(r,t)),it[e]&&it[e].forEach(function(e){lt(e.name,e.config)}),st(e),rt[e]}function ct(e){var t;if(e&&e._locale&&e._locale._abbr&&(e=e._locale._abbr),!e)return et;if(!s(e)){if(t=ot(e))return t;e=[e]}return function(e){for(var t,n,r,i,a=0;a<e.length;){for(t=(i=at(e[a]).split("-")).length,n=(n=at(e[a+1]))?n.split("-"):null;0<t;){if(r=ot(i.slice(0,t).join("-")))return r;if(n&&n.length>=t&&o(i,n,!0)>=t-1)break;t--}a++}return et}(e)}function ut(e){var t,n=e._a;return n&&-2===w(e).overflow&&(t=n[me]<0||11<n[me]?me:n[pe]<1||n[pe]>Oe(n[he],n[me])?pe:n[ye]<0||24<n[ye]||24===n[ye]&&(0!==n[ve]||0!==n[ge]||0!==n[_e])?ye:n[ve]<0||59<n[ve]?ve:n[ge]<0||59<n[ge]?ge:n[_e]<0||999<n[_e]?_e:-1,w(e)._overflowDayOfYear&&(t<he||pe<t)&&(t=pe),w(e)._overflowWeeks&&-1===t&&(t=we),w(e)._overflowWeekday&&-1===t&&(t=be),w(e).overflow=t),e}function dt(e,t,n){return null!=e?e:null!=t?t:n}function ft(e){var t,n,r,i,a,o=[];if(!e._d){var s,l;for(s=e,l=new Date(g.now()),r=s._useUTC?[l.getUTCFullYear(),l.getUTCMonth(),l.getUTCDate()]:[l.getFullYear(),l.getMonth(),l.getDate()],e._w&&null==e._a[pe]&&null==e._a[me]&&function(e){var t,n,r,i,a,o,s,l;if(null!=(t=e._w).GG||null!=t.W||null!=t.E)a=1,o=4,n=dt(t.GG,e._a[he],qe(Tt(),1,4).year),r=dt(t.W,1),((i=dt(t.E,1))<1||7<i)&&(l=!0);else{a=e._locale._week.dow,o=e._locale._week.doy;var c=qe(Tt(),a,o);n=dt(t.gg,e._a[he],c.year),r=dt(t.w,c.week),null!=t.d?((i=t.d)<0||6<i)&&(l=!0):null!=t.e?(i=t.e+a,(t.e<0||6<t.e)&&(l=!0)):i=a}r<1||r>Ie(n,a,o)?w(e)._overflowWeeks=!0:null!=l?w(e)._overflowWeekday=!0:(s=Fe(n,r,i,a,o),e._a[he]=s.year,e._dayOfYear=s.dayOfYear)}(e),null!=e._dayOfYear&&(a=dt(e._a[he],r[he]),(e._dayOfYear>Se(a)||0===e._dayOfYear)&&(w(e)._overflowDayOfYear=!0),n=Re(a,0,e._dayOfYear),e._a[me]=n.getUTCMonth(),e._a[pe]=n.getUTCDate()),t=0;t<3&&null==e._a[t];++t)e._a[t]=o[t]=r[t];for(;t<7;t++)e._a[t]=o[t]=null==e._a[t]?2===t?1:0:e._a[t];24===e._a[ye]&&0===e._a[ve]&&0===e._a[ge]&&0===e._a[_e]&&(e._nextDay=!0,e._a[ye]=0),e._d=(e._useUTC?Re:function(e,t,n,r,i,a,o){var s;return e<100&&0<=e?(s=new Date(e+400,t,n,r,i,a,o),isFinite(s.getFullYear())&&s.setFullYear(e)):s=new Date(e,t,n,r,i,a,o),s}).apply(null,o),i=e._useUTC?e._d.getUTCDay():e._d.getDay(),null!=e._tzm&&e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),e._nextDay&&(e._a[ye]=24),e._w&&void 0!==e._w.d&&e._w.d!==i&&(w(e).weekdayMismatch=!0)}}var ht=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,mt=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,pt=/Z|[+-]\d\d(?::?\d\d)?/,yt=[["YYYYYY-MM-DD",/[+-]\d{6}-\d\d-\d\d/],["YYYY-MM-DD",/\d{4}-\d\d-\d\d/],["GGGG-[W]WW-E",/\d{4}-W\d\d-\d/],["GGGG-[W]WW",/\d{4}-W\d\d/,!1],["YYYY-DDD",/\d{4}-\d{3}/],["YYYY-MM",/\d{4}-\d\d/,!1],["YYYYYYMMDD",/[+-]\d{10}/],["YYYYMMDD",/\d{8}/],["GGGG[W]WWE",/\d{4}W\d{3}/],["GGGG[W]WW",/\d{4}W\d{2}/,!1],["YYYYDDD",/\d{7}/]],vt=[["HH:mm:ss.SSSS",/\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss,SSSS",/\d\d:\d\d:\d\d,\d+/],["HH:mm:ss",/\d\d:\d\d:\d\d/],["HH:mm",/\d\d:\d\d/],["HHmmss.SSSS",/\d\d\d\d\d\d\.\d+/],["HHmmss,SSSS",/\d\d\d\d\d\d,\d+/],["HHmmss",/\d\d\d\d\d\d/],["HHmm",/\d\d\d\d/],["HH",/\d\d/]],gt=/^\/?Date\((\-?\d+)/i;function _t(e){var t,n,r,i,a,o,s=e._i,l=ht.exec(s)||mt.exec(s);if(l){for(w(e).iso=!0,t=0,n=yt.length;t<n;t++)if(yt[t][1].exec(l[1])){i=yt[t][0],r=!1!==yt[t][2];break}if(null==i)return void(e._isValid=!1);if(l[3]){for(t=0,n=vt.length;t<n;t++)if(vt[t][1].exec(l[3])){a=(l[2]||" ")+vt[t][0];break}if(null==a)return void(e._isValid=!1)}if(!r&&null!=a)return void(e._isValid=!1);if(l[4]){if(!pt.exec(l[4]))return void(e._isValid=!1);o="Z"}e._f=i+(a||"")+(o||""),Mt(e)}else e._isValid=!1}var wt=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;var bt={UT:0,GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480};function St(e){var t,n,r,i,a,o,s,l,c,u,d,f=wt.exec(e._i.replace(/\([^)]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").replace(/^\s\s*/,"").replace(/\s\s*$/,""));if(f){var h=(i=f[4],a=f[3],o=f[2],s=f[5],l=f[6],c=f[7],d=[(u=parseInt(i,10),u<=49?2e3+u:u<=999?1900+u:u),Ee.indexOf(a),parseInt(o,10),parseInt(s,10),parseInt(l,10)],c&&d.push(parseInt(c,10)),d);if(n=h,r=e,(t=f[1])&&Ge.indexOf(t)!==new Date(n[0],n[1],n[2]).getDay()&&(w(r).weekdayMismatch=!0,!(r._isValid=!1)))return;e._a=h,e._tzm=function(e,t,n){if(e)return bt[e];if(t)return 0;var r=parseInt(n,10),i=r%100;return(r-i)/100*60+i}(f[8],f[9],f[10]),e._d=Re.apply(null,e._a),e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),w(e).rfc2822=!0}else e._isValid=!1}function Mt(e){if(e._f!==g.ISO_8601)if(e._f!==g.RFC_2822){e._a=[],w(e).empty=!0;var t,n,r,i,a,o,s,l,c=""+e._i,u=c.length,d=0;for(r=z(e._f,e._locale).match(R)||[],t=0;t<r.length;t++)i=r[t],(n=(c.match((y=i,v=e,_(se,y)?se[y](v._strict,v._locale):new RegExp(ce(y.replace("\\","").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(e,t,n,r,i){return t||n||r||i})))))||[])[0])&&(0<(a=c.substr(0,c.indexOf(n))).length&&w(e).unusedInput.push(a),c=c.slice(c.indexOf(n)+n.length),d+=n.length),q[i]?(n?w(e).empty=!1:w(e).unusedTokens.push(i),o=i,l=e,null!=(s=n)&&_(ue,o)&&ue[o](s,l._a,l,o)):e._strict&&!n&&w(e).unusedTokens.push(i);w(e).charsLeftOver=u-d,0<c.length&&w(e).unusedInput.push(c),e._a[ye]<=12&&!0===w(e).bigHour&&0<e._a[ye]&&(w(e).bigHour=void 0),w(e).parsedDateParts=e._a.slice(0),w(e).meridiem=e._meridiem,e._a[ye]=(f=e._locale,h=e._a[ye],null==(m=e._meridiem)?h:null!=f.meridiemHour?f.meridiemHour(h,m):(null!=f.isPM&&((p=f.isPM(m))&&h<12&&(h+=12),p||12!==h||(h=0)),h)),ft(e),ut(e)}else St(e);else _t(e);var f,h,m,p,y,v}function xt(e){var t,n,r,i,a=e._i,o=e._f;return e._locale=e._locale||ct(e._l),null===a||void 0===o&&""===a?y({nullInput:!0}):("string"==typeof a&&(e._i=a=e._locale.preparse(a)),S(a)?new b(ut(a)):(d(a)?e._d=a:s(o)?function(e){var t,n,r,i,a;if(0===e._f.length)return w(e).invalidFormat=!0,e._d=new Date(NaN);for(i=0;i<e._f.length;i++)a=0,t=v({},e),null!=e._useUTC&&(t._useUTC=e._useUTC),t._f=e._f[i],Mt(t),p(t)&&(a+=w(t).charsLeftOver,a+=10*w(t).unusedTokens.length,w(t).score=a,(null==r||a<r)&&(r=a,n=t));h(e,n||t)}(e):o?Mt(e):c(n=(t=e)._i)?t._d=new Date(g.now()):d(n)?t._d=new Date(n.valueOf()):"string"==typeof n?(r=t,null===(i=gt.exec(r._i))?(_t(r),!1===r._isValid&&(delete r._isValid,St(r),!1===r._isValid&&(delete r._isValid,g.createFromInputFallback(r)))):r._d=new Date(+i[1])):s(n)?(t._a=f(n.slice(0),function(e){return parseInt(e,10)}),ft(t)):l(n)?function(e){if(!e._d){var t=A(e._i);e._a=f([t.year,t.month,t.day||t.date,t.hour,t.minute,t.second,t.millisecond],function(e){return e&&parseInt(e,10)}),ft(e)}}(t):u(n)?t._d=new Date(n):g.createFromInputFallback(t),p(e)||(e._d=null),e))}function kt(e,t,n,r,i){var a,o={};return!0!==n&&!1!==n||(r=n,n=void 0),(l(e)&&function(e){if(Object.getOwnPropertyNames)return 0===Object.getOwnPropertyNames(e).length;var t;for(t in e)if(e.hasOwnProperty(t))return!1;return!0}(e)||s(e)&&0===e.length)&&(e=void 0),o._isAMomentObject=!0,o._useUTC=o._isUTC=i,o._l=n,o._i=e,o._f=t,o._strict=r,(a=new b(ut(xt(o))))._nextDay&&(a.add(1,"d"),a._nextDay=void 0),a}function Tt(e,t,n,r){return kt(e,t,n,r,!1)}g.createFromInputFallback=n("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",function(e){e._d=new Date(e._i+(e._useUTC?" UTC":""))}),g.ISO_8601=function(){},g.RFC_2822=function(){};var Dt=n("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",function(){var e=Tt.apply(null,arguments);return this.isValid()&&e.isValid()?e<this?this:e:y()}),Lt=n("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",function(){var e=Tt.apply(null,arguments);return this.isValid()&&e.isValid()?this<e?this:e:y()});function Ot(e,t){var n,r;if(1===t.length&&s(t[0])&&(t=t[0]),!t.length)return Tt();for(n=t[0],r=1;r<t.length;++r)t[r].isValid()&&!t[r][e](n)||(n=t[r]);return n}var Ct=["year","quarter","month","week","day","hour","minute","second","millisecond"];function Yt(e){var t=A(e),n=t.year||0,r=t.quarter||0,i=t.month||0,a=t.week||t.isoWeek||0,o=t.day||0,s=t.hour||0,l=t.minute||0,c=t.second||0,u=t.millisecond||0;this._isValid=function(e){for(var t in e)if(-1===xe.call(Ct,t)||null!=e[t]&&isNaN(e[t]))return!1;for(var n=!1,r=0;r<Ct.length;++r)if(e[Ct[r]]){if(n)return!1;parseFloat(e[Ct[r]])!==x(e[Ct[r]])&&(n=!0)}return!0}(t),this._milliseconds=+u+1e3*c+6e4*l+1e3*s*60*60,this._days=+o+7*a,this._months=+i+3*r+12*n,this._data={},this._locale=ct(),this._bubble()}function Et(e){return e instanceof Yt}function Nt(e){return e<0?-1*Math.round(-1*e):Math.round(e)}function At(e,n){I(e,0,0,function(){var e=this.utcOffset(),t="+";return e<0&&(e=-e,t="-"),t+j(~~(e/60),2)+n+j(~~e%60,2)})}At("Z",":"),At("ZZ",""),le("Z",ae),le("ZZ",ae),de(["Z","ZZ"],function(e,t,n){n._useUTC=!0,n._tzm=Pt(ae,e)});var Ht=/([\+\-]|\d\d)/gi;function Pt(e,t){var n=(t||"").match(e);if(null===n)return null;var r=((n[n.length-1]||[])+"").match(Ht)||["-",0,0],i=60*r[1]+x(r[2]);return 0===i?0:"+"===r[0]?i:-i}function jt(e,t){var n,r;return t._isUTC?(n=t.clone(),r=(S(e)||d(e)?e.valueOf():Tt(e).valueOf())-n.valueOf(),n._d.setTime(n._d.valueOf()+r),g.updateOffset(n,!1),n):Tt(e).local()}function Rt(e){return 15*-Math.round(e._d.getTimezoneOffset()/15)}function Wt(){return!!this.isValid()&&this._isUTC&&0===this._offset}g.updateOffset=function(){};var Ft=/^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/,qt=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;function It(e,t){var n,r,i,a,o,s,l=e,c=null;return Et(e)?l={ms:e._milliseconds,d:e._days,M:e._months}:u(e)?(l={},t?l[t]=e:l.milliseconds=e):(c=Ft.exec(e))?(n="-"===c[1]?-1:1,l={y:0,d:x(c[pe])*n,h:x(c[ye])*n,m:x(c[ve])*n,s:x(c[ge])*n,ms:x(Nt(1e3*c[_e]))*n}):(c=qt.exec(e))?(n="-"===c[1]?-1:1,l={y:Ut(c[2],n),M:Ut(c[3],n),w:Ut(c[4],n),d:Ut(c[5],n),h:Ut(c[6],n),m:Ut(c[7],n),s:Ut(c[8],n)}):null==l?l={}:"object"==typeof l&&("from"in l||"to"in l)&&(a=Tt(l.from),o=Tt(l.to),i=a.isValid()&&o.isValid()?(o=jt(o,a),a.isBefore(o)?s=zt(a,o):((s=zt(o,a)).milliseconds=-s.milliseconds,s.months=-s.months),s):{milliseconds:0,months:0},(l={}).ms=i.milliseconds,l.M=i.months),r=new Yt(l),Et(e)&&_(e,"_locale")&&(r._locale=e._locale),r}function Ut(e,t){var n=e&&parseFloat(e.replace(",","."));return(isNaN(n)?0:n)*t}function zt(e,t){var n={};return n.months=t.month()-e.month()+12*(t.year()-e.year()),e.clone().add(n.months,"M").isAfter(t)&&--n.months,n.milliseconds=+t-+e.clone().add(n.months,"M"),n}function Gt(r,i){return function(e,t){var n;return null===t||isNaN(+t)||(D(i,"moment()."+i+"(period, number) is deprecated. Please use moment()."+i+"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."),n=e,e=t,t=n),Vt(this,It(e="string"==typeof e?+e:e,t),r),this}}function Vt(e,t,n,r){var i=t._milliseconds,a=Nt(t._days),o=Nt(t._months);e.isValid()&&(r=null==r||r,o&&Ne(e,De(e,"Month")+o*n),a&&Le(e,"Date",De(e,"Date")+a*n),i&&e._d.setTime(e._d.valueOf()+i*n),r&&g.updateOffset(e,a||o))}It.fn=Yt.prototype,It.invalid=function(){return It(NaN)};var Bt=Gt(1,"add"),Zt=Gt(-1,"subtract");function $t(e,t){var n=12*(t.year()-e.year())+(t.month()-e.month()),r=e.clone().add(n,"months");return-(n+(t-r<0?(t-r)/(r-e.clone().add(n-1,"months")):(t-r)/(e.clone().add(n+1,"months")-r)))||0}function Qt(e){var t;return void 0===e?this._locale._abbr:(null!=(t=ct(e))&&(this._locale=t),this)}g.defaultFormat="YYYY-MM-DDTHH:mm:ssZ",g.defaultFormatUtc="YYYY-MM-DDTHH:mm:ss[Z]";var Jt=n("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",function(e){return void 0===e?this.localeData():this.locale(e)});function Xt(){return this._locale}var Kt=126227808e5;function en(e,t){return(e%t+t)%t}function tn(e,t,n){return e<100&&0<=e?new Date(e+400,t,n)-Kt:new Date(e,t,n).valueOf()}function nn(e,t,n){return e<100&&0<=e?Date.UTC(e+400,t,n)-Kt:Date.UTC(e,t,n)}function rn(e,t){I(0,[e,e.length],0,t)}function an(e,t,n,r,i){var a;return null==e?qe(this,r,i).year:((a=Ie(e,r,i))<t&&(t=a),function(e,t,n,r,i){var a=Fe(e,t,n,r,i),o=Re(a.year,0,a.dayOfYear);return this.year(o.getUTCFullYear()),this.month(o.getUTCMonth()),this.date(o.getUTCDate()),this}.call(this,e,t,n,r,i))}I(0,["gg",2],0,function(){return this.weekYear()%100}),I(0,["GG",2],0,function(){return this.isoWeekYear()%100}),rn("gggg","weekYear"),rn("ggggg","weekYear"),rn("GGGG","isoWeekYear"),rn("GGGGG","isoWeekYear"),E("weekYear","gg"),E("isoWeekYear","GG"),P("weekYear",1),P("isoWeekYear",1),le("G",re),le("g",re),le("GG",Q,V),le("gg",Q,V),le("GGGG",ee,Z),le("gggg",ee,Z),le("GGGGG",te,$),le("ggggg",te,$),fe(["gggg","ggggg","GGGG","GGGGG"],function(e,t,n,r){t[r.substr(0,2)]=x(e)}),fe(["gg","GG"],function(e,t,n,r){t[r]=g.parseTwoDigitYear(e)}),I("Q",0,"Qo","quarter"),E("quarter","Q"),P("quarter",7),le("Q",G),de("Q",function(e,t){t[me]=3*(x(e)-1)}),I("D",["DD",2],"Do","date"),E("date","D"),P("date",9),le("D",Q),le("DD",Q,V),le("Do",function(e,t){return e?t._dayOfMonthOrdinalParse||t._ordinalParse:t._dayOfMonthOrdinalParseLenient}),de(["D","DD"],pe),de("Do",function(e,t){t[pe]=x(e.match(Q)[0])});var on=Te("Date",!0);I("DDD",["DDDD",3],"DDDo","dayOfYear"),E("dayOfYear","DDD"),P("dayOfYear",4),le("DDD",K),le("DDDD",B),de(["DDD","DDDD"],function(e,t,n){n._dayOfYear=x(e)}),I("m",["mm",2],0,"minute"),E("minute","m"),P("minute",14),le("m",Q),le("mm",Q,V),de(["m","mm"],ve);var sn=Te("Minutes",!1);I("s",["ss",2],0,"second"),E("second","s"),P("second",15),le("s",Q),le("ss",Q,V),de(["s","ss"],ge);var ln,cn=Te("Seconds",!1);for(I("S",0,0,function(){return~~(this.millisecond()/100)}),I(0,["SS",2],0,function(){return~~(this.millisecond()/10)}),I(0,["SSS",3],0,"millisecond"),I(0,["SSSS",4],0,function(){return 10*this.millisecond()}),I(0,["SSSSS",5],0,function(){return 100*this.millisecond()}),I(0,["SSSSSS",6],0,function(){return 1e3*this.millisecond()}),I(0,["SSSSSSS",7],0,function(){return 1e4*this.millisecond()}),I(0,["SSSSSSSS",8],0,function(){return 1e5*this.millisecond()}),I(0,["SSSSSSSSS",9],0,function(){return 1e6*this.millisecond()}),E("millisecond","ms"),P("millisecond",16),le("S",K,G),le("SS",K,V),le("SSS",K,B),ln="SSSS";ln.length<=9;ln+="S")le(ln,ne);function un(e,t){t[_e]=x(1e3*("0."+e))}for(ln="S";ln.length<=9;ln+="S")de(ln,un);var dn=Te("Milliseconds",!1);I("z",0,0,"zoneAbbr"),I("zz",0,0,"zoneName");var fn=b.prototype;function hn(e){return e}fn.add=Bt,fn.calendar=function(e,t){var n=e||Tt(),r=jt(n,this).startOf("day"),i=g.calendarFormat(this,r)||"sameElse",a=t&&(L(t[i])?t[i].call(this,n):t[i]);return this.format(a||this.localeData().calendar(i,this,Tt(n)))},fn.clone=function(){return new b(this)},fn.diff=function(e,t,n){var r,i,a;if(!this.isValid())return NaN;if(!(r=jt(e,this)).isValid())return NaN;switch(i=6e4*(r.utcOffset()-this.utcOffset()),t=N(t)){case"year":a=$t(this,r)/12;break;case"month":a=$t(this,r);break;case"quarter":a=$t(this,r)/3;break;case"second":a=(this-r)/1e3;break;case"minute":a=(this-r)/6e4;break;case"hour":a=(this-r)/36e5;break;case"day":a=(this-r-i)/864e5;break;case"week":a=(this-r-i)/6048e5;break;default:a=this-r}return n?a:M(a)},fn.endOf=function(e){var t;if(void 0===(e=N(e))||"millisecond"===e||!this.isValid())return this;var n=this._isUTC?nn:tn;switch(e){case"year":t=n(this.year()+1,0,1)-1;break;case"quarter":t=n(this.year(),this.month()-this.month()%3+3,1)-1;break;case"month":t=n(this.year(),this.month()+1,1)-1;break;case"week":t=n(this.year(),this.month(),this.date()-this.weekday()+7)-1;break;case"isoWeek":t=n(this.year(),this.month(),this.date()-(this.isoWeekday()-1)+7)-1;break;case"day":case"date":t=n(this.year(),this.month(),this.date()+1)-1;break;case"hour":t=this._d.valueOf(),t+=36e5-en(t+(this._isUTC?0:6e4*this.utcOffset()),36e5)-1;break;case"minute":t=this._d.valueOf(),t+=6e4-en(t,6e4)-1;break;case"second":t=this._d.valueOf(),t+=1e3-en(t,1e3)-1}return this._d.setTime(t),g.updateOffset(this,!0),this},fn.format=function(e){e||(e=this.isUtc()?g.defaultFormatUtc:g.defaultFormat);var t=U(this,e);return this.localeData().postformat(t)},fn.from=function(e,t){return this.isValid()&&(S(e)&&e.isValid()||Tt(e).isValid())?It({to:this,from:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()},fn.fromNow=function(e){return this.from(Tt(),e)},fn.to=function(e,t){return this.isValid()&&(S(e)&&e.isValid()||Tt(e).isValid())?It({from:this,to:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()},fn.toNow=function(e){return this.to(Tt(),e)},fn.get=function(e){return L(this[e=N(e)])?this[e]():this},fn.invalidAt=function(){return w(this).overflow},fn.isAfter=function(e,t){var n=S(e)?e:Tt(e);return!(!this.isValid()||!n.isValid())&&("millisecond"===(t=N(t)||"millisecond")?this.valueOf()>n.valueOf():n.valueOf()<this.clone().startOf(t).valueOf())},fn.isBefore=function(e,t){var n=S(e)?e:Tt(e);return!(!this.isValid()||!n.isValid())&&("millisecond"===(t=N(t)||"millisecond")?this.valueOf()<n.valueOf():this.clone().endOf(t).valueOf()<n.valueOf())},fn.isBetween=function(e,t,n,r){var i=S(e)?e:Tt(e),a=S(t)?t:Tt(t);return!!(this.isValid()&&i.isValid()&&a.isValid())&&("("===(r=r||"()")[0]?this.isAfter(i,n):!this.isBefore(i,n))&&(")"===r[1]?this.isBefore(a,n):!this.isAfter(a,n))},fn.isSame=function(e,t){var n,r=S(e)?e:Tt(e);return!(!this.isValid()||!r.isValid())&&("millisecond"===(t=N(t)||"millisecond")?this.valueOf()===r.valueOf():(n=r.valueOf(),this.clone().startOf(t).valueOf()<=n&&n<=this.clone().endOf(t).valueOf()))},fn.isSameOrAfter=function(e,t){return this.isSame(e,t)||this.isAfter(e,t)},fn.isSameOrBefore=function(e,t){return this.isSame(e,t)||this.isBefore(e,t)},fn.isValid=function(){return p(this)},fn.lang=Jt,fn.locale=Qt,fn.localeData=Xt,fn.max=Lt,fn.min=Dt,fn.parsingFlags=function(){return h({},w(this))},fn.set=function(e,t){if("object"==typeof e)for(var n=function(e){var t=[];for(var n in e)t.push({unit:n,priority:H[n]});return t.sort(function(e,t){return e.priority-t.priority}),t}(e=A(e)),r=0;r<n.length;r++)this[n[r].unit](e[n[r].unit]);else if(L(this[e=N(e)]))return this[e](t);return this},fn.startOf=function(e){var t;if(void 0===(e=N(e))||"millisecond"===e||!this.isValid())return this;var n=this._isUTC?nn:tn;switch(e){case"year":t=n(this.year(),0,1);break;case"quarter":t=n(this.year(),this.month()-this.month()%3,1);break;case"month":t=n(this.year(),this.month(),1);break;case"week":t=n(this.year(),this.month(),this.date()-this.weekday());break;case"isoWeek":t=n(this.year(),this.month(),this.date()-(this.isoWeekday()-1));break;case"day":case"date":t=n(this.year(),this.month(),this.date());break;case"hour":t=this._d.valueOf(),t-=en(t+(this._isUTC?0:6e4*this.utcOffset()),36e5);break;case"minute":t=this._d.valueOf(),t-=en(t,6e4);break;case"second":t=this._d.valueOf(),t-=en(t,1e3)}return this._d.setTime(t),g.updateOffset(this,!0),this},fn.subtract=Zt,fn.toArray=function(){var e=this;return[e.year(),e.month(),e.date(),e.hour(),e.minute(),e.second(),e.millisecond()]},fn.toObject=function(){var e=this;return{years:e.year(),months:e.month(),date:e.date(),hours:e.hours(),minutes:e.minutes(),seconds:e.seconds(),milliseconds:e.milliseconds()}},fn.toDate=function(){return new Date(this.valueOf())},fn.toISOString=function(e){if(!this.isValid())return null;var t=!0!==e,n=t?this.clone().utc():this;return n.year()<0||9999<n.year()?U(n,t?"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"):L(Date.prototype.toISOString)?t?this.toDate().toISOString():new Date(this.valueOf()+60*this.utcOffset()*1e3).toISOString().replace("Z",U(n,"Z")):U(n,t?"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYY-MM-DD[T]HH:mm:ss.SSSZ")},fn.inspect=function(){if(!this.isValid())return"moment.invalid(/* "+this._i+" */)";var e="moment",t="";this.isLocal()||(e=0===this.utcOffset()?"moment.utc":"moment.parseZone",t="Z");var n="["+e+'("]',r=0<=this.year()&&this.year()<=9999?"YYYY":"YYYYYY",i=t+'[")]';return this.format(n+r+"-MM-DD[T]HH:mm:ss.SSS"+i)},fn.toJSON=function(){return this.isValid()?this.toISOString():null},fn.toString=function(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")},fn.unix=function(){return Math.floor(this.valueOf()/1e3)},fn.valueOf=function(){return this._d.valueOf()-6e4*(this._offset||0)},fn.creationData=function(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}},fn.year=ke,fn.isLeapYear=function(){return Me(this.year())},fn.weekYear=function(e){return an.call(this,e,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)},fn.isoWeekYear=function(e){return an.call(this,e,this.isoWeek(),this.isoWeekday(),1,4)},fn.quarter=fn.quarters=function(e){return null==e?Math.ceil((this.month()+1)/3):this.month(3*(e-1)+this.month()%3)},fn.month=Ae,fn.daysInMonth=function(){return Oe(this.year(),this.month())},fn.week=fn.weeks=function(e){var t=this.localeData().week(this);return null==e?t:this.add(7*(e-t),"d")},fn.isoWeek=fn.isoWeeks=function(e){var t=qe(this,1,4).week;return null==e?t:this.add(7*(e-t),"d")},fn.weeksInYear=function(){var e=this.localeData()._week;return Ie(this.year(),e.dow,e.doy)},fn.isoWeeksInYear=function(){return Ie(this.year(),1,4)},fn.date=on,fn.day=fn.days=function(e){if(!this.isValid())return null!=e?this:NaN;var t,n,r=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=e?(t=e,n=this.localeData(),e="string"!=typeof t?t:isNaN(t)?"number"==typeof(t=n.weekdaysParse(t))?t:null:parseInt(t,10),this.add(e-r,"d")):r},fn.weekday=function(e){if(!this.isValid())return null!=e?this:NaN;var t=(this.day()+7-this.localeData()._week.dow)%7;return null==e?t:this.add(e-t,"d")},fn.isoWeekday=function(e){if(!this.isValid())return null!=e?this:NaN;if(null==e)return this.day()||7;var t,n,r=(t=e,n=this.localeData(),"string"==typeof t?n.weekdaysParse(t)%7||7:isNaN(t)?null:t);return this.day(this.day()%7?r:r-7)},fn.dayOfYear=function(e){var t=Math.round((this.clone().startOf("day")-this.clone().startOf("year"))/864e5)+1;return null==e?t:this.add(e-t,"d")},fn.hour=fn.hours=tt,fn.minute=fn.minutes=sn,fn.second=fn.seconds=cn,fn.millisecond=fn.milliseconds=dn,fn.utcOffset=function(e,t,n){var r,i=this._offset||0;if(!this.isValid())return null!=e?this:NaN;if(null==e)return this._isUTC?i:Rt(this);if("string"==typeof e){if(null===(e=Pt(ae,e)))return this}else Math.abs(e)<16&&!n&&(e*=60);return!this._isUTC&&t&&(r=Rt(this)),this._offset=e,this._isUTC=!0,null!=r&&this.add(r,"m"),i!==e&&(!t||this._changeInProgress?Vt(this,It(e-i,"m"),1,!1):this._changeInProgress||(this._changeInProgress=!0,g.updateOffset(this,!0),this._changeInProgress=null)),this},fn.utc=function(e){return this.utcOffset(0,e)},fn.local=function(e){return this._isUTC&&(this.utcOffset(0,e),this._isUTC=!1,e&&this.subtract(Rt(this),"m")),this},fn.parseZone=function(){if(null!=this._tzm)this.utcOffset(this._tzm,!1,!0);else if("string"==typeof this._i){var e=Pt(ie,this._i);null!=e?this.utcOffset(e):this.utcOffset(0,!0)}return this},fn.hasAlignedHourOffset=function(e){return!!this.isValid()&&(e=e?Tt(e).utcOffset():0,(this.utcOffset()-e)%60==0)},fn.isDST=function(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()},fn.isLocal=function(){return!!this.isValid()&&!this._isUTC},fn.isUtcOffset=function(){return!!this.isValid()&&this._isUTC},fn.isUtc=Wt,fn.isUTC=Wt,fn.zoneAbbr=function(){return this._isUTC?"UTC":""},fn.zoneName=function(){return this._isUTC?"Coordinated Universal Time":""},fn.dates=n("dates accessor is deprecated. Use date instead.",on),fn.months=n("months accessor is deprecated. Use month instead",Ae),fn.years=n("years accessor is deprecated. Use year instead",ke),fn.zone=n("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",function(e,t){return null!=e?("string"!=typeof e&&(e=-e),this.utcOffset(e,t),this):-this.utcOffset()}),fn.isDSTShifted=n("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",function(){if(!c(this._isDSTShifted))return this._isDSTShifted;var e={};if(v(e,this),(e=xt(e))._a){var t=e._isUTC?m(e._a):Tt(e._a);this._isDSTShifted=this.isValid()&&0<o(e._a,t.toArray())}else this._isDSTShifted=!1;return this._isDSTShifted});var mn=C.prototype;function pn(e,t,n,r){var i=ct(),a=m().set(r,t);return i[n](a,e)}function yn(e,t,n){if(u(e)&&(t=e,e=void 0),e=e||"",null!=t)return pn(e,t,n,"month");var r,i=[];for(r=0;r<12;r++)i[r]=pn(e,r,n,"month");return i}function vn(e,t,n,r){"boolean"==typeof e?u(t)&&(n=t,t=void 0):(t=e,e=!1,u(n=t)&&(n=t,t=void 0)),t=t||"";var i,a=ct(),o=e?a._week.dow:0;if(null!=n)return pn(t,(n+o)%7,r,"day");var s=[];for(i=0;i<7;i++)s[i]=pn(t,(i+o)%7,r,"day");return s}mn.calendar=function(e,t,n){var r=this._calendar[e]||this._calendar.sameElse;return L(r)?r.call(t,n):r},mn.longDateFormat=function(e){var t=this._longDateFormat[e],n=this._longDateFormat[e.toUpperCase()];return t||!n?t:(this._longDateFormat[e]=n.replace(/MMMM|MM|DD|dddd/g,function(e){return e.slice(1)}),this._longDateFormat[e])},mn.invalidDate=function(){return this._invalidDate},mn.ordinal=function(e){return this._ordinal.replace("%d",e)},mn.preparse=hn,mn.postformat=hn,mn.relativeTime=function(e,t,n,r){var i=this._relativeTime[n];return L(i)?i(e,t,n,r):i.replace(/%d/i,e)},mn.pastFuture=function(e,t){var n=this._relativeTime[0<e?"future":"past"];return L(n)?n(t):n.replace(/%s/i,t)},mn.set=function(e){var t,n;for(n in e)L(t=e[n])?this[n]=t:this["_"+n]=t;this._config=e,this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+"|"+/\d{1,2}/.source)},mn.months=function(e,t){return e?s(this._months)?this._months[e.month()]:this._months[(this._months.isFormat||Ce).test(t)?"format":"standalone"][e.month()]:s(this._months)?this._months:this._months.standalone},mn.monthsShort=function(e,t){return e?s(this._monthsShort)?this._monthsShort[e.month()]:this._monthsShort[Ce.test(t)?"format":"standalone"][e.month()]:s(this._monthsShort)?this._monthsShort:this._monthsShort.standalone},mn.monthsParse=function(e,t,n){var r,i,a;if(this._monthsParseExact)return function(e,t,n){var r,i,a,o=e.toLocaleLowerCase();if(!this._monthsParse)for(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],r=0;r<12;++r)a=m([2e3,r]),this._shortMonthsParse[r]=this.monthsShort(a,"").toLocaleLowerCase(),this._longMonthsParse[r]=this.months(a,"").toLocaleLowerCase();return n?"MMM"===t?-1!==(i=xe.call(this._shortMonthsParse,o))?i:null:-1!==(i=xe.call(this._longMonthsParse,o))?i:null:"MMM"===t?-1!==(i=xe.call(this._shortMonthsParse,o))?i:-1!==(i=xe.call(this._longMonthsParse,o))?i:null:-1!==(i=xe.call(this._longMonthsParse,o))?i:-1!==(i=xe.call(this._shortMonthsParse,o))?i:null}.call(this,e,t,n);for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),r=0;r<12;r++){if(i=m([2e3,r]),n&&!this._longMonthsParse[r]&&(this._longMonthsParse[r]=new RegExp("^"+this.months(i,"").replace(".","")+"$","i"),this._shortMonthsParse[r]=new RegExp("^"+this.monthsShort(i,"").replace(".","")+"$","i")),n||this._monthsParse[r]||(a="^"+this.months(i,"")+"|^"+this.monthsShort(i,""),this._monthsParse[r]=new RegExp(a.replace(".",""),"i")),n&&"MMMM"===t&&this._longMonthsParse[r].test(e))return r;if(n&&"MMM"===t&&this._shortMonthsParse[r].test(e))return r;if(!n&&this._monthsParse[r].test(e))return r}},mn.monthsRegex=function(e){return this._monthsParseExact?(_(this,"_monthsRegex")||je.call(this),e?this._monthsStrictRegex:this._monthsRegex):(_(this,"_monthsRegex")||(this._monthsRegex=Pe),this._monthsStrictRegex&&e?this._monthsStrictRegex:this._monthsRegex)},mn.monthsShortRegex=function(e){return this._monthsParseExact?(_(this,"_monthsRegex")||je.call(this),e?this._monthsShortStrictRegex:this._monthsShortRegex):(_(this,"_monthsShortRegex")||(this._monthsShortRegex=He),this._monthsShortStrictRegex&&e?this._monthsShortStrictRegex:this._monthsShortRegex)},mn.week=function(e){return qe(e,this._week.dow,this._week.doy).week},mn.firstDayOfYear=function(){return this._week.doy},mn.firstDayOfWeek=function(){return this._week.dow},mn.weekdays=function(e,t){var n=s(this._weekdays)?this._weekdays:this._weekdays[e&&!0!==e&&this._weekdays.isFormat.test(t)?"format":"standalone"];return!0===e?Ue(n,this._week.dow):e?n[e.day()]:n},mn.weekdaysMin=function(e){return!0===e?Ue(this._weekdaysMin,this._week.dow):e?this._weekdaysMin[e.day()]:this._weekdaysMin},mn.weekdaysShort=function(e){return!0===e?Ue(this._weekdaysShort,this._week.dow):e?this._weekdaysShort[e.day()]:this._weekdaysShort},mn.weekdaysParse=function(e,t,n){var r,i,a;if(this._weekdaysParseExact)return function(e,t,n){var r,i,a,o=e.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],r=0;r<7;++r)a=m([2e3,1]).day(r),this._minWeekdaysParse[r]=this.weekdaysMin(a,"").toLocaleLowerCase(),this._shortWeekdaysParse[r]=this.weekdaysShort(a,"").toLocaleLowerCase(),this._weekdaysParse[r]=this.weekdays(a,"").toLocaleLowerCase();return n?"dddd"===t?-1!==(i=xe.call(this._weekdaysParse,o))?i:null:"ddd"===t?-1!==(i=xe.call(this._shortWeekdaysParse,o))?i:null:-1!==(i=xe.call(this._minWeekdaysParse,o))?i:null:"dddd"===t?-1!==(i=xe.call(this._weekdaysParse,o))?i:-1!==(i=xe.call(this._shortWeekdaysParse,o))?i:-1!==(i=xe.call(this._minWeekdaysParse,o))?i:null:"ddd"===t?-1!==(i=xe.call(this._shortWeekdaysParse,o))?i:-1!==(i=xe.call(this._weekdaysParse,o))?i:-1!==(i=xe.call(this._minWeekdaysParse,o))?i:null:-1!==(i=xe.call(this._minWeekdaysParse,o))?i:-1!==(i=xe.call(this._weekdaysParse,o))?i:-1!==(i=xe.call(this._shortWeekdaysParse,o))?i:null}.call(this,e,t,n);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),r=0;r<7;r++){if(i=m([2e3,1]).day(r),n&&!this._fullWeekdaysParse[r]&&(this._fullWeekdaysParse[r]=new RegExp("^"+this.weekdays(i,"").replace(".","\\.?")+"$","i"),this._shortWeekdaysParse[r]=new RegExp("^"+this.weekdaysShort(i,"").replace(".","\\.?")+"$","i"),this._minWeekdaysParse[r]=new RegExp("^"+this.weekdaysMin(i,"").replace(".","\\.?")+"$","i")),this._weekdaysParse[r]||(a="^"+this.weekdays(i,"")+"|^"+this.weekdaysShort(i,"")+"|^"+this.weekdaysMin(i,""),this._weekdaysParse[r]=new RegExp(a.replace(".",""),"i")),n&&"dddd"===t&&this._fullWeekdaysParse[r].test(e))return r;if(n&&"ddd"===t&&this._shortWeekdaysParse[r].test(e))return r;if(n&&"dd"===t&&this._minWeekdaysParse[r].test(e))return r;if(!n&&this._weekdaysParse[r].test(e))return r}},mn.weekdaysRegex=function(e){return this._weekdaysParseExact?(_(this,"_weekdaysRegex")||Qe.call(this),e?this._weekdaysStrictRegex:this._weekdaysRegex):(_(this,"_weekdaysRegex")||(this._weekdaysRegex=Be),this._weekdaysStrictRegex&&e?this._weekdaysStrictRegex:this._weekdaysRegex)},mn.weekdaysShortRegex=function(e){return this._weekdaysParseExact?(_(this,"_weekdaysRegex")||Qe.call(this),e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(_(this,"_weekdaysShortRegex")||(this._weekdaysShortRegex=Ze),this._weekdaysShortStrictRegex&&e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)},mn.weekdaysMinRegex=function(e){return this._weekdaysParseExact?(_(this,"_weekdaysRegex")||Qe.call(this),e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(_(this,"_weekdaysMinRegex")||(this._weekdaysMinRegex=$e),this._weekdaysMinStrictRegex&&e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)},mn.isPM=function(e){return"p"===(e+"").toLowerCase().charAt(0)},mn.meridiem=function(e,t,n){return 11<e?n?"pm":"PM":n?"am":"AM"},st("en",{dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(e){var t=e%10;return e+(1===x(e%100/10)?"th":1===t?"st":2===t?"nd":3===t?"rd":"th")}}),g.lang=n("moment.lang is deprecated. Use moment.locale instead.",st),g.langData=n("moment.langData is deprecated. Use moment.localeData instead.",ct);var gn=Math.abs;function _n(e,t,n,r){var i=It(t,n);return e._milliseconds+=r*i._milliseconds,e._days+=r*i._days,e._months+=r*i._months,e._bubble()}function wn(e){return e<0?Math.floor(e):Math.ceil(e)}function bn(e){return 4800*e/146097}function Sn(e){return 146097*e/4800}function Mn(e){return function(){return this.as(e)}}var xn=Mn("ms"),kn=Mn("s"),Tn=Mn("m"),Dn=Mn("h"),Ln=Mn("d"),On=Mn("w"),Cn=Mn("M"),Yn=Mn("Q"),En=Mn("y");function Nn(e){return function(){return this.isValid()?this._data[e]:NaN}}var An=Nn("milliseconds"),Hn=Nn("seconds"),Pn=Nn("minutes"),jn=Nn("hours"),Rn=Nn("days"),Wn=Nn("months"),Fn=Nn("years"),qn=Math.round,In={ss:44,s:45,m:45,h:22,d:26,M:11},Un=Math.abs;function zn(e){return(0<e)-(e<0)||+e}function Gn(){if(!this.isValid())return this.localeData().invalidDate();var e,t,n=Un(this._milliseconds)/1e3,r=Un(this._days),i=Un(this._months);t=M((e=M(n/60))/60),n%=60,e%=60;var a=M(i/12),o=i%=12,s=r,l=t,c=e,u=n?n.toFixed(3).replace(/\.?0+$/,""):"",d=this.asSeconds();if(!d)return"P0D";var f=d<0?"-":"",h=zn(this._months)!==zn(d)?"-":"",m=zn(this._days)!==zn(d)?"-":"",p=zn(this._milliseconds)!==zn(d)?"-":"";return f+"P"+(a?h+a+"Y":"")+(o?h+o+"M":"")+(s?m+s+"D":"")+(l||c||u?"T":"")+(l?p+l+"H":"")+(c?p+c+"M":"")+(u?p+u+"S":"")}var Vn=Yt.prototype;return Vn.isValid=function(){return this._isValid},Vn.abs=function(){var e=this._data;return this._milliseconds=gn(this._milliseconds),this._days=gn(this._days),this._months=gn(this._months),e.milliseconds=gn(e.milliseconds),e.seconds=gn(e.seconds),e.minutes=gn(e.minutes),e.hours=gn(e.hours),e.months=gn(e.months),e.years=gn(e.years),this},Vn.add=function(e,t){return _n(this,e,t,1)},Vn.subtract=function(e,t){return _n(this,e,t,-1)},Vn.as=function(e){if(!this.isValid())return NaN;var t,n,r=this._milliseconds;if("month"===(e=N(e))||"quarter"===e||"year"===e)switch(t=this._days+r/864e5,n=this._months+bn(t),e){case"month":return n;case"quarter":return n/3;case"year":return n/12}else switch(t=this._days+Math.round(Sn(this._months)),e){case"week":return t/7+r/6048e5;case"day":return t+r/864e5;case"hour":return 24*t+r/36e5;case"minute":return 1440*t+r/6e4;case"second":return 86400*t+r/1e3;case"millisecond":return Math.floor(864e5*t)+r;default:throw new Error("Unknown unit "+e)}},Vn.asMilliseconds=xn,Vn.asSeconds=kn,Vn.asMinutes=Tn,Vn.asHours=Dn,Vn.asDays=Ln,Vn.asWeeks=On,Vn.asMonths=Cn,Vn.asQuarters=Yn,Vn.asYears=En,Vn.valueOf=function(){return this.isValid()?this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*x(this._months/12):NaN},Vn._bubble=function(){var e,t,n,r,i,a=this._milliseconds,o=this._days,s=this._months,l=this._data;return 0<=a&&0<=o&&0<=s||a<=0&&o<=0&&s<=0||(a+=864e5*wn(Sn(s)+o),s=o=0),l.milliseconds=a%1e3,e=M(a/1e3),l.seconds=e%60,t=M(e/60),l.minutes=t%60,n=M(t/60),l.hours=n%24,s+=i=M(bn(o+=M(n/24))),o-=wn(Sn(i)),r=M(s/12),s%=12,l.days=o,l.months=s,l.years=r,this},Vn.clone=function(){return It(this)},Vn.get=function(e){return e=N(e),this.isValid()?this[e+"s"]():NaN},Vn.milliseconds=An,Vn.seconds=Hn,Vn.minutes=Pn,Vn.hours=jn,Vn.days=Rn,Vn.weeks=function(){return M(this.days()/7)},Vn.months=Wn,Vn.years=Fn,Vn.humanize=function(e){if(!this.isValid())return this.localeData().invalidDate();var t,n,r,i,a,o,s,l,c,u,d=this.localeData(),f=(t=!e,n=d,r=It(this).abs(),i=qn(r.as("s")),a=qn(r.as("m")),o=qn(r.as("h")),s=qn(r.as("d")),l=qn(r.as("M")),c=qn(r.as("y")),(u=i<=In.ss&&["s",i]||i<In.s&&["ss",i]||a<=1&&["m"]||a<In.m&&["mm",a]||o<=1&&["h"]||o<In.h&&["hh",o]||s<=1&&["d"]||s<In.d&&["dd",s]||l<=1&&["M"]||l<In.M&&["MM",l]||c<=1&&["y"]||["yy",c])[2]=t,u[3]=0<+this,u[4]=n,function(e,t,n,r,i){return i.relativeTime(t||1,!!n,e,r)}.apply(null,u));return e&&(f=d.pastFuture(+this,f)),d.postformat(f)},Vn.toISOString=Gn,Vn.toString=Gn,Vn.toJSON=Gn,Vn.locale=Qt,Vn.localeData=Xt,Vn.toIsoString=n("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",Gn),Vn.lang=Jt,I("X",0,0,"unix"),I("x",0,0,"valueOf"),le("x",re),le("X",/[+-]?\d+(\.\d{1,3})?/),de("X",function(e,t,n){n._d=new Date(1e3*parseFloat(e,10))}),de("x",function(e,t,n){n._d=new Date(x(e))}),g.version="2.24.0",e=Tt,g.fn=fn,g.min=function(){return Ot("isBefore",[].slice.call(arguments,0))},g.max=function(){return Ot("isAfter",[].slice.call(arguments,0))},g.now=function(){return Date.now?Date.now():+new Date},g.utc=m,g.unix=function(e){return Tt(1e3*e)},g.months=function(e,t){return yn(e,t,"months")},g.isDate=d,g.locale=st,g.invalid=y,g.duration=It,g.isMoment=S,g.weekdays=function(e,t,n){return vn(e,t,n,"weekdays")},g.parseZone=function(){return Tt.apply(null,arguments).parseZone()},g.localeData=ct,g.isDuration=Et,g.monthsShort=function(e,t){return yn(e,t,"monthsShort")},g.weekdaysMin=function(e,t,n){return vn(e,t,n,"weekdaysMin")},g.defineLocale=lt,g.updateLocale=function(e,t){if(null!=t){var n,r,i=nt;null!=(r=ot(e))&&(i=r._config),(n=new C(t=O(i,t))).parentLocale=rt[e],rt[e]=n,st(e)}else null!=rt[e]&&(null!=rt[e].parentLocale?rt[e]=rt[e].parentLocale:null!=rt[e]&&delete rt[e]);return rt[e]},g.locales=function(){return r(rt)},g.weekdaysShort=function(e,t,n){return vn(e,t,n,"weekdaysShort")},g.normalizeUnits=N,g.relativeTimeRounding=function(e){return void 0===e?qn:"function"==typeof e&&(qn=e,!0)},g.relativeTimeThreshold=function(e,t){return void 0!==In[e]&&(void 0===t?In[e]:(In[e]=t,"s"===e&&(In.ss=t-1),!0))},g.calendarFormat=function(e,t){var n=e.diff(t,"days",!0);return n<-6?"sameElse":n<-1?"lastWeek":n<0?"lastDay":n<1?"sameDay":n<2?"nextDay":n<7?"nextWeek":"sameElse"},g.prototype=fn,g.HTML5_FMT={DATETIME_LOCAL:"YYYY-MM-DDTHH:mm",DATETIME_LOCAL_SECONDS:"YYYY-MM-DDTHH:mm:ss",DATETIME_LOCAL_MS:"YYYY-MM-DDTHH:mm:ss.SSS",DATE:"YYYY-MM-DD",TIME:"HH:mm",TIME_SECONDS:"HH:mm:ss",TIME_MS:"HH:mm:ss.SSS",WEEK:"GGGG-[W]WW",MONTH:"YYYY-MM"},g});var countdown=function(e){"use strict";var h=1,m=2,p=4,y=8,v=16,g=32,_=64,w=128,b=256,S=512,M=1024,f=w|_|v|y|p|m,x=1e3,k=60,T=60,D=24,o=D*T*k*x,L=7,O=12,C=10,Y=10,E=10,N=Math.ceil,A=Math.floor;function H(e,t){var n=e.getTime();return e.setMonth(e.getMonth()+t),Math.round((e.getTime()-n)/o)}function s(e){var t=e.getTime(),n=new Date(t);return n.setMonth(e.getMonth()+1),Math.round((n.getTime()-t)/o)}function P(e,t){if(t=t instanceof Date||null!==t&&isFinite(t)?new Date(+t):new Date,!e)return t;var n=+e.value||0;return n?t.setTime(t.getTime()+n):((n=+e.milliseconds||0)&&t.setMilliseconds(t.getMilliseconds()+n),(n=+e.seconds||0)&&t.setSeconds(t.getSeconds()+n),(n=+e.minutes||0)&&t.setMinutes(t.getMinutes()+n),(n=+e.hours||0)&&t.setHours(t.getHours()+n),(n=+e.weeks||0)&&(n*=L),(n+=+e.days||0)&&t.setDate(t.getDate()+n),(n=+e.months||0)&&t.setMonth(t.getMonth()+n),(n=+e.millennia||0)&&(n*=E),(n+=+e.centuries||0)&&(n*=Y),(n+=+e.decades||0)&&(n*=C),(n+=+e.years||0)&&t.setFullYear(t.getFullYear()+n)),t}var i,a,l,c,u,d,j,R;function t(e,t){return j(e)+(1===e?i[t]:a[t])}function W(){}function F(e,t,n,r,i,a){return 0<=e[n]&&(t+=e[n],delete e[n]),(t/=i)+1<=1?0:0<=e[r]?(e[r]=+(e[r]+t).toFixed(a),function(e,t){switch(t){case"seconds":if(e.seconds!==k||isNaN(e.minutes))return;e.minutes++,e.seconds=0;case"minutes":if(e.minutes!==T||isNaN(e.hours))return;e.hours++,e.minutes=0;case"hours":if(e.hours!==D||isNaN(e.days))return;e.days++,e.hours=0;case"days":if(e.days!==L||isNaN(e.weeks))return;e.weeks++,e.days=0;case"weeks":if(e.weeks!==s(e.refMonth)/L||isNaN(e.months))return;e.months++,e.weeks=0;case"months":if(e.months!==O||isNaN(e.years))return;e.years++,e.months=0;case"years":if(e.years!==C||isNaN(e.decades))return;e.decades++,e.years=0;case"decades":if(e.decades!==Y||isNaN(e.centuries))return;e.centuries++,e.decades=0;case"centuries":if(e.centuries!==E||isNaN(e.millennia))return;e.millennia++,e.centuries=0}}(e,r),0):t}function q(e,t){var n,r,i,a=F(e,0,"milliseconds","seconds",x,t);if(a&&((a=F(e,a,"seconds","minutes",k,t))&&(a=F(e,a,"minutes","hours",T,t))&&(a=F(e,a,"hours","days",D,t))&&(a=F(e,a,"days","weeks",L,t))&&(a=F(e,a,"weeks","months",s(e.refMonth)/L,t))&&(a=F(e,a,"months","years",(n=e.refMonth,r=n.getTime(),(i=new Date(r)).setFullYear(n.getFullYear()+1),Math.round((i.getTime()-r)/o)/s(e.refMonth)),t))&&(a=F(e,a,"years","decades",C,t))&&(a=F(e,a,"decades","centuries",Y,t))&&(a=F(e,a,"centuries","millennia",E,t))))throw new Error("Fractional unit overflow")}function I(e,t,n,r,i,a){var o,s,l,c,u,d=new Date;if(e.start=t=t||d,e.end=n=n||d,e.units=r,e.value=n.getTime()-t.getTime(),e.value<0){var f=n;n=t,t=f}e.refMonth=new Date(t.getFullYear(),t.getMonth(),15,12,0,0);try{e.millennia=0,e.centuries=0,e.decades=0,e.years=n.getFullYear()-t.getFullYear(),e.months=n.getMonth()-t.getMonth(),e.weeks=0,e.days=n.getDate()-t.getDate(),e.hours=n.getHours()-t.getHours(),e.minutes=n.getMinutes()-t.getMinutes(),e.seconds=n.getSeconds()-t.getSeconds(),e.milliseconds=n.getMilliseconds()-t.getMilliseconds(),function(e){var t;for(e.milliseconds<0?(t=N(-e.milliseconds/x),e.seconds-=t,e.milliseconds+=t*x):e.milliseconds>=x&&(e.seconds+=A(e.milliseconds/x),e.milliseconds%=x),e.seconds<0?(t=N(-e.seconds/k),e.minutes-=t,e.seconds+=t*k):e.seconds>=k&&(e.minutes+=A(e.seconds/k),e.seconds%=k),e.minutes<0?(t=N(-e.minutes/T),e.hours-=t,e.minutes+=t*T):e.minutes>=T&&(e.hours+=A(e.minutes/T),e.minutes%=T),e.hours<0?(t=N(-e.hours/D),e.days-=t,e.hours+=t*D):e.hours>=D&&(e.days+=A(e.hours/D),e.hours%=D);e.days<0;)e.months--,e.days+=H(e.refMonth,1);e.days>=L&&(e.weeks+=A(e.days/L),e.days%=L),e.months<0?(t=N(-e.months/O),e.years-=t,e.months+=t*O):e.months>=O&&(e.years+=A(e.months/O),e.months%=O),e.years>=C&&(e.decades+=A(e.years/C),e.years%=C,e.decades>=Y&&(e.centuries+=A(e.decades/Y),e.decades%=Y,e.centuries>=E&&(e.millennia+=A(e.centuries/E),e.centuries%=E)))}(e),o=e,l=i,c=a,u=0,!((s=r)&M)||l<=u?(o.centuries+=o.millennia*E,delete o.millennia):o.millennia&&u++,!(s&S)||l<=u?(o.decades+=o.centuries*Y,delete o.centuries):o.centuries&&u++,!(s&b)||l<=u?(o.years+=o.decades*C,delete o.decades):o.decades&&u++,!(s&w)||l<=u?(o.months+=o.years*O,delete o.years):o.years&&u++,!(s&_)||l<=u?(o.months&&(o.days+=H(o.refMonth,o.months)),delete o.months,o.days>=L&&(o.weeks+=A(o.days/L),o.days%=L)):o.months&&u++,!(s&g)||l<=u?(o.days+=o.weeks*L,delete o.weeks):o.weeks&&u++,!(s&v)||l<=u?(o.hours+=o.days*D,delete o.days):o.days&&u++,!(s&y)||l<=u?(o.minutes+=o.hours*T,delete o.hours):o.hours&&u++,!(s&p)||l<=u?(o.seconds+=o.minutes*k,delete o.minutes):o.minutes&&u++,!(s&m)||l<=u?(o.milliseconds+=o.seconds*x,delete o.seconds):o.seconds&&u++,s&h&&!(l<=u)||q(o,c)}finally{delete e.refMonth}return e}function n(e,t,n,r,i){var a;n=+n||f,r=0<r?r:NaN,i=0<i?i<20?Math.round(i):20:0;var o=null;"function"==typeof e?(a=e,e=null):e instanceof Date||(e=null!==e&&isFinite(e)?new Date(+e):("object"==typeof o&&(o=e),null));var s=null;if("function"==typeof t?(a=t,t=null):t instanceof Date||(t=null!==t&&isFinite(t)?new Date(+t):("object"==typeof t&&(s=t),null)),o&&(e=P(o,t)),s&&(t=P(s,e)),!e&&!t)return new W;if(!a)return I(new W,e,t,n,r,i);var l,c,u=(c=n)&h?x/30:c&m?x:c&p?x*k:c&y?x*k*T:c&v?x*k*T*D:x*k*T*D*L,d=function(){a(I(new W,e,t,n,r,i),l)};return d(),l=setInterval(d,u)}W.prototype.toString=function(e){var t=R(this),n=t.length;if(!n)return e?""+e:u;if(1===n)return t[0];var r=l+t.pop();return t.join(c)+r},W.prototype.toHTML=function(e,t){e=e||"span";var n=R(this),r=n.length;if(!r)return(t=t||u)?"<"+e+">"+t+"</"+e+">":t;for(var i=0;i<r;i++)n[i]="<"+e+">"+n[i]+"</"+e+">";if(1===r)return n[0];var a=l+n.pop();return n.join(c)+a},W.prototype.addTo=function(e){return P(this,e)},R=function(e){var t=[],n=e.millennia;return n&&t.push(d(n,10)),(n=e.centuries)&&t.push(d(n,9)),(n=e.decades)&&t.push(d(n,8)),(n=e.years)&&t.push(d(n,7)),(n=e.months)&&t.push(d(n,6)),(n=e.weeks)&&t.push(d(n,5)),(n=e.days)&&t.push(d(n,4)),(n=e.hours)&&t.push(d(n,3)),(n=e.minutes)&&t.push(d(n,2)),(n=e.seconds)&&t.push(d(n,1)),(n=e.milliseconds)&&t.push(d(n,0)),t},n.MILLISECONDS=h,n.SECONDS=m,n.MINUTES=p,n.HOURS=y,n.DAYS=v,n.WEEKS=g,n.MONTHS=_,n.YEARS=w,n.DECADES=b,n.CENTURIES=S,n.MILLENNIA=M,n.DEFAULTS=f,n.ALL=M|S|b|w|_|g|v|y|p|m|h;var U=n.setFormat=function(e){if(e){if("singular"in e||"plural"in e){var t=e.singular||[];t.split&&(t=t.split("|"));var n=e.plural||[];n.split&&(n=n.split("|"));for(var r=0;r<=10;r++)i[r]=t[r]||i[r],a[r]=n[r]||a[r]}"string"==typeof e.last&&(l=e.last),"string"==typeof e.delim&&(c=e.delim),"string"==typeof e.empty&&(u=e.empty),"function"==typeof e.formatNumber&&(j=e.formatNumber),"function"==typeof e.formatter&&(d=e.formatter)}},r=n.resetFormat=function(){i=" millisecond| second| minute| hour| day| week| month| year| decade| century| millennium".split("|"),a=" milliseconds| seconds| minutes| hours| days| weeks| months| years| decades| centuries| millennia".split("|"),l=" and ",c=", ",u="",j=function(e){return e},d=t};return n.setLabels=function(e,t,n,r,i,a,o){U({singular:e,plural:t,last:n,delim:r,empty:i,formatNumber:a,formatter:o})},(n.resetLabels=r)(),e&&e.exports?e.exports=n:"function"==typeof window.define&&void 0!==window.define.amd&&window.define("countdown",[],function(){return n}),n}(module),tns=function(){var e=window,Yr=e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.msRequestAnimationFrame||function(e){return setTimeout(e,16)},t=window,Er=t.cancelAnimationFrame||t.mozCancelAnimationFrame||function(e){clearTimeout(e)};function Nr(){for(var e,t,n,r=arguments[0]||{},i=1,a=arguments.length;i<a;i++)if(null!==(e=arguments[i]))for(t in e)r!==(n=e[t])&&void 0!==n&&(r[t]=n);return r}function Ar(e){return 0<=["true","false"].indexOf(e)?JSON.parse(e):e}function Hr(e,t,n,r){if(r)try{e.setItem(t,n)}catch(e){}return n}function Pr(){var e=document,t=e.body;return t||((t=e.createElement("body")).fake=!0),t}var n=document.documentElement;function jr(e){var t="";return e.fake&&(t=n.style.overflow,e.style.background="",e.style.overflow=n.style.overflow="hidden",n.appendChild(e)),t}function Rr(e,t){e.fake&&(e.remove(),n.style.overflow=t,n.offsetHeight)}function Wr(e,t,n,r){"insertRule"in e?e.insertRule(t+"{"+n+"}",r):e.addRule(t,n,r)}function Fr(e){return("insertRule"in e?e.cssRules:e.rules).length}function qr(e,t,n){for(var r=0,i=e.length;r<i;r++)t.call(n,e[r],r)}var r="classList"in document.createElement("_"),Ir=r?function(e,t){return e.classList.contains(t)}:function(e,t){return 0<=e.className.indexOf(t)},Ur=r?function(e,t){Ir(e,t)||e.classList.add(t)}:function(e,t){Ir(e,t)||(e.className+=" "+t)},zr=r?function(e,t){Ir(e,t)&&e.classList.remove(t)}:function(e,t){Ir(e,t)&&(e.className=e.className.replace(t,""))};function Gr(e,t){return e.hasAttribute(t)}function Vr(e,t){return e.getAttribute(t)}function a(e){return void 0!==e.item}function Br(e,t){if(e=a(e)||e instanceof Array?e:[e],"[object Object]"===Object.prototype.toString.call(t))for(var n=e.length;n--;)for(var r in t)e[n].setAttribute(r,t[r])}function Zr(e,t){e=a(e)||e instanceof Array?e:[e];for(var n=(t=t instanceof Array?t:[t]).length,r=e.length;r--;)for(var i=n;i--;)e[r].removeAttribute(t[i])}function $r(e){for(var t=[],n=0,r=e.length;n<r;n++)t.push(e[n]);return t}function Qr(e,t){"none"!==e.style.display&&(e.style.display="none")}function Jr(e,t){"none"===e.style.display&&(e.style.display="")}function Xr(e){return"none"!==window.getComputedStyle(e).display}function Kr(t){if("string"==typeof t){var n=[t],r=t.charAt(0).toUpperCase()+t.substr(1);["Webkit","Moz","ms","O"].forEach(function(e){"ms"===e&&"transform"!==t||n.push(e+r)}),t=n}for(var e=document.createElement("fakeelement"),i=(t.length,0);i<t.length;i++){var a=t[i];if(void 0!==e.style[a])return a}return!1}function ei(e,t){var n=!1;return/^Webkit/.test(e)?n="webkit"+t+"End":/^O/.test(e)?n="o"+t+"End":e&&(n=t.toLowerCase()+"end"),n}var i=!1;try{var o=Object.defineProperty({},"passive",{get:function(){i=!0}});window.addEventListener("test",null,o)}catch(e){}var s=!!i&&{passive:!0};function ti(e,t,n){for(var r in t){var i=0<=["touchstart","touchmove"].indexOf(r)&&!n&&s;e.addEventListener(r,t[r],i)}}function ni(e,t){for(var n in t){var r=0<=["touchstart","touchmove"].indexOf(n)&&s;e.removeEventListener(n,t[n],r)}}function ri(){return{topics:{},on:function(e,t){this.topics[e]=this.topics[e]||[],this.topics[e].push(t)},off:function(e,t){if(this.topics[e])for(var n=0;n<this.topics[e].length;n++)if(this.topics[e][n]===t){this.topics[e].splice(n,1);break}},emit:function(t,n){n.type=t,this.topics[t]&&this.topics[t].forEach(function(e){e(n,t)})}}}Object.keys||(Object.keys=function(e){var t=[];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.push(n);return t}),"remove"in Element.prototype||(Element.prototype.remove=function(){this.parentNode&&this.parentNode.removeChild(this)});var ii=function(Y){Y=Nr({container:".slider",mode:"carousel",axis:"horizontal",items:1,gutter:0,edgePadding:0,fixedWidth:!1,autoWidth:!1,viewportMax:!1,slideBy:1,center:!1,controls:!0,controlsPosition:"top",controlsText:["prev","next"],controlsContainer:!1,prevButton:!1,nextButton:!1,nav:!0,navPosition:"top",navContainer:!1,navAsThumbnails:!1,arrowKeys:!1,speed:300,autoplay:!1,autoplayPosition:"top",autoplayTimeout:5e3,autoplayDirection:"forward",autoplayText:["start","stop"],autoplayHoverPause:!1,autoplayButton:!1,autoplayButtonOutput:!0,autoplayResetOnVisibility:!0,animateIn:"tns-fadeIn",animateOut:"tns-fadeOut",animateNormal:"tns-normal",animateDelay:!1,loop:!0,rewind:!1,autoHeight:!1,responsive:!1,lazyload:!1,lazyloadSelector:".tns-lazy-img",touch:!0,mouseDrag:!1,swipeAngle:15,nested:!1,preventActionWhenRunning:!1,preventScrollOnTouch:!1,freezable:!0,onInit:!1,useLocalStorage:!0},Y||{});var E=document,y=window,i={ENTER:13,SPACE:32,LEFT:37,RIGHT:39},t={},n=Y.useLocalStorage;if(n){var e=navigator.userAgent,r=new Date;try{(t=y.localStorage)?(t.setItem(r,r),n=t.getItem(r)==r,t.removeItem(r)):n=!1,n||(t={})}catch(e){n=!1}n&&(t.tnsApp&&t.tnsApp!==e&&["tC","tPL","tMQ","tTf","t3D","tTDu","tTDe","tADu","tADe","tTE","tAE"].forEach(function(e){t.removeItem(e)}),localStorage.tnsApp=e)}var a,o,s,l,c,u,d,v=t.tC?Ar(t.tC):Hr(t,"tC",function(){var e=document,t=Pr(),n=jr(t),r=e.createElement("div"),i=!1;t.appendChild(r);try{for(var a,o="(10px * 10)",s=["calc"+o,"-moz-calc"+o,"-webkit-calc"+o],l=0;l<3;l++)if(a=s[l],r.style.width=a,100===r.offsetWidth){i=a.replace(o,"");break}}catch(e){}return t.fake?Rr(t,n):r.remove(),i}(),n),g=t.tPL?Ar(t.tPL):Hr(t,"tPL",function(){var e,t=document,n=Pr(),r=jr(n),i=t.createElement("div"),a=t.createElement("div"),o="";i.className="tns-t-subp2",a.className="tns-t-ct";for(var s=0;s<70;s++)o+="<div></div>";return a.innerHTML=o,i.appendChild(a),n.appendChild(i),e=Math.abs(i.getBoundingClientRect().left-a.children[67].getBoundingClientRect().left)<2,n.fake?Rr(n,r):i.remove(),e}(),n),N=t.tMQ?Ar(t.tMQ):Hr(t,"tMQ",(o=document,s=Pr(),l=jr(s),c=o.createElement("div"),u=o.createElement("style"),d="@media all and (min-width:1px){.tns-mq-test{position:absolute}}",u.type="text/css",c.className="tns-mq-test",s.appendChild(u),s.appendChild(c),u.styleSheet?u.styleSheet.cssText=d:u.appendChild(o.createTextNode(d)),a=window.getComputedStyle?window.getComputedStyle(c).position:c.currentStyle.position,s.fake?Rr(s,l):c.remove(),"absolute"===a),n),f=t.tTf?Ar(t.tTf):Hr(t,"tTf",Kr("transform"),n),h=t.t3D?Ar(t.t3D):Hr(t,"t3D",function(e){if(!e)return!1;if(!window.getComputedStyle)return!1;var t,n=document,r=Pr(),i=jr(r),a=n.createElement("p"),o=9<e.length?"-"+e.slice(0,-9).toLowerCase()+"-":"";return o+="transform",r.insertBefore(a,null),a.style[e]="translate3d(1px,1px,1px)",t=window.getComputedStyle(a).getPropertyValue(o),r.fake?Rr(r,i):a.remove(),void 0!==t&&0<t.length&&"none"!==t}(f),n),_=t.tTDu?Ar(t.tTDu):Hr(t,"tTDu",Kr("transitionDuration"),n),m=t.tTDe?Ar(t.tTDe):Hr(t,"tTDe",Kr("transitionDelay"),n),w=t.tADu?Ar(t.tADu):Hr(t,"tADu",Kr("animationDuration"),n),p=t.tADe?Ar(t.tADe):Hr(t,"tADe",Kr("animationDelay"),n),b=t.tTE?Ar(t.tTE):Hr(t,"tTE",ei(_,"Transition"),n),S=t.tAE?Ar(t.tAE):Hr(t,"tAE",ei(w,"Animation"),n),M=y.console&&"function"==typeof y.console.warn,x=["container","controlsContainer","prevButton","nextButton","navContainer","autoplayButton"],k={};if(x.forEach(function(e){if("string"==typeof Y[e]){var t=Y[e],n=E.querySelector(t);if(k[e]=t,!n||!n.nodeName)return void(M&&console.warn("Can't find",Y[e]));Y[e]=n}}),!(Y.container.children.length<1)){var A=Y.responsive,H=Y.nested,P="carousel"===Y.mode;if(A){0 in A&&(Y=Nr(Y,A[0]),delete A[0]);var T={};for(var D in A){var L=A[D];L="number"==typeof L?{items:L}:L,T[D]=L}A=T,T=null}if(P||function e(t){for(var n in t)P||("slideBy"===n&&(t[n]="page"),"edgePadding"===n&&(t[n]=!1),"autoHeight"===n&&(t[n]=!1)),"responsive"===n&&e(t[n])}(Y),!P){Y.axis="horizontal",Y.slideBy="page",Y.edgePadding=!1;var j=Y.animateIn,R=Y.animateOut,O=Y.animateDelay,W=Y.animateNormal}var C,F,q="horizontal"===Y.axis,I=E.createElement("div"),U=E.createElement("div"),z=Y.container,G=z.parentNode,V=z.outerHTML,B=z.children,Z=B.length,$=cn(),Q=!1;A&&On(),P&&(z.className+=" tns-vpfix");var J,X,K,ee,te,ne,re,ie,ae=Y.autoWidth,oe=hn("fixedWidth"),se=hn("edgePadding"),le=hn("gutter"),ce=dn(),ue=hn("center"),de=ae?1:Math.floor(hn("items")),fe=hn("slideBy"),he=Y.viewportMax||Y.fixedWidthViewportWidth,me=hn("arrowKeys"),pe=hn("speed"),ye=Y.rewind,ve=!ye&&Y.loop,ge=hn("autoHeight"),_e=hn("controls"),we=hn("controlsText"),be=hn("nav"),Se=hn("touch"),Me=hn("mouseDrag"),xe=hn("autoplay"),ke=hn("autoplayTimeout"),Te=hn("autoplayText"),De=hn("autoplayHoverPause"),Le=hn("autoplayResetOnVisibility"),Oe=(ie=document.createElement("style"),re&&ie.setAttribute("media",re),document.querySelector("head").appendChild(ie),ie.sheet?ie.sheet:ie.styleSheet),Ce=Y.lazyload,Ye=(Y.lazyloadSelector,[]),Ee=ve?(te=function(){{if(ae||oe&&!he)return Z-1;var e=oe?"fixedWidth":"items",t=[];if((oe||Y[e]<Z)&&t.push(Y[e]),A)for(var n in A){var r=A[n][e];r&&(oe||r<Z)&&t.push(r)}return t.length||t.push(0),Math.ceil(oe?he/Math.min.apply(null,t):Math.max.apply(null,t))}}(),ne=P?Math.ceil((5*te-Z)/2):4*te-Z,ne=Math.max(te,ne),fn("edgePadding")?ne+1:ne):0,Ne=P?Z+2*Ee:Z+Ee,Ae=!(!oe&&!ae||ve),He=oe?nr():null,Pe=!P||!ve,je=q?"left":"top",Re="",We="",Fe=oe?function(){return ue&&!ve?Z-1:Math.ceil(-He/(oe+le))}:ae?function(){for(var e=Ne;e--;)if(J[e]>-He)return e}:function(){return ue&&P&&!ve?Z-1:ve||P?Math.max(0,Ne-Math.ceil(de)):Ne-1},qe=on(hn("startIndex")),Ie=qe,Ue=(an(),0),ze=ae?null:Fe(),Ge=Y.preventActionWhenRunning,Ve=Y.swipeAngle,Be=!Ve||"?",Ze=!1,$e=Y.onInit,Qe=new ri,Je=" tns-slider tns-"+Y.mode,Xe=z.id||(ee=window.tnsId,window.tnsId=ee?ee+1:1,"tns"+window.tnsId),Ke=hn("disable"),et=!1,tt=Y.freezable,nt=!(!tt||ae)&&Ln(),rt=!1,it={click:dr,keydown:function(e){e=_r(e);var t=[i.LEFT,i.RIGHT].indexOf(e.keyCode);0<=t&&(0===t?kt.disabled||dr(e,-1):Tt.disabled||dr(e,1))}},at={click:function(e){if(Ze){if(Ge)return;cr()}var t=wr(e=_r(e));for(;t!==Ct&&!Gr(t,"data-nav");)t=t.parentNode;if(Gr(t,"data-nav")){var n=At=Number(Vr(t,"data-nav")),r=oe||ae?n*Z/Et:n*de,i=ht?n:Math.min(Math.ceil(r),Z-1);ur(i,e),Ht===n&&(qt&&yr(),At=-1)}},keydown:function(e){e=_r(e);var t=E.activeElement;if(!Gr(t,"data-nav"))return;var n=[i.LEFT,i.RIGHT,i.ENTER,i.SPACE].indexOf(e.keyCode),r=Number(Vr(t,"data-nav"));0<=n&&(0===n?0<r&&gr(Ot[r-1]):1===n?r<Et-1&&gr(Ot[r+1]):ur(At=r,e))}},ot={mouseover:function(){qt&&(hr(),It=!0)},mouseout:function(){It&&(fr(),It=!1)}},st={visibilitychange:function(){E.hidden?qt&&(hr(),zt=!0):zt&&(fr(),zt=!1)}},lt={keydown:function(e){e=_r(e);var t=[i.LEFT,i.RIGHT].indexOf(e.keyCode);0<=t&&dr(e,0===t?-1:1)}},ct={touchstart:xr,touchmove:kr,touchend:Tr,touchcancel:Tr},ut={mousedown:xr,mousemove:kr,mouseup:Tr,mouseleave:Tr},dt=fn("controls"),ft=fn("nav"),ht=!!ae||Y.navAsThumbnails,mt=fn("autoplay"),pt=fn("touch"),yt=fn("mouseDrag"),vt="tns-slide-active",gt="tns-complete",_t={load:function(e){Rn(wr(e))},error:function(e){t=wr(e),Ur(t,"failed"),Wn(t);var t}},wt="force"===Y.preventScrollOnTouch;if(dt)var bt,St,Mt=Y.controlsContainer,xt=Y.controlsContainer?Y.controlsContainer.outerHTML:"",kt=Y.prevButton,Tt=Y.nextButton,Dt=Y.prevButton?Y.prevButton.outerHTML:"",Lt=Y.nextButton?Y.nextButton.outerHTML:"";if(ft)var Ot,Ct=Y.navContainer,Yt=Y.navContainer?Y.navContainer.outerHTML:"",Et=ae?Z:Lr(),Nt=0,At=-1,Ht=ln(),Pt=Ht,jt="tns-nav-active",Rt="Carousel Page ",Wt=" (Current Slide)";if(mt)var Ft,qt,It,Ut,zt,Gt="forward"===Y.autoplayDirection?1:-1,Vt=Y.autoplayButton,Bt=Y.autoplayButton?Y.autoplayButton.outerHTML:"",Zt=["<span class='tns-visually-hidden'>"," animation</span>"];if(pt||yt)var $t,Qt,Jt={},Xt={},Kt=!1,en=q?function(e,t){return e.x-t.x}:function(e,t){return e.y-t.y};ae||rn(Ke||nt),f&&(je=f,Re="translate",We=h?(Re+=q?"3d(":"3d(0px, ",q?", 0px, 0px)":", 0px)"):(Re+=q?"X(":"Y(",")")),P&&(z.className=z.className.replace("tns-vpfix","")),function(){fn("gutter");I.className="tns-outer",U.className="tns-inner",I.id=Xe+"-ow",U.id=Xe+"-iw",""===z.id&&(z.id=Xe);Je+=g||ae?" tns-subpixel":" tns-no-subpixel",Je+=v?" tns-calc":" tns-no-calc",ae&&(Je+=" tns-autowidth");Je+=" tns-"+Y.axis,z.className+=Je,P?((C=E.createElement("div")).id=Xe+"-mw",C.className="tns-ovh",I.appendChild(C),C.appendChild(U)):I.appendChild(U);if(ge){var e=C||U;e.className+=" tns-ah"}if(G.insertBefore(I,z),U.appendChild(z),qr(B,function(e,t){Ur(e,"tns-item"),e.id||(e.id=Xe+"-item"+t),!P&&W&&Ur(e,W),Br(e,{"aria-hidden":"true",tabindex:"-1"})}),Ee){for(var t=E.createDocumentFragment(),n=E.createDocumentFragment(),r=Ee;r--;){var i=r%Z,a=B[i].cloneNode(!0);if(Zr(a,"id"),n.insertBefore(a,n.firstChild),P){var o=B[Z-1-i].cloneNode(!0);Zr(o,"id"),t.appendChild(o)}}z.insertBefore(t,z.firstChild),z.appendChild(n),B=z.children}}(),function(){if(!P)for(var e=qe,t=qe+Math.min(Z,de);e<t;e++){var n=B[e];n.style.left=100*(e-qe)/de+"%",Ur(n,j),zr(n,W)}q&&(g||ae?(Wr(Oe,"#"+Xe+" > .tns-item","font-size:"+y.getComputedStyle(B[0]).fontSize+";",Fr(Oe)),Wr(Oe,"#"+Xe,"font-size:0;",Fr(Oe))):P&&qr(B,function(e,t){var n;e.style.marginLeft=(n=t,v?v+"("+100*n+"% / "+Ne+")":100*n/Ne+"%")}));if(N){if(_){var r=C&&Y.autoHeight?_n(Y.speed):"";Wr(Oe,"#"+Xe+"-mw",r,Fr(Oe))}r=mn(Y.edgePadding,Y.gutter,Y.fixedWidth,Y.speed,Y.autoHeight),Wr(Oe,"#"+Xe+"-iw",r,Fr(Oe)),P&&(r=q&&!ae?"width:"+pn(Y.fixedWidth,Y.gutter,Y.items)+";":"",_&&(r+=_n(pe)),Wr(Oe,"#"+Xe,r,Fr(Oe))),r=q&&!ae?yn(Y.fixedWidth,Y.gutter,Y.items):"",Y.gutter&&(r+=vn(Y.gutter)),P||(_&&(r+=_n(pe)),w&&(r+=wn(pe))),r&&Wr(Oe,"#"+Xe+" > .tns-item",r,Fr(Oe))}else{zn(),U.style.cssText=mn(se,le,oe,ge),P&&q&&!ae&&(z.style.width=pn(oe,le,de));var r=q&&!ae?yn(oe,le,de):"";le&&(r+=vn(le)),r&&Wr(Oe,"#"+Xe+" > .tns-item",r,Fr(Oe))}if(A&&N)for(var i in A){i=parseInt(i);var a=A[i],r="",o="",s="",l="",c="",u=ae?null:hn("items",i),d=hn("fixedWidth",i),f=hn("speed",i),h=hn("edgePadding",i),m=hn("autoHeight",i),p=hn("gutter",i);_&&C&&hn("autoHeight",i)&&"speed"in a&&(o="#"+Xe+"-mw{"+_n(f)+"}"),("edgePadding"in a||"gutter"in a)&&(s="#"+Xe+"-iw{"+mn(h,p,d,f,m)+"}"),P&&q&&!ae&&("fixedWidth"in a||"items"in a||oe&&"gutter"in a)&&(l="width:"+pn(d,p,u)+";"),_&&"speed"in a&&(l+=_n(f)),l&&(l="#"+Xe+"{"+l+"}"),("fixedWidth"in a||oe&&"gutter"in a||!P&&"items"in a)&&(c+=yn(d,p,u)),"gutter"in a&&(c+=vn(p)),!P&&"speed"in a&&(_&&(c+=_n(f)),w&&(c+=wn(f))),c&&(c="#"+Xe+" > .tns-item{"+c+"}"),(r=o+s+l+c)&&Oe.insertRule("@media (min-width: "+i/16+"em) {"+r+"}",Oe.cssRules.length)}}(),bn();var tn=ve?P?function(){var e=Ue,t=ze;e+=fe,t-=fe,se?(e+=1,t-=1):oe&&(ce+le)%(oe+le)&&(t-=1),Ee&&(t<qe?qe-=Z:qe<e&&(qe+=Z))}:function(){if(ze<qe)for(;Ue+Z<=qe;)qe-=Z;else if(qe<Ue)for(;qe<=ze-Z;)qe+=Z}:function(){qe=Math.max(Ue,Math.min(ze,qe))},nn=P?function(){var t,n,r,i,e,a,o,s,l,c,u;er(z,""),_||!pe?(ar(),pe&&Xr(z)||cr()):(t=z,n=je,r=Re,i=We,e=rr(),a=pe,o=cr,s=Math.min(a,10),l=0<=e.indexOf("%")?"%":"px",e=e.replace(l,""),c=Number(t.style[n].replace(r,"").replace(i,"").replace(l,"")),u=(e-c)/a*s,setTimeout(function e(){a-=s,c+=u,t.style[n]=r+c+l+i,0<a?setTimeout(e,s):o()},s)),q||Dr()}:function(){Ye=[];var e={};e[b]=e[S]=cr,ni(B[Ie],e),ti(B[qe],e),or(Ie,j,R,!0),or(qe,W,j),b&&S&&pe&&Xr(z)||cr()};return{version:"2.9.1",getInfo:Cr,events:Qe,goTo:ur,play:function(){xe&&!qt&&(pr(),Ut=!1)},pause:function(){qt&&(yr(),Ut=!0)},isOn:Q,updateSliderHeight:Vn,refresh:bn,destroy:function(){if(Oe.disabled=!0,Oe.ownerNode&&Oe.ownerNode.remove(),ni(y,{resize:Tn}),me&&ni(E,lt),Mt&&ni(Mt,it),Ct&&ni(Ct,at),ni(z,ot),ni(z,st),Vt&&ni(Vt,{click:vr}),xe&&clearInterval(Ft),P&&b){var e={};e[b]=cr,ni(z,e)}Se&&ni(z,ct),Me&&ni(z,ut);var a=[V,xt,Dt,Lt,Yt,Bt];for(var t in x.forEach(function(e,t){var n="container"===e?I:Y[e];if("object"==typeof n){var r=!!n.previousElementSibling&&n.previousElementSibling,i=n.parentNode;n.outerHTML=a[t],Y[e]=r?r.nextElementSibling:i.firstElementChild}}),x=j=R=O=W=q=I=U=z=G=V=B=Z=F=$=ae=oe=se=le=ce=de=fe=he=me=pe=ye=ve=ge=Oe=Ce=J=Ye=Ee=Ne=Ae=He=Pe=je=Re=We=Fe=qe=Ie=Ue=ze=Ve=Be=Ze=$e=Qe=Je=Xe=Ke=et=tt=nt=rt=it=at=ot=st=lt=ct=ut=dt=ft=ht=mt=pt=yt=vt=gt=_t=X=_e=we=Mt=xt=kt=Tt=bt=St=be=Ct=Yt=Ot=Et=Nt=At=Ht=Pt=jt=Rt=Wt=xe=ke=Gt=Te=De=Vt=Bt=Le=Zt=Ft=qt=It=Ut=zt=Jt=Xt=$t=Kt=Qt=en=Se=Me=null,this)"rebuild"!==t&&(this[t]=null);Q=!1},rebuild:function(){return ii(Nr(Y,k))}}}function rn(e){e&&(_e=be=Se=Me=me=xe=De=Le=!1)}function an(){for(var e=P?qe-Ee:qe;e<0;)e+=Z;return e%Z+1}function on(e){return e=e?Math.max(0,Math.min(ve?Z-1:Z-de,e)):0,P?e+Ee:e}function sn(e){for(null==e&&(e=qe),P&&(e-=Ee);e<0;)e+=Z;return Math.floor(e%Z)}function ln(){var e,t=sn();return e=ht?t:oe||ae?Math.ceil((t+1)*Et/Z-1):Math.floor(t/de),!ve&&P&&qe===ze&&(e=Et-1),e}function cn(){return y.innerWidth||E.documentElement.clientWidth||E.body.clientWidth}function un(e){return"top"===e?"afterbegin":"beforeend"}function dn(){var e=se?2*se-le:0;return function e(t){var n,r,i=E.createElement("div");return t.appendChild(i),r=(n=i.getBoundingClientRect()).right-n.left,i.remove(),r||e(t.parentNode)}(G)-e}function fn(e){if(Y[e])return!0;if(A)for(var t in A)if(A[t][e])return!0;return!1}function hn(e,t){if(null==t&&(t=$),"items"===e&&oe)return Math.floor((ce+le)/(oe+le))||1;var n=Y[e];if(A)for(var r in A)t>=parseInt(r)&&e in A[r]&&(n=A[r][e]);return"slideBy"===e&&"page"===n&&(n=hn("items")),P||"slideBy"!==e&&"items"!==e||(n=Math.floor(n)),n}function mn(e,t,n,r,i){var a="";if(void 0!==e){var o=e;t&&(o-=t),a=q?"margin: 0 "+o+"px 0 "+e+"px;":"margin: "+e+"px 0 "+o+"px 0;"}else if(t&&!n){var s="-"+t+"px";a="margin: 0 "+(q?s+" 0 0":"0 "+s+" 0")+";"}return!P&&i&&_&&r&&(a+=_n(r)),a}function pn(e,t,n){return e?(e+t)*Ne+"px":v?v+"("+100*Ne+"% / "+n+")":100*Ne/n+"%"}function yn(e,t,n){var r;if(e)r=e+t+"px";else{P||(n=Math.floor(n));var i=P?Ne:n;r=v?v+"(100% / "+i+")":100/i+"%"}return r="width:"+r,"inner"!==H?r+";":r+" !important;"}function vn(e){var t="";!1!==e&&(t=(q?"padding-":"margin-")+(q?"right":"bottom")+": "+e+"px;");return t}function gn(e,t){var n=e.substring(0,e.length-t).toLowerCase();return n&&(n="-"+n+"-"),n}function _n(e){return gn(_,18)+"transition-duration:"+e/1e3+"s;"}function wn(e){return gn(w,17)+"animation-duration:"+e/1e3+"s;"}function bn(){if(fn("autoHeight")||ae||!q){var e=z.querySelectorAll("img");qr(e,function(e){var t=e.src;t&&t.indexOf("data:image")<0?(ti(e,_t),e.src="",e.src=t,Ur(e,"loading")):Ce||Rn(e)}),Yr(function(){In($r(e),function(){X=!0})}),!ae&&q&&(e=Fn(qe,Math.min(qe+de-1,Ne-1))),Ce?Sn():Yr(function(){In($r(e),Sn)})}else P&&ir(),xn(),kn()}function Sn(){if(ae){var t=ve?qe:Z-1;!function e(){B[t-1].getBoundingClientRect().right.toFixed(2)===B[t].getBoundingClientRect().left.toFixed(2)?Mn():setTimeout(function(){e()},16)}()}else Mn()}function Mn(){q&&!ae||(Bn(),ae?(He=nr(),tt&&(nt=Ln()),ze=Fe(),rn(Ke||nt)):Dr()),P&&ir(),xn(),kn()}function xn(){if(Zn(),I.insertAdjacentHTML("afterbegin",'<div class="tns-liveregion tns-visually-hidden" aria-live="polite" aria-atomic="true">slide <span class="current">'+Hn()+"</span>  of "+Z+"</div>"),K=I.querySelector(".tns-liveregion .current"),mt){var e=xe?"stop":"start";Vt?Br(Vt,{"data-action":e}):Y.autoplayButtonOutput&&(I.insertAdjacentHTML(un(Y.autoplayPosition),'<button data-action="'+e+'">'+Zt[0]+e+Zt[1]+Te[0]+"</button>"),Vt=I.querySelector("[data-action]")),Vt&&ti(Vt,{click:vr}),xe&&(pr(),De&&ti(z,ot),Le&&ti(z,st))}if(ft){if(Ct)Br(Ct,{"aria-label":"Carousel Pagination"}),qr(Ot=Ct.children,function(e,t){Br(e,{"data-nav":t,tabindex:"-1","aria-label":Rt+(t+1),"aria-controls":Xe})});else{for(var t="",n=ht?"":'style="display:none"',r=0;r<Z;r++)t+='<button data-nav="'+r+'" tabindex="-1" aria-controls="'+Xe+'" '+n+' aria-label="'+Rt+(r+1)+'"></button>';t='<div class="tns-nav" aria-label="Carousel Pagination">'+t+"</div>",I.insertAdjacentHTML(un(Y.navPosition),t),Ct=I.querySelector(".tns-nav"),Ot=Ct.children}if(Or(),_){var i=_.substring(0,_.length-18).toLowerCase(),a="transition: all "+pe/1e3+"s";i&&(a="-"+i+"-"+a),Wr(Oe,"[aria-controls^="+Xe+"-item]",a,Fr(Oe))}Br(Ot[Ht],{"aria-label":Rt+(Ht+1)+Wt}),Zr(Ot[Ht],"tabindex"),Ur(Ot[Ht],jt),ti(Ct,at)}dt&&(Mt||kt&&Tt||(I.insertAdjacentHTML(un(Y.controlsPosition),'<div class="tns-controls" aria-label="Carousel Navigation" tabindex="0"><button data-controls="prev" tabindex="-1" aria-controls="'+Xe+'">'+we[0]+'</button><button data-controls="next" tabindex="-1" aria-controls="'+Xe+'">'+we[1]+"</button></div>"),Mt=I.querySelector(".tns-controls")),kt&&Tt||(kt=Mt.children[0],Tt=Mt.children[1]),Y.controlsContainer&&Br(Mt,{"aria-label":"Carousel Navigation",tabindex:"0"}),(Y.controlsContainer||Y.prevButton&&Y.nextButton)&&Br([kt,Tt],{"aria-controls":Xe,tabindex:"-1"}),(Y.controlsContainer||Y.prevButton&&Y.nextButton)&&(Br(kt,{"data-controls":"prev"}),Br(Tt,{"data-controls":"next"})),bt=Qn(kt),St=Qn(Tt),Kn(),Mt?ti(Mt,it):(ti(kt,it),ti(Tt,it))),Cn()}function kn(){if(P&&b){var e={};e[b]=cr,ti(z,e)}Se&&ti(z,ct,Y.preventScrollOnTouch),Me&&ti(z,ut),me&&ti(E,lt),"inner"===H?Qe.on("outerResized",function(){Dn(),Qe.emit("innerLoaded",Cr())}):(A||oe||ae||ge||!q)&&ti(y,{resize:Tn}),ge&&("outer"===H?Qe.on("innerLoaded",qn):Ke||qn()),jn(),Ke?Nn():nt&&En(),Qe.on("indexChanged",Un),"inner"===H&&Qe.emit("innerLoaded",Cr()),"function"==typeof $e&&$e(Cr()),Q=!0}function Tn(e){Yr(function(){Dn(_r(e))})}function Dn(e){if(Q){"outer"===H&&Qe.emit("outerResized",Cr(e)),$=cn();var t,n=F,r=!1;A&&(On(),(t=n!==F)&&Qe.emit("newBreakpointStart",Cr(e)));var i,a,o,s,l=de,c=Ke,u=nt,d=me,f=_e,h=be,m=Se,p=Me,y=xe,v=De,g=Le,_=qe;if(t){var w=oe,b=ge,S=we,M=ue,x=Te;if(!N)var k=le,T=se}if(me=hn("arrowKeys"),_e=hn("controls"),be=hn("nav"),Se=hn("touch"),ue=hn("center"),Me=hn("mouseDrag"),xe=hn("autoplay"),De=hn("autoplayHoverPause"),Le=hn("autoplayResetOnVisibility"),t&&(Ke=hn("disable"),oe=hn("fixedWidth"),pe=hn("speed"),ge=hn("autoHeight"),we=hn("controlsText"),Te=hn("autoplayText"),ke=hn("autoplayTimeout"),N||(se=hn("edgePadding"),le=hn("gutter"))),rn(Ke),ce=dn(),q&&!ae||Ke||(Bn(),q||(Dr(),r=!0)),(oe||ae)&&(He=nr(),ze=Fe()),(t||oe)&&(de=hn("items"),fe=hn("slideBy"),(a=de!==l)&&(oe||ae||(ze=Fe()),tn())),t&&Ke!==c&&(Ke?Nn():function(){if(!et)return;if(Oe.disabled=!1,z.className+=Je,ir(),ve)for(var e=Ee;e--;)P&&Jr(B[e]),Jr(B[Ne-e-1]);if(!P)for(var t=qe,n=qe+Z;t<n;t++){var r=B[t],i=t<qe+de?j:W;r.style.left=100*(t-qe)/de+"%",Ur(r,i)}Yn(),et=!1}()),tt&&(t||oe||ae)&&(nt=Ln())!==u&&(nt?(ar(rr(on(0))),En()):(!function(){if(!rt)return;se&&N&&(U.style.margin="");if(Ee)for(var e="tns-transparent",t=Ee;t--;)P&&zr(B[t],e),zr(B[Ne-t-1],e);Yn(),rt=!1}(),r=!0)),rn(Ke||nt),xe||(De=Le=!1),me!==d&&(me?ti(E,lt):ni(E,lt)),_e!==f&&(_e?Mt?Jr(Mt):(kt&&Jr(kt),Tt&&Jr(Tt)):Mt?Qr(Mt):(kt&&Qr(kt),Tt&&Qr(Tt))),be!==h&&(be?Jr(Ct):Qr(Ct)),Se!==m&&(Se?ti(z,ct,Y.preventScrollOnTouch):ni(z,ct)),Me!==p&&(Me?ti(z,ut):ni(z,ut)),xe!==y&&(xe?(Vt&&Jr(Vt),qt||Ut||pr()):(Vt&&Qr(Vt),qt&&yr())),De!==v&&(De?ti(z,ot):ni(z,ot)),Le!==g&&(Le?ti(E,st):ni(E,st)),t){if(oe===w&&ue===M||(r=!0),ge!==b&&(ge||(U.style.height="")),_e&&we!==S&&(kt.innerHTML=we[0],Tt.innerHTML=we[1]),Vt&&Te!==x){var D=xe?1:0,L=Vt.innerHTML,O=L.length-x[D].length;L.substring(O)===x[D]&&(Vt.innerHTML=L.substring(0,O)+Te[D])}}else ue&&(oe||ae)&&(r=!0);if((a||oe&&!ae)&&(Et=Lr(),Or()),(i=qe!==_)?(Qe.emit("indexChanged",Cr()),r=!0):a?i||Un():(oe||ae)&&(jn(),Zn(),An()),!a&&P||function(){for(var e=qe+Math.min(Z,de),t=Ne;t--;){var n=B[t];qe<=t&&t<e?(Ur(n,"tns-moving"),n.style.left=100*(t-qe)/de+"%",Ur(n,j),zr(n,W)):n.style.left&&(n.style.left="",Ur(n,W),zr(n,j)),zr(n,R)}setTimeout(function(){qr(B,function(e){zr(e,"tns-moving")})},300)}(),!Ke&&!nt){if(t&&!N&&(ge===autoheightTem&&pe===speedTem||zn(),se===T&&le===k||(U.style.cssText=mn(se,le,oe,pe,ge)),q)){P&&(z.style.width=pn(oe,le,de));var C=yn(oe,le,de)+vn(le);s=Fr(o=Oe)-1,"deleteRule"in o?o.deleteRule(s):o.removeRule(s),Wr(Oe,"#"+Xe+" > .tns-item",C,Fr(Oe))}ge&&qn(),r&&(ir(),Ie=qe)}t&&Qe.emit("newBreakpointEnd",Cr(e))}}function Ln(){if(!oe&&!ae)return Z<=(ue?de-(de-1)/2:de);var e=oe?(oe+le)*Z:J[Z],t=se?ce+2*se:ce+le;return ue&&(t-=oe?(ce-oe)/2:(ce-(J[qe+1]-J[qe]-le))/2),e<=t}function On(){for(var e in F=0,A)(e=parseInt(e))<=$&&(F=e)}function Cn(){!xe&&Vt&&Qr(Vt),!be&&Ct&&Qr(Ct),_e||(Mt?Qr(Mt):(kt&&Qr(kt),Tt&&Qr(Tt)))}function Yn(){xe&&Vt&&Jr(Vt),be&&Ct&&Jr(Ct),_e&&(Mt?Jr(Mt):(kt&&Jr(kt),Tt&&Jr(Tt)))}function En(){if(!rt){if(se&&(U.style.margin="0px"),Ee)for(var e="tns-transparent",t=Ee;t--;)P&&Ur(B[t],e),Ur(B[Ne-t-1],e);Cn(),rt=!0}}function Nn(){if(!et){if(Oe.disabled=!0,z.className=z.className.replace(Je.substring(1),""),Zr(z,["style"]),ve)for(var e=Ee;e--;)P&&Qr(B[e]),Qr(B[Ne-e-1]);if(q&&P||Zr(U,["style"]),!P)for(var t=qe,n=qe+Z;t<n;t++){var r=B[t];Zr(r,["style"]),zr(r,j),zr(r,W)}Cn(),et=!0}}function An(){var e=Hn();K.innerHTML!==e&&(K.innerHTML=e)}function Hn(){var e=Pn(),t=e[0]+1,n=e[1]+1;return t===n?t+"":t+" to "+n}function Pn(e){null==e&&(e=rr());var n,r,i,a=qe;if(ue||se?(ae||oe)&&(r=-(parseFloat(e)+se),i=r+ce+2*se):ae&&(r=J[qe],i=r+ce),ae)J.forEach(function(e,t){t<Ne&&((ue||se)&&e<=r+.5&&(a=t),.5<=i-e&&(n=t))});else{if(oe){var t=oe+le;n=ue||se?(a=Math.floor(r/t),Math.ceil(i/t-1)):a+Math.ceil(ce/t)-1}else if(ue||se){var o=de-1;if(n=ue?(a-=o/2,qe+o/2):qe+o,se){var s=se*de/ce;a-=s,n+=s}a=Math.floor(a),n=Math.ceil(n)}else n=a+de-1;a=Math.max(a,0),n=Math.min(n,Ne-1)}return[a,n]}function jn(){Ce&&!Ke&&Fn.apply(null,Pn()).forEach(function(e){if(!Ir(e,gt)){var t={};t[b]=function(e){e.stopPropagation()},ti(e,t),ti(e,_t),e.src=Vr(e,"data-src");var n=Vr(e,"data-srcset");n&&(e.srcset=n),Ur(e,"loading")}})}function Rn(e){Ur(e,"loaded"),Wn(e)}function Wn(e){Ur(e,"tns-complete"),zr(e,"loading"),ni(e,_t)}function Fn(e,t){for(var n=[];e<=t;)qr(B[e].querySelectorAll("img"),function(e){n.push(e)}),e++;return n}function qn(){var e=Fn.apply(null,Pn());Yr(function(){In(e,Vn)})}function In(n,e){return X?e():(n.forEach(function(e,t){Ir(e,gt)&&n.splice(t,1)}),n.length?void Yr(function(){In(n,e)}):e())}function Un(){jn(),Zn(),An(),Kn(),function(){if(be&&(Ht=0<=At?At:ln(),At=-1,Ht!==Pt)){var e=Ot[Pt],t=Ot[Ht];Br(e,{tabindex:"-1","aria-label":Rt+(Pt+1)}),zr(e,jt),Br(t,{"aria-label":Rt+(Ht+1)+Wt}),Zr(t,"tabindex"),Ur(t,jt),Pt=Ht}}()}function zn(){P&&ge&&(C.style[_]=pe/1e3+"s")}function Gn(e,t){for(var n=[],r=e,i=Math.min(e+t,Ne);r<i;r++)n.push(B[r].offsetHeight);return Math.max.apply(null,n)}function Vn(){var e=ge?Gn(qe,de):Gn(Ee,Z),t=C||U;t.style.height!==e&&(t.style.height=e+"px")}function Bn(){J=[0];var n=q?"left":"top",r=q?"right":"bottom",i=B[0].getBoundingClientRect()[n];qr(B,function(e,t){t&&J.push(e.getBoundingClientRect()[n]-i),t===Ne-1&&J.push(e.getBoundingClientRect()[r]-i)})}function Zn(){var e=Pn(),n=e[0],r=e[1];qr(B,function(e,t){n<=t&&t<=r?Gr(e,"aria-hidden")&&(Zr(e,["aria-hidden","tabindex"]),Ur(e,vt)):Gr(e,"aria-hidden")||(Br(e,{"aria-hidden":"true",tabindex:"-1"}),zr(e,vt))})}function $n(e){return e.nodeName.toLowerCase()}function Qn(e){return"button"===$n(e)}function Jn(e){return"true"===e.getAttribute("aria-disabled")}function Xn(e,t,n){e?t.disabled=n:t.setAttribute("aria-disabled",n.toString())}function Kn(){if(_e&&!ye&&!ve){var e=bt?kt.disabled:Jn(kt),t=St?Tt.disabled:Jn(Tt),n=qe<=Ue,r=!ye&&ze<=qe;n&&!e&&Xn(bt,kt,!0),!n&&e&&Xn(bt,kt,!1),r&&!t&&Xn(St,Tt,!0),!r&&t&&Xn(St,Tt,!1)}}function er(e,t){_&&(e.style[_]=t)}function tr(e){return null==e&&(e=qe),ae?(ce-(se?le:0)-(J[e+1]-J[e]-le))/2:oe?(ce-oe)/2:(de-1)/2}function nr(){var e=ce+(se?le:0)-(oe?(oe+le)*Ne:J[Ne]);return ue&&!ve&&(e=oe?-(oe+le)*(Ne-1)-tr():tr(Ne-1)-J[Ne-1]),0<e&&(e=0),e}function rr(e){var t;if(null==e&&(e=qe),q&&!ae)if(oe)t=-(oe+le)*e,ue&&(t+=tr());else{var n=f?Ne:de;ue&&(e-=tr()),t=100*-e/n}else t=-J[e],ue&&ae&&(t+=tr());return Ae&&(t=Math.max(t,He)),t+=!q||ae||oe?"px":"%"}function ir(e){er(z,"0s"),ar(e)}function ar(e){null==e&&(e=rr()),z.style[je]=Re+e+We}function or(e,t,n,r){var i=e+de;ve||(i=Math.min(i,Ne));for(var a=e;a<i;a++){var o=B[a];r||(o.style.left=100*(a-qe)/de+"%"),O&&m&&(o.style[m]=o.style[p]=O*(a-e)/1e3+"s"),zr(o,t),Ur(o,n),r&&Ye.push(o)}}function sr(e,t){Pe&&tn(),(qe!==Ie||t)&&(Qe.emit("indexChanged",Cr()),Qe.emit("transitionStart",Cr()),ge&&qn(),qt&&e&&0<=["click","keydown"].indexOf(e.type)&&yr(),Ze=!0,nn())}function lr(e){return e.toLowerCase().replace(/-/g,"")}function cr(e){if(P||Ze){if(Qe.emit("transitionEnd",Cr(e)),!P&&0<Ye.length)for(var t=0;t<Ye.length;t++){var n=Ye[t];n.style.left="",p&&m&&(n.style[p]="",n.style[m]=""),zr(n,R),Ur(n,W)}if(!e||!P&&e.target.parentNode===z||e.target===z&&lr(e.propertyName)===lr(je)){if(!Pe){var r=qe;tn(),qe!==r&&(Qe.emit("indexChanged",Cr()),ir())}"inner"===H&&Qe.emit("innerLoaded",Cr()),Ze=!1,Ie=qe}}}function ur(e,t){if(!nt)if("prev"===e)dr(t,-1);else if("next"===e)dr(t,1);else{if(Ze){if(Ge)return;cr()}var n=sn(),r=0;if("first"===e?r=-n:"last"===e?r=P?Z-de-n:Z-1-n:("number"!=typeof e&&(e=parseInt(e)),isNaN(e)||(t||(e=Math.max(0,Math.min(Z-1,e))),r=e-n)),!P&&r&&Math.abs(r)<de){var i=0<r?1:-1;r+=Ue<=qe+r-Z?Z*i:2*Z*i*-1}qe+=r,P&&ve&&(qe<Ue&&(qe+=Z),ze<qe&&(qe-=Z)),sn(qe)!==sn(Ie)&&sr(t)}}function dr(e,t){if(Ze){if(Ge)return;cr()}var n;if(!t){for(var r=wr(e=_r(e));r!==Mt&&[kt,Tt].indexOf(r)<0;)r=r.parentNode;var i=[kt,Tt].indexOf(r);0<=i&&(n=!0,t=0===i?-1:1)}if(ye){if(qe===Ue&&-1===t)return void ur("last",e);if(qe===ze&&1===t)return void ur("first",e)}t&&(qe+=fe*t,ae&&(qe=Math.floor(qe)),sr(n||e&&"keydown"===e.type?e:null))}function fr(){Ft=setInterval(function(){dr(null,Gt)},ke),qt=!0}function hr(){clearInterval(Ft),qt=!1}function mr(e,t){Br(Vt,{"data-action":e}),Vt.innerHTML=Zt[0]+e+Zt[1]+t}function pr(){fr(),Vt&&mr("stop",Te[1])}function yr(){hr(),Vt&&mr("start",Te[0])}function vr(){Ut=qt?(yr(),!0):(pr(),!1)}function gr(e){e.focus()}function _r(e){return br(e=e||y.event)?e.changedTouches[0]:e}function wr(e){return e.target||y.event.srcElement}function br(e){return 0<=e.type.indexOf("touch")}function Sr(e){e.preventDefault?e.preventDefault():e.returnValue=!1}function Mr(){return i=Xt.y-Jt.y,a=Xt.x-Jt.x,e=Math.atan2(i,a)*(180/Math.PI),t=Ve,n=!1,r=Math.abs(90-Math.abs(e)),90-t<=r?n="horizontal":r<=t&&(n="vertical"),n===Y.axis;var e,t,n,r,i,a}function xr(e){if(Ze){if(Ge)return;cr()}xe&&qt&&hr(),Kt=!0,Qt&&(Er(Qt),Qt=null);var t=_r(e);Qe.emit(br(e)?"touchStart":"dragStart",Cr(e)),!br(e)&&0<=["img","a"].indexOf($n(wr(e)))&&Sr(e),Xt.x=Jt.x=t.clientX,Xt.y=Jt.y=t.clientY,P&&($t=parseFloat(z.style[je].replace(Re,"")),er(z,"0s"))}function kr(e){if(Kt){var t=_r(e);Xt.x=t.clientX,Xt.y=t.clientY,P?Qt||(Qt=Yr(function(){!function e(t){if(!Be)return void(Kt=!1);Er(Qt);Kt&&(Qt=Yr(function(){e(t)}));"?"===Be&&(Be=Mr());if(Be){!wt&&br(t)&&(wt=!0);try{t.type&&Qe.emit(br(t)?"touchMove":"dragMove",Cr(t))}catch(e){}var n=$t,r=en(Xt,Jt);if(!q||oe||ae)n+=r,n+="px";else{var i=f?r*de*100/((ce+le)*Ne):100*r/(ce+le);n+=i,n+="%"}z.style[je]=Re+n+We}}(e)})):("?"===Be&&(Be=Mr()),Be&&(wt=!0)),wt&&e.preventDefault()}}function Tr(r){if(Kt){Qt&&(Er(Qt),Qt=null),P&&er(z,""),Kt=!1;var e=_r(r);Xt.x=e.clientX,Xt.y=e.clientY;var i=en(Xt,Jt);if(Math.abs(i)){if(!br(r)){var n=wr(r);ti(n,{click:function e(t){Sr(t),ni(n,{click:e})}})}P?Qt=Yr(function(){if(q&&!ae){var e=-i*de/(ce+le);e=0<i?Math.floor(e):Math.ceil(e),qe+=e}else{var t=-($t+i);if(t<=0)qe=Ue;else if(t>=J[Ne-1])qe=ze;else for(var n=0;n<Ne&&t>=J[n];)t>J[qe=n]&&i<0&&(qe+=1),n++}sr(r,i),Qe.emit(br(r)?"touchEnd":"dragEnd",Cr(r))}):Be&&dr(r,0<i?-1:1)}}"auto"===Y.preventScrollOnTouch&&(wt=!1),Ve&&(Be="?"),xe&&!qt&&fr()}function Dr(){(C||U).style.height=J[qe+de]-J[qe]+"px"}function Lr(){var e=oe?(oe+le)*Z/ce:Z/de;return Math.min(Math.ceil(e),Z)}function Or(){if(be&&!ht&&Et!==Nt){var e=Nt,t=Et,n=Jr;for(Et<Nt&&(e=Et,t=Nt,n=Qr);e<t;)n(Ot[e]),e++;Nt=Et}}function Cr(e){return{container:z,slideItems:B,navContainer:Ct,navItems:Ot,controlsContainer:Mt,hasControls:dt,prevButton:kt,nextButton:Tt,items:de,slideBy:fe,cloneCount:Ee,slideCount:Z,slideCountNew:Ne,index:qe,indexCached:Ie,displayIndex:an(),navCurrentIndex:Ht,navCurrentIndexCached:Pt,pages:Et,pagesCached:Nt,sheet:Oe,isOn:Q,event:e||{}}}M&&console.warn("No slides found in",Y.container)};return ii}();function getParameterByName(e,t){t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");var n=new RegExp("[?&]"+e+"(=([^&#]*)|&|#|$)").exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null}(function(){var n,r,e,t,i=[].slice;n=null!=(e="function"==typeof require?require("countdown"):void 0)?e:this.countdown,(r=null!=(t="function"==typeof require?require("moment"):void 0)?t:this.moment).fn.countdown=function(){var e,t;return t=arguments[0],e=2<=arguments.length?i.call(arguments,1):[],n.apply(null,[this.toDate(),r(t).toDate()].concat(i.call(e)))}}).call(this);var updateFullYear=document.querySelectorAll(".utility--updateDate");function checkModal(e){e.target.dataset.modalLaunch&&launchModal(e)}function closeModalClick(e){(e.target.classList.contains("modal--close")||e.target.classList.contains("modal"))&&closeModal(e)}function closeModalEsc(e){27===e.keyCode&&closeModal(e)}function closeModal(e){document.body.classList.contains("modal--is-open")&&(document.querySelector(".modal--is-active").classList.add("modal--is-hidden"),document.querySelector(".modal--is-active").classList.remove("modal--is-active"),document.body.classList.remove("modal--is-open"))}function launchModal(e){var t=e.target.dataset.modalLaunch;if(void 0===t&&(t=e.target.parentElement.dataset.modalLaunch),document.body.classList.add("modal--is-open"),document.querySelector(".modal--"+t).classList.remove("modal--is-hidden"),document.querySelector(".modal--"+t).classList.add("modal--is-active"),"send-order-comment"===t){document.querySelector('input[name="order_number"]').value=e.target.dataset.orderNumber,document.querySelectorAll('input[name="contact_preference"]').forEach(function(e){e.addEventListener("change",function(e){var t=e.target.value;document.querySelectorAll(".contact-preference").forEach(function(e){e.style.display="none"}),document.querySelector(".contact-preference--"+t).style.display="flex"})});var n=document.querySelector("#submitOrderComment");n.addEventListener("submit",function(e){e.preventDefault(),atomic(window.ajax_order_tracking.ajax_url,{method:"POST",data:{action:"send_order_comment",_ajax_nonce:window.ajax_order_tracking.nonce,contact_preference:n.querySelector('input[name="contact_preference"]:checked').value,customer_name:n.querySelector('input[name="customer_name"]').value,email_address:n.querySelector('input[name="email_address"]').value,phone_number:n.querySelector('input[name="phone_number"]').value,message:n.querySelector('textarea[name="message"]').value,order_number:n.querySelector('input[name="order_number"]').value}}).then(function(e){if("success"===e.data.status){if("phone"===e.data.contact_preference)var t="We will give you a phone call shortly at "+e.data.phone_number+".";else var t="We will send you an email shortly at "+e.data.email_address+".";var n=document.querySelector(".modal-content");n.innerHTML="<h2>Thanks "+e.data.name+"!</h2><p>"+t+"</p>"}}).catch(function(e){console.log("failed call"),console.log(e)})})}}updateFullYear.forEach(function(e){var t=new Date;e.textContent=t.getFullYear()}),function(t){var e=t(".mega-menu--shop-by-part > li");t.each(e,function(){t(this).addClass("mega-menu--parent--is-hidden mega-menu--parent").children("ul").addClass("mega-menu--child-list")}),e.first().removeClass("mega-menu--parent--is-hidden");var n=document.querySelectorAll(".mega-menu");if(n){n.forEach(function(e){e.addEventListener("mouseenter",function(){document.querySelector(".screen").classList.remove("screen--is-hidden")},!1),e.addEventListener("mouseleave",function(){document.querySelector("#s:focus")||document.querySelector(".screen").classList.add("screen--is-hidden")},!1)});var r=document.querySelectorAll(".mega-menu--parent");if(r)r.forEach(function(e){769<window.innerWidth&&e.addEventListener("mouseenter",function(e){r.forEach(function(e){e.classList.add("mega-menu--parent--is-hidden")}),e.target.classList.contains("mega-menu--parent--is-hidden")&&e.target.classList.remove("mega-menu--parent--is-hidden")})}),document.querySelectorAll(".navigation--button").forEach(function(e){e.addEventListener("click",a)}),window.innerWidth<769&&r.forEach(function(e){e.addEventListener("click",function(e){e.preventDefault(),e.target.parentElement.classList.toggle("mega-menu--parent--is-hidden"),console.log("open me up")})}),document.querySelectorAll(".mega-menu--equipment-parent").forEach(function(e){e.addEventListener("click",i)}),document.querySelector("button#hamburger").addEventListener("click",function(){document.body.classList.toggle("menu-open"),document.querySelector("#hamburger").classList.toggle("is-active");var e=document.querySelector(".site-header").offsetHeight;document.querySelector(".navigation--level-zero").style.top=e+"px",window.innerWidth<769&&r.forEach(function(e){e.classList.add("mega-menu--parent--is-hidden")})})}function i(e){e.preventDefault(),t(this).parent().siblings().toggle(),t(this).next().toggleClass("visually-hidden"),t(this).toggleClass("display-back")}function a(e){window.innerWidth<769&&e.target.nextElementSibling.classList.toggle("mobile-open")}}(jQuery),function(t){var e=document.querySelector("#modelModifiers");document.querySelector("#main_content");e&&e.addEventListener("change",function(e){var t=e.target.value;window.location.href=t});var n=t(".category-maintenance-reminder [data-sku]");t.each(n,function(){var r=t(this),e=r.data("sku");t.ajax({url:window.ajax_order_tracking.ajax_url,method:"POST",data:{action:"get_product_info",_ajax_nonce:window.ajax_order_tracking.nonce,sku:e},dataType:"json",success:function(e){var t=Number(e.price).toFixed(2),n=r.html();r.siblings('[data-header="Price"]').html("$"+t),e.id&&(r.html('<a href="/?p='+e.id+'">'+n+"</a>"),r.parent().find("button").removeClass("disabled").addClass("add-to-cart").text("Add to Cart").attr("value",e.id))},error:function(e){console.log(e)}})});var r=document.querySelector(".maintenance-kit-container");r&&1080<window.innerWidth&&(window.onload=function(){var t=r.offsetTop,n=window.getComputedStyle(document.body,null).fontSize;n=parseInt(n.split("px")[0]),window.addEventListener("scroll",function(e){window.scrollY>t-3*n&&r.classList.add("maintenance-kit-container--is-fixed"),window.scrollY<t-3*n&&r.classList.remove("maintenance-kit-container--is-fixed")})})}(jQuery),String.prototype.includes||(String.prototype.includes=function(e,t){"use strict";return"number"!=typeof t&&(t=0),!(t+e.length>this.length)&&-1!==this.indexOf(e,t)}),[Element.prototype,CharacterData.prototype,DocumentType.prototype].forEach(function(e){e.hasOwnProperty("remove")||Object.defineProperty(e,"remove",{configurable:!0,enumerable:!0,writable:!0,value:function(){null!==this.parentNode&&this.parentNode.removeChild(this)}})}),Array.prototype.includes||Object.defineProperty(Array.prototype,"includes",{value:function(e,t){if(null==this)throw new TypeError('"this" is null or not defined');var n=Object(this),r=n.length>>>0;if(0===r)return!1;var i,a,o=0|t,s=Math.max(0<=o?o:r-Math.abs(o),0);for(;s<r;){if((i=n[s])===(a=e)||"number"==typeof i&&"number"==typeof a&&isNaN(i)&&isNaN(a))return!0;s++}return!1}}),function(t){var e=document.querySelectorAll(".woocommerce-review-link");e&&e.forEach(function(e){e.addEventListener("click",function(e){e.preventDefault()})});var n=document.querySelector("#fitment-text-filter"),r=document.querySelectorAll(".single--part-fitment-list li");n&&n.addEventListener("keyup",function(e){for(var t=e.target.value.toUpperCase(),n=0;n<r.length;n++)r[n].classList.add("hidden"),r[n].textContent.toUpperCase().includes(t)&&r[n].classList.remove("hidden")});var i=document.querySelectorAll(".woocommerce-product-gallery__thumbs li");function a(e){e.preventDefault();var t=e.target.dataset.fullImage,n=document.querySelector(".woocommerce-product-gallery__wrapper > a");n.href=t,n.querySelector("img").src=t}i&&i.forEach(function(e){e.addEventListener("click",a)}),t(".woocommerce-product-gallery__wrapper a").on("click",function(e){e.preventDefault(),t(".modal--display-product-image .modal-container").css("max-width","800px"),t(".modal--display-product-image .modal-content").html('<img src="'+e.target.src+'">'),launchModal(e)})}(jQuery),function(t){t("#filter--select-fitment").on("change",function(e){e.preventDefault(),document.location=window.location.origin+"/part-catalog/"+t(this).val()})}(jQuery),function(a){var o=a(".placeholder"),e=a(".quick-order-form"),s=e.siblings(".gfp-order-details--list"),l=e.siblings(".checkout");e.on("submit",function(e){e.preventDefault();var t=a(this).find("#sku"),n=a(this).find("#qty"),r=t.val(),i=n.val();t.val(""),t.focus(),n.val("1"),o.removeClass("visually-hidden"),s.find(".error").remove(),a.ajax({url:window.ajax_order_tracking.ajax_url,method:"POST",data:{action:"get_product_info",_ajax_nonce:window.ajax_order_tracking.nonce,sku:r,qty:i},success:function(e){o.addClass("visually-hidden"),s.removeClass("visually-hidden"),function(e,t){if("failed"===e.status)return s.prepend('<li class="gfp-order-details--item error"><button class="remove">&times;</button>Sorry, that doesn\'t look like a part we carry.<br>Please double check your part number and try again.</li>');s.append('<li class="gfp-order-details--item" data-product-id="'+e.id+'" data-product-price="'+e.price+'"><button class="remove">&times;</button><div class="gfp-order-details--item-image"><a href="'+e.link+'">'+e.img+'</a></div><div class="gfp-order-details--item-details"><div class="gfp-order-details--item-name"><a href="'+e.link+'">'+e.name+'</a></div><div class="gfp-order-details--item-price">$<span class="subtotal">'+(Number(e.price)*t).toFixed(2)+'</span> <span class="each-price">- $'+Number(e.price).toFixed(2)+' each</span></div><div class="gfp-order-details--item-quantity">Quantity: <input type="number" min="1" max="100" name="part-qty" value="'+t+'" /></div></div></li>'),l.removeClass("visually-hidden")}(e,i)}})}),s.on("click",".remove",function(e){e.preventDefault(),a(this).parent().remove();a(this).parents(".gfp-order-details--item").data("productId")}),s.on("keyup",'input[name="part-qty"]',function(){a(this).parents(".gfp-order-details--item").data("productId");var e=a(this).parents(".gfp-order-details--item").data("productPrice"),t=Number(a(this).val()),n=Number(e)*t;a(this).parents(".gfp-order-details--item").find(".gfp-order-details--item-price .subtotal").text(n.toFixed(2))}),l.on("click","button",function(e){e.preventDefault(),a(this).prop("disabled",!0).html('<img src="'+window.location.origin+'/wp-content/themes/gfp/dist/img/spinner--light.svg" alt="spinner" class="spinner" style="vertical-align: middle; max-width: 25px; margin-right: 0.5rem;"> Adding Items to Cart');var t=s.find("li"),n=[];a.each(t,function(){var e=a(this).data("productId"),t=a(this).find('input[name="part-qty"]').val();n.push({id:e,qty:Number(t)})}),a.ajax({url:window.ajax_order_tracking.ajax_url,method:"POST",data:{action:"add_multiple_items",_ajax_nonce:window.ajax_order_tracking.nonce,items:n},success:function(e){!0===e.success&&ga("send","event",{eventCategory:"Form",eventAction:"Quick Order Form",eventLabel:n.length+" products",hitCallback:function(){document.location="/cart/"}})}})})}(jQuery),function(o){var e=o(".drawer--add-to-cart"),n=document.querySelector(".drawer--items-list"),t=o(".close-drawer"),r=(o(".open-drawer"),o(".add-to-cart"),o("body")),s=o(".drawer--add-to-cart .subtotal-amount"),i=o(".drawer--add-to-cart .item-count");function a(){r.hasClass("woocommerce-cart")?window.location.reload(!1):o("body").addClass("cart-drawer--open").removeClass("cart-drawer--closed")}function l(){r.removeClass("cart-drawer--open").addClass("cart-drawer--closed")}function c(e,t){for(var n=0,r=0;r<e.length;r++)n+=parseInt(e[r].productQty);1<n||0===n?i.text(n+" Items in your Cart"):i.text(n+" Item in your Cart"),o(".cart--count").text(n),49.99-t<.01?(o(".countdown-to-free-shipping .free").show(),o(".countdown-to-free-shipping .not-free").hide()):(o(".countdown-to-free-shipping .free").hide(),o(".countdown-to-free-shipping .not-free").show(),o(".countdown-to-free-shipping .countdown").text((49.99-t).toFixed(2)),o(".progress .bar .status").animate({width:(t/49.99*100).toFixed(2)+"%"}))}t.on("click",l),r.on("click",".open-drawer",a),r.on("click",".add-to-cart",function(e){e.preventDefault();var t=o(this).attr("value");o.ajax({url:window.location.origin+"/wp-admin/admin-ajax.php",method:"POST",data:{action:"add_item_to_cart",_ajax_nonce:window.ajax_order_tracking.nonce,product_id:t},success:function(e){var t;console.log(e),s.text("$"+e.subtotal),t=e.lineItems,console.log(t),n.innerHTML=t.map(function(e){if(""!==e.SalePrice)var t='<p class="drawer-item-price"><span class="drawer-item-sku">'+e.productSku+"</span> - $"+e.productRegularPrice+" each</p>";else var t='<p class="drawer-item-price">Yes Sale</p>';return'<li class="drawer--item" data-product-id="'+e.productID+'" data-product-key="'+e.productKey+'"><div class="drawer-item-action"><button class="drawer-remove-item">&times;</button></div><div class="drawer-item-image"><a href="'+e.productPermalink+'">'+e.productImg+'</a></div><div class="drawer-item-content"><p class="drawer-item-title"><a href="'+e.productPermalink+'">'+e.productName+"</a></p>"+t+'<label for="" class="drawer-item-label">Quantity:</label><input type="number" class="drawer-item-input" min="1" step="1" value="'+e.productQty+'"></div></li>'}).join(""),c(e.lineItems,e.subtotal)}}),a()}),r.on("change",".drawer--item .drawer-item-input",function(e){var t,n,r,i,a=o(this).parents(".drawer--item");n=(t=a).data("product-id"),r=t.data("product-key"),i=t.find("input.drawer-item-input").val(),console.log(n,r,i),o.ajax({url:window.location.origin+"/wp-admin/admin-ajax.php",method:"POST",data:{action:"increment_item_in_cart",_ajax_nonce:window.ajax_order_tracking.nonce,product_id:n,product_key:r,qty:parseInt(i)},success:function(e){console.log(e),s.text("$"+e.subtotal),c(e.lineItems,e.subtotal)},error:function(e){console.log(e)}})}),r.on("keyup",function(e){27===e.keyCode&&r.hasClass("cart-drawer--open")&&l()}),e.on("click",".drawer-remove-item",function(){var e,t,n,r=o(this);t=(e=r).parents(".drawer--item").data("product-id"),n=e.parents(".drawer--item").data("product-key"),e.parents(".drawer--item").addClass("remove"),e.parents(".drawer--item").on("transitionend",function(){o(this).remove()}),o.ajax({url:window.location.origin+"/wp-admin/admin-ajax.php",method:"POST",data:{action:"remove_item_from_cart",_ajax_nonce:window.ajax_order_tracking.nonce,product_id:t,product_key:n},success:function(e){s.text("$"+e.subtotal),c(e.lineItems,e.subtotal)},error:function(e){console.log(e)}})})}(jQuery),function(){var e=document.querySelectorAll(".accordian--title");if(e)for(var t=0;t<e.length;t++)e[t].parentElement.classList.add("accordian--is-collapsed"),e[t].addEventListener("click",function(e){e.target.parentElement.classList.contains("accordian--is-collapsed")?e.target.parentElement.classList.remove("accordian--is-collapsed"):e.target.parentElement.classList.add("accordian--is-collapsed")})}(),function(){var e=document.querySelectorAll(".tooltip--toggle");if(e)for(var t=0;t<e.length;t++)e[t].nextElementSibling.classList.add("tooltip--is-hidden"),e[t].addEventListener("click",function(e){console.log(e.target.nextElementSibling.classList.toggle("tooltip--is-hidden"))})}(),document.addEventListener("click",checkModal),document.addEventListener("click",closeModalClick),document.addEventListener("keyup",closeModalEsc),function(l){l("#mc-embedded-subscribe-form").on("submit",function(e){e.preventDefault();var t=l(this),n=t.find("#mce-EMAIL").val(),r=t.find("#mce-FNAME").val(),i=t.find("#mce-LNAME").val(),a=t.find("#mce-MODEL").val(),o=t.find("#mce-CURRENT_HR").val(),s=t.find("#mce-MOWING_TIM").val();s=s.split("(")[1].split(")")[0].toLowerCase(),l.ajax({type:t.attr("method"),url:t.attr("action"),data:t.serialize(),cache:!1,dataType:"json",contentType:"application/json; charset=utf-8",error:function(e){},success:function(e){"success"!=e.result?l("#mc_embed_signup_scroll").prepend('<p style="border: 1px solid red; padding: 1rem;">'+e.msg+"</p>"):(t.hide(),l('div[data-modal="sign-up-form"] .modal-heading').text("Great "+r+"!").next().text("You will receive a confirmation email soon and we will keep you up to date on your needed parts.")),l.ajax({type:"POST",url:"https://api.flock.com/hooks/sendMessage/855832cd-bd79-436d-9f1f-dcf0020251dd",data:JSON.stringify({text:r+" "+i+" has a "+a+" with "+o+" hours and takes "+s+" to mow. Contact "+r+" at "+n}),dataType:"json",contentType:"application/json"})}})})}(jQuery),function(){var e=parseInt(window.getComputedStyle(document.querySelector("body")).getPropertyValue("font-size")),t=document.querySelector("#stickyNav");if(t){var n=window.scrollY,r=t.offsetTop,i=t.clientWidth;window.addEventListener("resize",function(){r=t.offsetTop,console.log(r)}),document.addEventListener("scroll",function(){n=window.scrollY,r-3*e<n?(t.classList.add("nav--is-sticky"),t.style.maxWidth=i+"px"):t.classList.remove("nav--is-sticky")})}}(),function(){var e=parseInt(window.getComputedStyle(document.querySelector("body")).getPropertyValue("font-size")),t=document.querySelector(".sticky--container"),n=document.querySelector(".sticky--element");if(t&&n&&!(window.innerWidth<960)){var r=t.parentElement.children;Array.from(r).forEach(function(e){e.classList.contains("sticky--container")||(r=e)});var i=r.offsetWidth,a=(t.offsetHeight,t.getBoundingClientRect().top),o=n.offsetWidth,s=(n.offsetHeight,window.scrollY);setTimeout(l,500),window.addEventListener("scroll",function(e){s=window.scrollY,l()})}function l(){a-3*e<s&&(n.classList.add("sticky--element--is-fixed"),n.style.maxWidth=o+"px",n.style.transform="translateY("+3*e+"px)",r.style.maxWidth=i+"px"),(s<a-3*e||s<t.parentElement.offsetTop)&&(n.classList.remove("sticky--element--is-fixed"),n.style.transform="translateY(0)")}}(),function(i){if(document.body.classList.contains("woocommerce-cart")){var e=document.querySelector(".gfp-order-details--list"),t=document.querySelector('button[name="update_cart"]'),a=document.querySelector(".cart-subtotal td"),o=document.querySelector(".order-total td strong"),s=document.querySelectorAll(".cart-discount");t&&t.remove(),e.addEventListener("change",function(e){"INPUT"===e.target.tagName&&function(e){console.log("update line item price");var t=e.parentElement.parentElement.parentElement,n=t.querySelector(".regular-price"),r=t.querySelector(".sale-price");n.textContent=(n.dataset.price*e.value).toFixed(2),r&&(r.textContent="$"+(r.dataset.salePrice*e.value).toFixed(2));a.textContent="Updating...",o.textContent="Updating...",s.forEach(function(e){var t=e.dataset.discountType;"coupon-percent"===t&&(e.querySelector("td[data-title]").textContent="Updating...")}),atomic(window.location.origin+"/wp-admin/admin-ajax.php",{method:"POST",data:{action:"increment_item_in_cart",_ajax_nonce:window.ajax_order_tracking.nonce,product_key:i(e).parents(".gfp-order-details--item").data("productKey"),qty:e.value}}).then(function(){l()})}(e.target)}),e.addEventListener("click",function(t){"remove"===t.target.className&&(t.preventDefault(),a.textContent="Updating...",o.textContent="Updating...",i.ajax({url:window.ajax_order_tracking.ajax_url,method:"POST",data:{action:"remove_item_from_cart",_ajax_nonce:window.ajax_order_tracking.nonce,product_key:t.target.dataset.productKey},success:function(e){console.log(e.data),t.target.parentElement.remove(),l()}}))})}function l(){console.log("update cart totals"),i.ajax({url:window.ajax_order_tracking.ajax_url,method:"POST",data:{action:"get_cart",_ajax_nonce:window.ajax_order_tracking.nonce},success:function(e){a.textContent="$"+e.totals.subtotal,o.textContent="$"+e.totals.total}})}}(jQuery),function(e){var t=document.querySelector("#ship-to-different-address-checkbox"),n=document.querySelector(".shipping-details--is-hidden");t&&t.addEventListener("change",function(e){t.checked?n.classList.remove("shipping-details--is-hidden"):n.classList.add("shipping-details--is-hidden")}),mailchimpOptIn=document.querySelector("#mailchimp_woocommerce_newsletter"),mailchimpOptIn&&(mailchimpOptIn.checked=!0)}(jQuery);var searchResultCount="";!function(n){window.DOMPurify;var e=document.querySelector(".global-search-bar form");if(e){var r=e.querySelector('input[type="text"]'),i=(document.querySelector(".global-search-bar .default"),document.querySelector(".global-search-bar .search-results")),o=i.querySelector(".search-results--posts ul"),s=i.querySelector(".search-results--products ul"),l=i.querySelector(".search-results--categories ul"),c=i.querySelector(".search-results--models ul"),a=i.querySelector(".search-results--view-all"),u=null,d=null;n(".global-search-bar input#s").on("keyup",function(e){clearTimeout(d),d=setTimeout(f,1e3);var t=n(".global-search-bar input#s").val();i.classList.remove("visually-hidden"),document.querySelector(".screen").classList.remove("screen--is-hidden"),r.style.position="relative",r.style.zIndex=99,i.style.display="block",a.querySelector(".search-term").textContent=t,a.href="/?s="+t}),n(".global-search-bar .search-results").on("click","a",function(e){var t;console.log("clicked"),e.preventDefault(),"A"!==e.target.tagName?("IMG"===e.target.tagName&&(t=e.target.parentElement.parentElement),"DIV"===e.target.tagName&&(t=e.target.parentElement)):t=e.target;var n=t.parentElement.classList[0].split("--")[1];t.href.includes("?s=")&&(n="view-all");var r=t.textContent;if("A"===t.tagName){if(!window.ga)return void(document.location=t);ga("send","event",{eventCategory:"live-search",eventAction:n,eventLabel:r,hitCallback:function(){document.location=t}})}}),n(".global-search-bar form").on("submit",function(e){e.preventDefault();var t=n(this).find("input").val();ga("send","event",{eventCategory:"live-search",eventAction:"view-all",eventLabel:t,hitCallback:function(){document.location="/?s="+t}})}),document.addEventListener("keyup",function(e){if(27!==e.keyCode||!document.querySelector("#s:focus"))return;i.classList.add("visually-hidden"),document.querySelector(".screen").classList.add("screen--is-hidden")}),document.addEventListener("click",function(e){if(!e.target.classList.contains("screen")||document.body.classList.contains("cart-drawer--open"))return;i.classList.add("visually-hidden"),document.querySelector(".screen").classList.add("screen--is-hidden")})}function f(e){var t=n(".global-search-bar input#s").val();t&&(searchResultCount=t,o.innerHTML='<li class="search-result-item--empty"><img src="/wp-content/themes/gfp/dist/img/spinner.svg" class="spinner" style="max-width: 50px;"></li>',s.innerHTML='<li class="search-result-item--empty"><img src="/wp-content/themes/gfp/dist/img/spinner.svg" class="spinner" style="max-width: 50px;"></li>',l.innerHTML='<li class="search-result-item--empty"><img src="/wp-content/themes/gfp/dist/img/spinner.svg" class="spinner" style="max-width: 50px;"></li>',c.innerHTML='<li class="search-result-item--empty"><img src="/wp-content/themes/gfp/dist/img/spinner.svg" class="spinner" style="max-width: 50px;"></li>',u&&u.abort(),u=n.ajax({url:"/wp-json/gfp/v1/search?s="+t,success:function(e){console.log(e),function(e,t){var n=[],r=[],i=[],a=[];e.forEach(function(e,t){"post"===e.type&&n.push(e),"product"===e.type&&r.push(e),"category"===e.type&&i.push(e),"model"===e.type&&a.push(e)}),n.length<1?o.innerHTML='<li class="search-result-item--empty">No result for '+t+"</li>":o.innerHTML=n.map(function(e){return'<li class="search-result-item--post"><a href="'+e.link+'">'+e.title+"</a></li>"}).join("");r.length<1?s.innerHTML='<li class="search-result-item--empty">No result for '+t+"</li>":s.innerHTML=r.map(function(e){return'<li class="search-result-item--product"><a href="'+e.link+'"><div class="search-results--product-image">'+e.image+"</div>"+e.title+"</a></li>"}).join("");i.length<1?l.innerHTML='<li class="search-result-item--empty">No result for '+t+"</li>":l.innerHTML=i.map(function(e){return'<li class="search-result-item--category"><a href="'+e.link+'"><div class="search-results--product-image"><img src="'+e.image+'" /></div>'+e.title+"</a></li>"}).join("");a.length<1?c.innerHTML='<li class="search-result-item--empty">No result for '+t+"</li>":c.innerHTML=a.map(function(e){return'<li class="search-result-item--model"><a href="'+e.link+'"><div class="search-results--product-image"><img src="'+e.image+'" /></div>'+e.title+"</a></li>"}).join("")}(e,t)},error:function(e){console.log(e)}}))}}(jQuery),function(o){var e=o(".promo-countdown");setInterval(function(){e.each(function(e,t){var n=o(t).data("expires"),r=moment(n,"YYYYMMDD").countdown();if(6<r.days)o(t).text("on "+moment(n,"YYYYMMDD").format("MMMM D, YYYY"));else if(0<r.days)r.days<=1?(o(t).parent().addClass("expiring"),o(t).text("tomorrow.")):o(t).text("in "+r.days+" days.");else{o(t).parent().addClass("expiring");var i=String(r.minutes);i.length<=1&&(i="0"+i);var a=String(r.seconds);a.length<=1&&(a="0"+a),o(t).text("in "+r.hours+":"+i+":"+a+".")}})},1e3)}(jQuery),function(){var e=document.querySelector("#order_tracking_form");if(e){var u=document.querySelector(".order-results--container"),d=document.querySelector(".order-results--details"),f=document.querySelector(".order-results--list"),h=[];e.addEventListener("submit",function(e){e.preventDefault(),h=[],f.innerHTML="",document.querySelector("#showAllOrders")&&document.querySelector("#showAllOrders").remove();var t=document.createElement("div");t.classList.add("has-text-center","loading"),t.innerHTML='<img src="/wp-content/themes/gfp/dist/img/spinner.svg" class="spinner">',u.appendChild(t),u.classList.remove("visually-hidden");var n=document.querySelectorAll(".form-errors");n&&n.forEach(function(e){e.remove()}),atomic(window.ajax_order_tracking.ajax_url,{method:"POST",data:{action:"get_orders",_ajax_nonce:window.ajax_order_tracking.nonce,email_address:document.querySelector('input[name="email_address"]').value,zipcode:document.querySelector('input[name="zipcode"]').value}}).then(function(e){var t=document.querySelectorAll(".loading");if(0<t.length&&t.forEach(function(e){e.remove()}),"error"===e.data.status){var n=e.data.messages,r=document.createElement("ul");r.style.listStyleType="none",r.innerHTML=Object.values(n).map(function(e){return'<li class="form-errors"><button class="form-errors--close" onclick="this.parentElement.remove();">&times</button>'+e+"</li>"}).join(""),u.prepend(r),d.innerHTML=""}else console.log(e.data),e.data.orders.forEach(function(e){h.push(e)}),d.innerHTML="",function(e){var t=e.display_name,n=e.phone_number;emailAddress=e.email_address;var r=document.querySelector("#submitOrderComment");r.querySelector('input[name="customer_name"]').value=t,r.querySelector('input[name="phone_number"]').value=n,r.querySelector('input[name="email_address"]').value=emailAddress}(e.data.user),i()})}),document.addEventListener("click",function(e){if(e.target.dataset.orderId){var t=e.target.dataset.orderId,n=e.target.dataset.index,r=h[n],i=r.post_status.split("wc-")[1];i=i.charAt(0).toUpperCase()+i.slice(1);var a=document.createElement("button");a.id="showAllOrders",a.innerHTML="&larr; Show All Orders",a.classList.add("btn-solid--brand"),u.prepend(a),f.innerHTML="";var o=document.createElement("div");o.classList.add("order-results--meta"),o.innerHTML="<h2>Order: "+r.fancy+'</h2><time class="order-date">Order Date: '+moment(r.post_date_gmt,"YYYY-MM-DD hh:mm:ss a").format("LL")+'</time><p class="order-status">Order Status: '+i+'</p><h3>Have A Question?</h3><button class="btn-solid--brand-two" data-modal-launch="send-order-comment" data-order-number="'+r.ID+'">Ask Us!</button>',d.appendChild(o);var s=document.createElement("div");s.classList.add("order-results--content"),d.appendChild(s);var l=document.createElement("div");l.classList.add("box--with-header"),l.innerHTML='<header><h3>Order Details</h3></header><div class="has-text-center"><img src="/wp-content/themes/gfp/dist/img/spinner.svg" class="spinner"></div>',s.appendChild(l);var c=document.createElement("div");c.classList.add("box--with-header"),c.innerHTML='<header><h3>Order Notes</h3></header><div class="has-text-center"><img src="/wp-content/themes/gfp/dist/img/spinner.svg" class="spinner"></div>',s.appendChild(c),atomic(window.ajax_order_tracking.ajax_url,{method:"POST",data:{action:"get_order_details",_ajax_nonce:window.ajax_order_tracking.nonce,orderID:t}}).then(function(e){var t=e.data,n=document.createElement("ul");n.classList.add("gfp-order-details--list"),n.innerHTML=t.map(function(e){return'<li class="gfp-order-details--item"><div class="gfp-order-details--item-image"><a href="'+e.link+'">'+e.image+'</a></div><div class="gfp-order-details--item-details"><p class="gfp-order-details--item-name"><a href="'+e.link+'">'+e.name+'</a></p><p class="gfp-order-details--item-price">Price: &nbsp;$<span class="regular-price">'+e.subtotal+' <span class="each-price">&ndash; $'+e.unit_price+' each</span></span></p><p class="gfp-order-details--item-quantity">Quantity: &nbsp;'+e.qty+"</p> </div></li>"}).join(""),l.appendChild(n),d.querySelector(".has-text-center").remove()}),atomic(window.ajax_order_tracking.ajax_url,{method:"POST",data:{action:"get_order_notes",_ajax_nonce:window.ajax_order_tracking.nonce,orderID:t}}).then(function(e){var t=e.data;if(0<t.length){var n=document.createElement("ol");n.classList.add("woocommerce-OrderUpdates","commentlist","notes"),n.innerHTML=t.map(function(e){return'<li class="woocommerce-OrderUpdate comment note"><div class="woocommerce-OrderUpdate-inner comment_container"><div class="woocommerce-OrderUpdate-text comment-text"><div class="woocommerce-OrderUpdate-description description">'+e.commentContent+"</div>"+e.commentAuthorImg+'<p class="woocommerce-OrderUpdate-meta meta">'+e.commentAuthor+"<br>"+moment(e.commentDate,"YYYY-MM-DD hh:mm:ss a").format("LL")+"</p></div></div></li>"}).join(""),c.appendChild(n),c.querySelector(".has-text-center").remove()}else c.querySelector(".has-text-center").innerHTML="No notes have been added to this order"})}}),document.addEventListener("click",function(e){"showAllOrders"===e.target.id&&(i(),document.querySelector("#showAllOrders").remove(),d.innerHTML="")})}function i(){var e=document.querySelector(".loading");e&&e.remove(),f.innerHTML=h.map(function(e,t){return'<li class="order-results--item"><p class="order-results--order-number">Order: '+e.fancy+'</p><time class="order-results--order-time" datetime="'+e.post_date_gmt+'">'+moment(e.post_date_gmt,"YYYY-MM-DD hh:mm:ss a").format("LL")+'</time><button class="btn-solid--brand-two" data-index="'+t+'" data-order-id="'+e.ID+'">View Order</button></li>'}).join("")}}(),function(){if("1"===getParameterByName("success")){var e=document.createElement("div");e.classList.add("alert","alert--success"),e.innerHTML='<button class="alert--close" onclick="this.parentElement.remove()">&times;</button><div class="alert--content"><h4>Great!</h4><p>We\'ve received your message and will respond shortly.</p></div>',document.body.prepend(e)}}(),function(){var e=document.querySelector(".woocommerce-MyAccount-navigation");if(e){var t=e.querySelector("ul");e.querySelector("button").addEventListener("click",function(e){e.preventDefault(),this.classList.toggle("is-active"),t.classList.toggle("is-open")})}}(),function(){var r=document.querySelector("#loadMorePosts");if(r){var i=10,a=document.querySelector(".post-listing--results");r.addEventListener("click",function(e){e.preventDefault(),e.target.disabled=!0,e.target.classList.add("disabled");var n=e.target.parentElement.querySelector(".spinner");n.style.display="block",console.log("fetching posts"),atomic(window.location.origin+"/wp-json/wp/v2/posts?offset="+i+"&categories="+currentCategory).then(function(e){var t;i+=10,r.disabled=!1,r.classList.remove("disabled"),n.style.display="none",console.log("posts fetched"),t=e.data,console.log("format Posts"),t.forEach(function(e){var t=document.createElement("div");t.classList.add("card"),t.innerHTML='<div class="card-content"><p class="card-category"><a href="'+e.link+'">'+categoryName+'</a></p><h4 class="card-title"><a href="'+e.link+'">'+e.title.rendered+'</a></h4><p class="card-description">'+e.excerpt.rendered.slice(3,-5)+"</p></div>",a.appendChild(t)}),console.log("appendPosts")})})}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvdW50ZG93bi5qcyIsImF0b21pYy5taW4uanMiLCJkb21wdXJpZnkubWluLmpzIiwibW9tZW50Lm1pbi5qcyIsInRpbnktc2xpZGVyLmpzIiwiaGVscGVycy5qcyIsIm1vbWVudC1jb3VudGRvd24ubWluLmpzIiwibW9kYWwuanMiLCJzaXRlLWhlYWRlci5qcyIsInNpbmdsZS1wb3N0LmpzIiwic2luZ2xlLXByb2R1Y3QuanMiLCJhcmNoaXZlLXByb2R1Y3QuanMiLCJxdWljay1vcmRlci1mb3JtLmpzIiwiYWpheC1hZGQtdG8tY2FydC5qcyIsImFjY29yZGlhbi5qcyIsInRvb2x0aXAuanMiLCJzaWduLXVwLWZvcm0uanMiLCJzdGlja3ktbmF2aWdhdGlvbi5qcyIsInN0aWNreS5qcyIsImNhcnQuanMiLCJjaGVja291dC5qcyIsInNlYXJjaC1iYXIuanMiLCJjdXJyZW50LXByb21vcy5qcyIsImNoZWNrLW9yZGVyLXN0YXR1cy5qcyIsImFsZXJ0cy5qcyIsImFjY291bnQuanMiLCJjYXRlZ29yeS5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJ0IiwiZSIsImRlZmluZSIsImFtZCIsImV4cG9ydHMiLCJ3aW5kb3ciLCJhdG9taWMiLCJnbG9iYWwiLCJ0aGlzIiwibiIsIm1ldGhvZCIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJkYXRhIiwiaGVhZGVycyIsIkNvbnRlbnQtdHlwZSIsInJlc3BvbnNlVHlwZSIsInRpbWVvdXQiLCJ3aXRoQ3JlZGVudGlhbHMiLCJyIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiaGFzT3duUHJvcGVydHkiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJ0b1N0cmluZyIsImNhbGwiLCJhIiwiWE1MSHR0cFJlcXVlc3QiLCJvIiwiUHJvbWlzZSIsIm9ucmVhZHlzdGF0ZWNoYW5nZSIsInJlYWR5U3RhdGUiLCJzdGF0dXMiLCJyZXNwb25zZSIsInhociIsIkpTT04iLCJwYXJzZSIsInJlc3BvbnNlVGV4dCIsInMiLCJzdGF0dXNUZXh0Iiwib3BlbiIsInNldFJlcXVlc3RIZWFkZXIiLCJvbnRpbWVvdXQiLCJzZW5kIiwidGVzdCIsInN0cmluZ2lmeSIsInB1c2giLCJlbmNvZGVVUklDb21wb25lbnQiLCJqb2luIiwiaSIsImNhbmNlbCIsImFib3J0IiwiRE9NUHVyaWZ5IiwieSIsInRvTG93ZXJDYXNlIiwiZyIsImgiLCJBcnJheSIsImlzQXJyYXkiLCJmcm9tIiwiZnJlZXplIiwibCIsImMiLCJkIiwidSIsImYiLCJtIiwicCIsInNldFByb3RvdHlwZU9mIiwiUmVmbGVjdCIsImFwcGx5IiwidiIsInNlYWwiLCJiIiwiVCIsIkEiLCJ4IiwiUyIsIkwiLCJrIiwidyIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiY29uc3RydWN0b3IiLCJFIiwiTyIsInNsaWNlIiwiTiIsIk0iLCJ2ZXJzaW9uIiwicmVtb3ZlZCIsImRvY3VtZW50Iiwibm9kZVR5cGUiLCJpc1N1cHBvcnRlZCIsIl8iLCJEb2N1bWVudEZyYWdtZW50IiwiRCIsIkhUTUxUZW1wbGF0ZUVsZW1lbnQiLCJSIiwiTm9kZSIsIkMiLCJOb2RlRmlsdGVyIiwieiIsIk5hbWVkTm9kZU1hcCIsIkYiLCJNb3pOYW1lZEF0dHJNYXAiLCJIIiwiVGV4dCIsIkkiLCJDb21tZW50IiwiaiIsIkRPTVBhcnNlciIsIlAiLCJjcmVhdGVFbGVtZW50IiwiY29udGVudCIsIm93bmVyRG9jdW1lbnQiLCJVIiwiVyIsImltcGxlbWVudGF0aW9uIiwiQiIsImNyZWF0ZU5vZGVJdGVyYXRvciIsIkciLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInEiLCJjcmVhdGVEb2N1bWVudEZyYWdtZW50IiwiViIsImltcG9ydE5vZGUiLCJZIiwiY3JlYXRlSFRNTERvY3VtZW50IiwiZG9jdW1lbnRNb2RlIiwiSyIsIlgiLCIkIiwiSiIsIlEiLCJaIiwiZWUiLCJ0ZSIsIm5lIiwiY29uY2F0IiwicmUiLCJvZSIsImllIiwiYWUiLCJsZSIsInNlIiwiY2UiLCJkZSIsInVlIiwiZmUiLCJtZSIsInBlIiwiaGUiLCJ5ZSIsImdlIiwidmUiLCJiZSIsIlRlIiwiQWUiLCJ4ZSIsIlNlIiwiTGUiLCJrZSIsIndlIiwiRWUiLCJBTExPV0VEX1RBR1MiLCJBTExPV0VEX0FUVFIiLCJGT1JCSURfVEFHUyIsIkZPUkJJRF9BVFRSIiwiVVNFX1BST0ZJTEVTIiwiQUxMT1dfQVJJQV9BVFRSIiwiQUxMT1dfREFUQV9BVFRSIiwiQUxMT1dfVU5LTk9XTl9QUk9UT0NPTFMiLCJTQUZFX0ZPUl9KUVVFUlkiLCJTQUZFX0ZPUl9URU1QTEFURVMiLCJXSE9MRV9ET0NVTUVOVCIsIlJFVFVSTl9ET00iLCJSRVRVUk5fRE9NX0ZSQUdNRU5UIiwiUkVUVVJOX0RPTV9JTVBPUlQiLCJGT1JDRV9CT0RZIiwiU0FOSVRJWkVfRE9NIiwiS0VFUF9DT05URU5UIiwiSU5fUExBQ0UiLCJBTExPV0VEX1VSSV9SRUdFWFAiLCJodG1sIiwic3ZnIiwic3ZnRmlsdGVycyIsIm1hdGhNbCIsIkFERF9UQUdTIiwiQUREX0FUVFIiLCJBRERfVVJJX1NBRkVfQVRUUiIsInRhYmxlIiwiT2UiLCJlbGVtZW50IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwib3V0ZXJIVE1MIiwiTmUiLCJhdHRyaWJ1dGUiLCJnZXRBdHRyaWJ1dGVOb2RlIiwicmVtb3ZlQXR0cmlidXRlIiwiTWUiLCJtYXRjaCIsInBhcnNlRnJvbVN0cmluZyIsImRvY3VtZW50RWxlbWVudCIsImJvZHkiLCJmaXJzdEVsZW1lbnRDaGlsZCIsImluc2VydEJlZm9yZSIsImNyZWF0ZVRleHROb2RlIiwiY2hpbGROb2RlcyIsInF1ZXJ5U2VsZWN0b3IiLCJpbm5lckhUTUwiLCJfZSIsIlNIT1dfRUxFTUVOVCIsIlNIT1dfQ09NTUVOVCIsIlNIT1dfVEVYVCIsIkZJTFRFUl9BQ0NFUFQiLCJSZSIsIm5vZGVOYW1lIiwiQ2UiLCJmb3JFYWNoIiwiemUiLCJ0ZXh0Q29udGVudCIsImF0dHJpYnV0ZXMiLCJzZXRBdHRyaWJ1dGUiLCJ0YWdOYW1lIiwiYWxsb3dlZFRhZ3MiLCJjbG9uZU5vZGUiLCJyZXBsYWNlIiwiaW5zZXJ0QWRqYWNlbnRIVE1MIiwiRmUiLCJpbmRleE9mIiwiSGUiLCJhdHRyTmFtZSIsImF0dHJWYWx1ZSIsImtlZXBBdHRyIiwiYWxsb3dlZEF0dHJpYnV0ZXMiLCJuYW1lIiwibmFtZXNwYWNlVVJJIiwidmFsdWUiLCJ0cmltIiwiaWQiLCJzZXRBdHRyaWJ1dGVOUyIsInBvcCIsIkllIiwibmV4dE5vZGUiLCJzYW5pdGl6ZSIsIlR5cGVFcnJvciIsInRvU3RhdGljSFRNTCIsImFwcGVuZENoaWxkIiwiZmlyc3RDaGlsZCIsInNldENvbmZpZyIsImNsZWFyQ29uZmlnIiwiaXNWYWxpZEF0dHJpYnV0ZSIsImFkZEhvb2siLCJyZW1vdmVIb29rIiwicmVtb3ZlSG9va3MiLCJyZW1vdmVBbGxIb29rcyIsIm1vbWVudCIsIkRhdGUiLCJ2YWx1ZU9mIiwiVHQiLCJ1dGMiLCJfcGYiLCJlbXB0eSIsInVudXNlZFRva2VucyIsInVudXNlZElucHV0Iiwib3ZlcmZsb3ciLCJjaGFyc0xlZnRPdmVyIiwibnVsbElucHV0IiwiaW52YWxpZE1vbnRoIiwiaW52YWxpZEZvcm1hdCIsInVzZXJJbnZhbGlkYXRlZCIsImlzbyIsInBhcnNlZERhdGVQYXJ0cyIsIm1lcmlkaWVtIiwicmZjMjgyMiIsIndlZWtkYXlNaXNtYXRjaCIsIl9pc1ZhbGlkIiwiaXNOYU4iLCJfZCIsImdldFRpbWUiLCJpbnZhbGlkV2Vla2RheSIsIl9zdHJpY3QiLCJiaWdIb3VyIiwiaXNGcm96ZW4iLCJOYU4iLCJzb21lIiwibW9tZW50UHJvcGVydGllcyIsIl9pc0FNb21lbnRPYmplY3QiLCJfaSIsIl9mIiwiX2wiLCJfdHptIiwiX2lzVVRDIiwiX29mZnNldCIsIl9sb2NhbGUiLCJpc1ZhbGlkIiwidXBkYXRlT2Zmc2V0IiwiTWF0aCIsImNlaWwiLCJmbG9vciIsImlzRmluaXRlIiwibWluIiwiYWJzIiwic3VwcHJlc3NEZXByZWNhdGlvbldhcm5pbmdzIiwiY29uc29sZSIsIndhcm4iLCJkZXByZWNhdGlvbkhhbmRsZXIiLCJFcnJvciIsInN0YWNrIiwiRnVuY3Rpb24iLCJzZXQiLCJrZXlzIiwicG93IiwibWF4Iiwic3Vic3RyIiwibG9jYWxlRGF0YSIsIm9yZGluYWwiLCJpbnZhbGlkRGF0ZSIsImxvbmdEYXRlRm9ybWF0IiwibGFzdEluZGV4IiwiX3ciLCJEZSIsInllYXIiLCJwYXJzZVR3b0RpZ2l0WWVhciIsInBhcnNlSW50IiwiWWUiLCJtb250aCIsImRhdGUiLCJQZSIsIm1vbnRoc1Nob3J0IiwibW9udGhzIiwibW9udGhzU2hvcnRSZWdleCIsIm1vbnRoc1JlZ2V4IiwibW9udGhzUGFyc2UiLCJXZSIsInNwbGl0IiwiVWUiLCJzb3J0IiwiX21vbnRoc1JlZ2V4IiwiUmVnRXhwIiwiX21vbnRoc1Nob3J0UmVnZXgiLCJfbW9udGhzU3RyaWN0UmVnZXgiLCJfbW9udGhzU2hvcnRTdHJpY3RSZWdleCIsIkdlIiwiVVRDIiwiZ2V0VVRDRnVsbFllYXIiLCJzZXRVVENGdWxsWWVhciIsIlZlIiwiZ2V0VVRDRGF5IiwiZGF5T2ZZZWFyIiwid2VlayIsImplIiwid2Vla2RheXNNaW4iLCJ3ZWVrZGF5c1Nob3J0Iiwid2Vla2RheXMiLCJ3ZWVrZGF5c01pblJlZ2V4Iiwid2Vla2RheXNTaG9ydFJlZ2V4Iiwid2Vla2RheXNSZWdleCIsIndlZWtkYXlzUGFyc2UiLCJaZSIsIiRlIiwicWUiLCJKZSIsIkJlIiwiUWUiLCJkYXkiLCJfd2Vla2RheXNSZWdleCIsIl93ZWVrZGF5c1Nob3J0UmVnZXgiLCJfd2Vla2RheXNNaW5SZWdleCIsIl93ZWVrZGF5c1N0cmljdFJlZ2V4IiwiX3dlZWtkYXlzU2hvcnRTdHJpY3RSZWdleCIsIl93ZWVrZGF5c01pblN0cmljdFJlZ2V4IiwiWGUiLCJob3VycyIsIktlIiwibWludXRlcyIsImV0IiwiX21lcmlkaWVtUGFyc2UiLCJzZWNvbmRzIiwiX2lzUG0iLCJpc1BNIiwiX21lcmlkaWVtIiwidHQiLCJudCIsInN0IiwiY2FsZW5kYXIiLCJzYW1lRGF5IiwibmV4dERheSIsIm5leHRXZWVrIiwibGFzdERheSIsImxhc3RXZWVrIiwic2FtZUVsc2UiLCJMVFMiLCJMVCIsIkxMIiwiTExMIiwiTExMTCIsImRheU9mTW9udGhPcmRpbmFsUGFyc2UiLCJyZWxhdGl2ZVRpbWUiLCJmdXR1cmUiLCJwYXN0Iiwic3MiLCJtbSIsImhoIiwiZGQiLCJNTSIsInl5IiwiZG93IiwiZG95IiwibWVyaWRpZW1QYXJzZSIsIml0IiwicnQiLCJhdCIsIm90IiwiX2FiYnIiLCJyZXF1aXJlIiwidXQiLCJodCIsImx0IiwiYWJiciIsIl9jb25maWciLCJwYXJlbnRMb2NhbGUiLCJjb25maWciLCJkdCIsIl9hIiwiX292ZXJmbG93RGF5T2ZZZWFyIiwiX292ZXJmbG93V2Vla3MiLCJfb3ZlcmZsb3dXZWVrZGF5IiwiY3QiLCJmdCIsIm5vdyIsIl91c2VVVEMiLCJnZXRVVENNb250aCIsImdldFVUQ0RhdGUiLCJnZXRGdWxsWWVhciIsImdldE1vbnRoIiwiZ2V0RGF0ZSIsIkdHIiwiYnQiLCJfd2VlayIsImdnIiwiX2RheU9mWWVhciIsIl9uZXh0RGF5Iiwic2V0RnVsbFllYXIiLCJnZXREYXkiLCJzZXRVVENNaW51dGVzIiwiZ2V0VVRDTWludXRlcyIsIm10IiwiX3QiLCJ5dCIsImd0IiwidnQiLCJwdCIsInd0IiwiZXhlYyIsIll0IiwiTXQiLCJTdCIsIlVUIiwiR01UIiwiRURUIiwiRVNUIiwiQ0RUIiwiQ1NUIiwiTURUIiwiTVNUIiwiUERUIiwiUFNUIiwiRHQiLCJJU09fODYwMSIsIlJGQ18yODIyIiwibWVyaWRpZW1Ib3VyIiwiT3QiLCJwcmVwYXJzZSIsInNjb3JlIiwiY3JlYXRlRnJvbUlucHV0RmFsbGJhY2siLCJob3VyIiwibWludXRlIiwic2Vjb25kIiwibWlsbGlzZWNvbmQiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwiYWRkIiwieHQiLCJQdCIsIld0IiwiQ3QiLCJIdCIsInF1YXJ0ZXIiLCJpc29XZWVrIiwicGFyc2VGbG9hdCIsIl9taWxsaXNlY29uZHMiLCJfZGF5cyIsIl9tb250aHMiLCJfZGF0YSIsIl9idWJibGUiLCJSdCIsIlV0Iiwicm91bmQiLCJGdCIsInV0Y09mZnNldCIsIk50IiwiTHQiLCJHdCIsImNsb25lIiwic2V0VGltZSIsImxvY2FsIiwiVnQiLCJnZXRUaW1lem9uZU9mZnNldCIsIkV0IiwiSXQiLCJBdCIsImp0IiwibXMiLCJtaWxsaXNlY29uZHMiLCJadCIsInRvIiwiaXNCZWZvcmUiLCJ6dCIsImlzQWZ0ZXIiLCIkdCIsInF0IiwiZm4iLCJpbnZhbGlkIiwiSnQiLCJCdCIsIlF0IiwiWHQiLCJkZWZhdWx0Rm9ybWF0IiwiZGVmYXVsdEZvcm1hdFV0YyIsIkt0IiwibG9jYWxlIiwiZW4iLCJ0biIsIm5uIiwic24iLCJybiIsImFuIiwib24iLCJ3ZWVrWWVhciIsImlzb1dlZWtZZWFyIiwiX2RheU9mTW9udGhPcmRpbmFsUGFyc2UiLCJfb3JkaW5hbFBhcnNlIiwiX2RheU9mTW9udGhPcmRpbmFsUGFyc2VMZW5pZW50IiwidW4iLCJsbiIsImhuIiwiZG4iLCJjbiIsIm1uIiwiX24iLCJzdGFydE9mIiwiY2FsZW5kYXJGb3JtYXQiLCJmb3JtYXQiLCJkaWZmIiwiZW5kT2YiLCJ3ZWVrZGF5IiwiaXNvV2Vla2RheSIsImlzVXRjIiwicG9zdGZvcm1hdCIsImh1bWFuaXplIiwiZnJvbU5vdyIsInRvTm93IiwiZ2V0IiwiaW52YWxpZEF0IiwiaXNCZXR3ZWVuIiwiaXNTYW1lIiwiaXNTYW1lT3JBZnRlciIsImlzU2FtZU9yQmVmb3JlIiwibGFuZyIsInBhcnNpbmdGbGFncyIsInVuaXQiLCJwcmlvcml0eSIsInN1YnRyYWN0IiwidG9BcnJheSIsInRvT2JqZWN0IiwieWVhcnMiLCJ0b0RhdGUiLCJ0b0lTT1N0cmluZyIsImluc3BlY3QiLCJpc0xvY2FsIiwidG9KU09OIiwidW5peCIsImNyZWF0aW9uRGF0YSIsImlucHV0IiwiaXNVVEMiLCJzdHJpY3QiLCJpc0xlYXBZZWFyIiwicXVhcnRlcnMiLCJkYXlzSW5Nb250aCIsIndlZWtzIiwiaXNvV2Vla3MiLCJ3ZWVrc0luWWVhciIsImlzb1dlZWtzSW5ZZWFyIiwiZGF5cyIsIl9jaGFuZ2VJblByb2dyZXNzIiwicGFyc2Vab25lIiwiaGFzQWxpZ25lZEhvdXJPZmZzZXQiLCJpc0RTVCIsImlzVXRjT2Zmc2V0Iiwiem9uZUFiYnIiLCJ6b25lTmFtZSIsImRhdGVzIiwiem9uZSIsImlzRFNUU2hpZnRlZCIsIl9pc0RTVFNoaWZ0ZWQiLCJ5biIsImduIiwidm4iLCJwbiIsIl9jYWxlbmRhciIsIl9sb25nRGF0ZUZvcm1hdCIsInRvVXBwZXJDYXNlIiwiX2ludmFsaWREYXRlIiwiX29yZGluYWwiLCJfcmVsYXRpdmVUaW1lIiwicGFzdEZ1dHVyZSIsInNvdXJjZSIsImlzRm9ybWF0Iiwic3RhbmRhbG9uZSIsIl9tb250aHNTaG9ydCIsIl9tb250aHNQYXJzZUV4YWN0IiwidG9Mb2NhbGVMb3dlckNhc2UiLCJfbW9udGhzUGFyc2UiLCJfbG9uZ01vbnRoc1BhcnNlIiwiX3Nob3J0TW9udGhzUGFyc2UiLCJmaXJzdERheU9mWWVhciIsImZpcnN0RGF5T2ZXZWVrIiwiX3dlZWtkYXlzIiwiX3dlZWtkYXlzTWluIiwiX3dlZWtkYXlzU2hvcnQiLCJfd2Vla2RheXNQYXJzZUV4YWN0IiwiX3dlZWtkYXlzUGFyc2UiLCJfc2hvcnRXZWVrZGF5c1BhcnNlIiwiX21pbldlZWtkYXlzUGFyc2UiLCJfZnVsbFdlZWtkYXlzUGFyc2UiLCJjaGFyQXQiLCJsYW5nRGF0YSIsInduIiwiTW4iLCJrbiIsIlNuIiwiRG4iLCJZbiIsImFzIiwiT24iLCJUbiIsImJuIiwieG4iLCJQbiIsIlduIiwiQ24iLCJIbiIsIlJuIiwiVW4iLCJGbiIsIkxuIiwiTm4iLCJHbiIsIlZuIiwiRW4iLCJJbiIsIkFuIiwiam4iLCJabiIsInpuIiwiJG4iLCJ0b0ZpeGVkIiwiYXNTZWNvbmRzIiwicW4iLCJhc01pbGxpc2Vjb25kcyIsImFzTWludXRlcyIsImFzSG91cnMiLCJhc0RheXMiLCJhc1dlZWtzIiwiYXNNb250aHMiLCJhc1F1YXJ0ZXJzIiwiYXNZZWFycyIsInRvSXNvU3RyaW5nIiwiaXNEYXRlIiwiZHVyYXRpb24iLCJpc01vbWVudCIsImlzRHVyYXRpb24iLCJkZWZpbmVMb2NhbGUiLCJ1cGRhdGVMb2NhbGUiLCJsb2NhbGVzIiwibm9ybWFsaXplVW5pdHMiLCJyZWxhdGl2ZVRpbWVSb3VuZGluZyIsInJlbGF0aXZlVGltZVRocmVzaG9sZCIsIkhUTUw1X0ZNVCIsIkRBVEVUSU1FX0xPQ0FMIiwiREFURVRJTUVfTE9DQUxfU0VDT05EUyIsIkRBVEVUSU1FX0xPQ0FMX01TIiwiREFURSIsIlRJTUUiLCJUSU1FX1NFQ09ORFMiLCJUSU1FX01TIiwiV0VFSyIsIk1PTlRIIiwiY291bnRkb3duIiwiTUlMTElTRUNPTkRTIiwiU0VDT05EUyIsIk1JTlVURVMiLCJIT1VSUyIsIkRBWVMiLCJXRUVLUyIsIk1PTlRIUyIsIllFQVJTIiwiREVDQURFUyIsIkNFTlRVUklFUyIsIk1JTExFTk5JQSIsIkRFRkFVTFRTIiwiTUlMTElTRUNPTkRTX1BFUl9TRUNPTkQiLCJTRUNPTkRTX1BFUl9NSU5VVEUiLCJNSU5VVEVTX1BFUl9IT1VSIiwiSE9VUlNfUEVSX0RBWSIsIk1JTExJU0VDT05EU19QRVJfREFZIiwiREFZU19QRVJfV0VFSyIsIk1PTlRIU19QRVJfWUVBUiIsIllFQVJTX1BFUl9ERUNBREUiLCJERUNBREVTX1BFUl9DRU5UVVJZIiwiQ0VOVFVSSUVTX1BFUl9NSUxMRU5OSVVNIiwiYm9ycm93TW9udGhzIiwicmVmIiwic2hpZnQiLCJwcmV2VGltZSIsInNldE1vbnRoIiwiZGF5c1Blck1vbnRoIiwiYWRkVG9EYXRlIiwidHMiLCJzZXRNaWxsaXNlY29uZHMiLCJnZXRNaWxsaXNlY29uZHMiLCJzZXRTZWNvbmRzIiwiZ2V0U2Vjb25kcyIsInNldE1pbnV0ZXMiLCJnZXRNaW51dGVzIiwic2V0SG91cnMiLCJnZXRIb3VycyIsInNldERhdGUiLCJtaWxsZW5uaWEiLCJjZW50dXJpZXMiLCJkZWNhZGVzIiwiTEFCRUxTX1NJTkdMVUFSIiwiTEFCRUxTX1BMVVJBTCIsIkxBQkVMX0xBU1QiLCJMQUJFTF9ERUxJTSIsIkxBQkVMX05PVyIsImZvcm1hdHRlciIsImZvcm1hdE51bWJlciIsImZvcm1hdExpc3QiLCJwbHVyYWxpdHkiLCJUaW1lc3BhbiIsImZyYWN0aW9uIiwiZnJhYyIsImZyb21Vbml0IiwidG9Vbml0IiwiY29udmVyc2lvbiIsImRpZ2l0cyIsInJlZk1vbnRoIiwicmlwcGxlUm91bmRlZCIsImZyYWN0aW9uYWwiLCJwb3B1bGF0ZSIsInN0YXJ0IiwiZW5kIiwidW5pdHMiLCJjb3VudCIsInRtcCIsInJpcHBsZSIsImNhbGxiYWNrIiwic3RhcnRUUyIsImVuZFRTIiwidGltZXJJZCIsImRlbGF5Iiwic2V0SW50ZXJ2YWwiLCJlbXB0eUxhYmVsIiwibGFiZWwiLCJsYXN0IiwidG9IVE1MIiwidGFnIiwiYWRkVG8iLCJsaXN0IiwiQUxMIiwic2V0Rm9ybWF0Iiwic2luZ3VsYXIiLCJwbHVyYWwiLCJkZWxpbSIsInJlc2V0Rm9ybWF0Iiwic2V0TGFiZWxzIiwicmVzZXRMYWJlbHMiLCJ0bnMiLCJ3aW4iLCJyYWYiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJ3ZWJraXRSZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJtb3pSZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJtc1JlcXVlc3RBbmltYXRpb25GcmFtZSIsImNiIiwic2V0VGltZW91dCIsIndpbiQxIiwiY2FmIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJtb3pDYW5jZWxBbmltYXRpb25GcmFtZSIsImNsZWFyVGltZW91dCIsImV4dGVuZCIsIm9iaiIsImNvcHkiLCJ0YXJnZXQiLCJ1bmRlZmluZWQiLCJjaGVja1N0b3JhZ2VWYWx1ZSIsInNldExvY2FsU3RvcmFnZSIsInN0b3JhZ2UiLCJrZXkiLCJhY2Nlc3MiLCJzZXRJdGVtIiwiZ2V0Qm9keSIsImRvYyIsImZha2UiLCJkb2NFbGVtZW50Iiwic2V0RmFrZUJvZHkiLCJkb2NPdmVyZmxvdyIsInN0eWxlIiwiYmFja2dyb3VuZCIsInJlc2V0RmFrZUJvZHkiLCJyZW1vdmUiLCJvZmZzZXRIZWlnaHQiLCJhZGRDU1NSdWxlIiwic2hlZXQiLCJzZWxlY3RvciIsInJ1bGVzIiwiaW5kZXgiLCJpbnNlcnRSdWxlIiwiYWRkUnVsZSIsImdldENzc1J1bGVzTGVuZ3RoIiwiY3NzUnVsZXMiLCJhcnIiLCJzY29wZSIsImNsYXNzTGlzdFN1cHBvcnQiLCJoYXNDbGFzcyIsImVsIiwic3RyIiwiY2xhc3NMaXN0IiwiY29udGFpbnMiLCJjbGFzc05hbWUiLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIiwiaGFzQXR0ciIsImF0dHIiLCJoYXNBdHRyaWJ1dGUiLCJnZXRBdHRyIiwiZ2V0QXR0cmlidXRlIiwiaXNOb2RlTGlzdCIsIml0ZW0iLCJzZXRBdHRycyIsImVscyIsImF0dHJzIiwicmVtb3ZlQXR0cnMiLCJhdHRyTGVuZ3RoIiwiYXJyYXlGcm9tTm9kZUxpc3QiLCJubCIsImhpZGVFbGVtZW50IiwiZm9yY2VIaWRlIiwiZGlzcGxheSIsInNob3dFbGVtZW50IiwiaXNWaXNpYmxlIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsIndoaWNoUHJvcGVydHkiLCJwcm9wcyIsIlByb3BzIiwicHJlZml4IiwicHJvcCIsImdldEVuZFByb3BlcnR5IiwicHJvcEluIiwicHJvcE91dCIsImVuZFByb3AiLCJzdXBwb3J0c1Bhc3NpdmUiLCJvcHRzIiwiZGVmaW5lUHJvcGVydHkiLCJhZGRFdmVudExpc3RlbmVyIiwicGFzc2l2ZU9wdGlvbiIsInBhc3NpdmUiLCJhZGRFdmVudHMiLCJwcmV2ZW50U2Nyb2xsaW5nIiwib3B0aW9uIiwicmVtb3ZlRXZlbnRzIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIkV2ZW50cyIsInRvcGljcyIsImV2ZW50TmFtZSIsIm9mZiIsInNwbGljZSIsImVtaXQiLCJ0eXBlIiwib2JqZWN0IiwiRWxlbWVudCIsIm9wdGlvbnMiLCJjb250YWluZXIiLCJtb2RlIiwiYXhpcyIsIml0ZW1zIiwiZ3V0dGVyIiwiZWRnZVBhZGRpbmciLCJmaXhlZFdpZHRoIiwiYXV0b1dpZHRoIiwidmlld3BvcnRNYXgiLCJzbGlkZUJ5IiwiY2VudGVyIiwiY29udHJvbHMiLCJjb250cm9sc1Bvc2l0aW9uIiwiY29udHJvbHNUZXh0IiwiY29udHJvbHNDb250YWluZXIiLCJwcmV2QnV0dG9uIiwibmV4dEJ1dHRvbiIsIm5hdiIsIm5hdlBvc2l0aW9uIiwibmF2Q29udGFpbmVyIiwibmF2QXNUaHVtYm5haWxzIiwiYXJyb3dLZXlzIiwic3BlZWQiLCJhdXRvcGxheSIsImF1dG9wbGF5UG9zaXRpb24iLCJhdXRvcGxheVRpbWVvdXQiLCJhdXRvcGxheURpcmVjdGlvbiIsImF1dG9wbGF5VGV4dCIsImF1dG9wbGF5SG92ZXJQYXVzZSIsImF1dG9wbGF5QnV0dG9uIiwiYXV0b3BsYXlCdXR0b25PdXRwdXQiLCJhdXRvcGxheVJlc2V0T25WaXNpYmlsaXR5IiwiYW5pbWF0ZUluIiwiYW5pbWF0ZU91dCIsImFuaW1hdGVOb3JtYWwiLCJhbmltYXRlRGVsYXkiLCJsb29wIiwicmV3aW5kIiwiYXV0b0hlaWdodCIsInJlc3BvbnNpdmUiLCJsYXp5bG9hZCIsImxhenlsb2FkU2VsZWN0b3IiLCJ0b3VjaCIsIm1vdXNlRHJhZyIsInN3aXBlQW5nbGUiLCJuZXN0ZWQiLCJwcmV2ZW50QWN0aW9uV2hlblJ1bm5pbmciLCJwcmV2ZW50U2Nyb2xsT25Ub3VjaCIsImZyZWV6YWJsZSIsIm9uSW5pdCIsInVzZUxvY2FsU3RvcmFnZSIsIktFWVMiLCJFTlRFUiIsIlNQQUNFIiwiTEVGVCIsIlJJR0hUIiwidG5zU3RvcmFnZSIsImxvY2FsU3RvcmFnZUFjY2VzcyIsImJyb3dzZXJJbmZvIiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwidWlkIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInJlbW92ZUl0ZW0iLCJwb3NpdGlvbiIsImRpdiIsInJ1bGUiLCJDQUxDIiwicmVzdWx0IiwidmFsIiwidmFscyIsIndpZHRoIiwib2Zmc2V0V2lkdGgiLCJjYWxjIiwiUEVSQ0VOVEFHRUxBWU9VVCIsInN1cHBvcnRlZCIsIndyYXBwZXIiLCJvdXRlciIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImxlZnQiLCJjaGlsZHJlbiIsInBlcmNlbnRhZ2VMYXlvdXQiLCJDU1NNUSIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiY3VycmVudFN0eWxlIiwiVFJBTlNGT1JNIiwiSEFTM0RUUkFOU0ZPUk1TIiwidGYiLCJoYXMzZCIsImNzc1RGIiwiZ2V0UHJvcGVydHlWYWx1ZSIsImhhczNEVHJhbnNmb3JtcyIsIlRSQU5TSVRJT05EVVJBVElPTiIsIlRSQU5TSVRJT05ERUxBWSIsIkFOSU1BVElPTkRVUkFUSU9OIiwiQU5JTUFUSU9OREVMQVkiLCJUUkFOU0lUSU9ORU5EIiwiQU5JTUFUSU9ORU5EIiwic3VwcG9ydENvbnNvbGVXYXJuIiwidG5zTGlzdCIsIm9wdGlvbnNFbGVtZW50cyIsImNhcm91c2VsIiwicmVzcG9uc2l2ZVRlbSIsInVwZGF0ZU9wdGlvbnMiLCJtaWRkbGVXcmFwcGVyIiwiYnJlYWtwb2ludFpvbmUiLCJob3Jpem9udGFsIiwib3V0ZXJXcmFwcGVyIiwiaW5uZXJXcmFwcGVyIiwiY29udGFpbmVyUGFyZW50IiwiY29udGFpbmVySFRNTCIsInNsaWRlSXRlbXMiLCJzbGlkZUNvdW50Iiwid2luZG93V2lkdGgiLCJnZXRXaW5kb3dXaWR0aCIsImlzT24iLCJzZXRCcmVha3BvaW50Wm9uZSIsInNsaWRlUG9zaXRpb25zIiwiaW1nc0NvbXBsZXRlIiwibGl2ZXJlZ2lvbkN1cnJlbnQiLCJpdGVtc01heCIsIm1lZGlhIiwiZ2V0T3B0aW9uIiwidmlld3BvcnQiLCJnZXRWaWV3cG9ydFdpZHRoIiwiZml4ZWRXaWR0aFZpZXdwb3J0V2lkdGgiLCJzbGlkZUl0ZW1zT3V0IiwiY2xvbmVDb3VudCIsImJwIiwidGVtIiwiZ2V0SXRlbXNNYXgiLCJoYXNPcHRpb24iLCJzbGlkZUNvdW50TmV3IiwiaGFzUmlnaHREZWFkWm9uZSIsInJpZ2h0Qm91bmRhcnkiLCJnZXRSaWdodEJvdW5kYXJ5IiwidXBkYXRlSW5kZXhCZWZvcmVUcmFuc2Zvcm0iLCJ0cmFuc2Zvcm1BdHRyIiwidHJhbnNmb3JtUHJlZml4IiwidHJhbnNmb3JtUG9zdGZpeCIsImdldEluZGV4TWF4IiwiZ2V0U3RhcnRJbmRleCIsImluZGV4Q2FjaGVkIiwiaW5kZXhNaW4iLCJnZXRDdXJyZW50U2xpZGUiLCJpbmRleE1heCIsIm1vdmVEaXJlY3Rpb25FeHBlY3RlZCIsInJ1bm5pbmciLCJldmVudHMiLCJuZXdDb250YWluZXJDbGFzc2VzIiwic2xpZGVJZCIsInRuc0lkIiwiZGlzYWJsZSIsImRpc2FibGVkIiwiZ2V0RnJlZXplIiwiZnJvemVuIiwiY29udHJvbHNFdmVudHMiLCJjbGljayIsIm9uQ29udHJvbHNDbGljayIsImtleWRvd24iLCJnZXRFdmVudCIsImtleUluZGV4Iiwia2V5Q29kZSIsIm5hdkV2ZW50cyIsIm9uVHJhbnNpdGlvbkVuZCIsImdldFRhcmdldCIsIm5hdkluZGV4IiwibmF2Q2xpY2tlZCIsIk51bWJlciIsInRhcmdldEluZGV4QmFzZSIsInBhZ2VzIiwidGFyZ2V0SW5kZXgiLCJnb1RvIiwibmF2Q3VycmVudEluZGV4IiwiYW5pbWF0aW5nIiwic3RvcEF1dG9wbGF5IiwiY3VyRWxlbWVudCIsImFjdGl2ZUVsZW1lbnQiLCJzZXRGb2N1cyIsIm5hdkl0ZW1zIiwiaG92ZXJFdmVudHMiLCJtb3VzZW92ZXIiLCJzdG9wQXV0b3BsYXlUaW1lciIsImF1dG9wbGF5SG92ZXJQYXVzZWQiLCJtb3VzZW91dCIsInNldEF1dG9wbGF5VGltZXIiLCJ2aXNpYmlsaXR5RXZlbnQiLCJ2aXNpYmlsaXR5Y2hhbmdlIiwiaGlkZGVuIiwiYXV0b3BsYXlWaXNpYmlsaXR5UGF1c2VkIiwiZG9jbWVudEtleWRvd25FdmVudCIsInRvdWNoRXZlbnRzIiwidG91Y2hzdGFydCIsIm9uUGFuU3RhcnQiLCJ0b3VjaG1vdmUiLCJvblBhbk1vdmUiLCJ0b3VjaGVuZCIsIm9uUGFuRW5kIiwidG91Y2hjYW5jZWwiLCJkcmFnRXZlbnRzIiwibW91c2Vkb3duIiwibW91c2Vtb3ZlIiwibW91c2V1cCIsIm1vdXNlbGVhdmUiLCJoYXNDb250cm9scyIsImhhc05hdiIsImhhc0F1dG9wbGF5IiwiaGFzVG91Y2giLCJoYXNNb3VzZURyYWciLCJzbGlkZUFjdGl2ZUNsYXNzIiwiaW1nQ29tcGxldGVDbGFzcyIsImltZ0V2ZW50cyIsImxvYWQiLCJpbWdMb2FkZWQiLCJlcnJvciIsImltZyIsImltZ0NvbXBsZXRlZCIsInByZXZlbnRTY3JvbGwiLCJwcmV2SXNCdXR0b24iLCJuZXh0SXNCdXR0b24iLCJjb250cm9sc0NvbnRhaW5lckhUTUwiLCJwcmV2QnV0dG9uSFRNTCIsIm5leHRCdXR0b25IVE1MIiwibmF2Q29udGFpbmVySFRNTCIsImdldFBhZ2VzIiwicGFnZXNDYWNoZWQiLCJnZXRDdXJyZW50TmF2SW5kZXgiLCJuYXZDdXJyZW50SW5kZXhDYWNoZWQiLCJuYXZBY3RpdmVDbGFzcyIsIm5hdlN0ciIsIm5hdlN0ckN1cnJlbnQiLCJhdXRvcGxheVRpbWVyIiwiYXV0b3BsYXlVc2VyUGF1c2VkIiwiYXV0b3BsYXlCdXR0b25IVE1MIiwiYXV0b3BsYXlIdG1sU3RyaW5ncyIsInRyYW5zbGF0ZUluaXQiLCJyYWZJbmRleCIsImluaXRQb3NpdGlvbiIsImxhc3RQb3NpdGlvbiIsInBhblN0YXJ0IiwiZ2V0RGlzdCIsInJlc2V0VmFyaWJsZXNXaGVuRGlzYWJsZSIsIndwIiwiYXJpYS1oaWRkZW4iLCJ0YWJpbmRleCIsImZyYWdtZW50QmVmb3JlIiwiZnJhZ21lbnRBZnRlciIsIm51bSIsImNsb25lRmlyc3QiLCJjbG9uZUxhc3QiLCJpbml0U3RydWN0dXJlIiwiZm9udFNpemUiLCJzbGlkZSIsIm1hcmdpbkxlZnQiLCJnZXRUcmFuc2l0aW9uRHVyYXRpb25TdHlsZSIsImdldElubmVyV3JhcHBlclN0eWxlcyIsImdldENvbnRhaW5lcldpZHRoIiwiZ2V0U2xpZGVXaWR0aFN0eWxlIiwiZ2V0U2xpZGVHdXR0ZXJTdHlsZSIsImdldEFuaW1hdGlvbkR1cmF0aW9uU3R5bGUiLCJ1cGRhdGVfY2Fyb3VzZWxfdHJhbnNpdGlvbl9kdXJhdGlvbiIsIm1pZGRsZVdyYXBwZXJTdHIiLCJpbm5lcldyYXBwZXJTdHIiLCJjb250YWluZXJTdHIiLCJzbGlkZVN0ciIsIml0ZW1zQlAiLCJmaXhlZFdpZHRoQlAiLCJzcGVlZEJQIiwiZWRnZVBhZGRpbmdCUCIsImF1dG9IZWlnaHRCUCIsImd1dHRlckJQIiwiaW5pdFNoZWV0IiwiaW5pdFNsaWRlclRyYW5zZm9ybSIsInVwZGF0ZUluZGV4IiwibGVmdEVkZ2UiLCJyaWdodEVkZ2UiLCJ0cmFuc2Zvcm1Db3JlIiwicG9zdGZpeCIsInRpY2siLCJwb3NpdGlvblRpY2siLCJyZXNldER1cmF0aW9uIiwiZG9Db250YWluZXJUcmFuc2Zvcm0iLCJnZXRDb250YWluZXJUcmFuc2Zvcm1WYWx1ZSIsIm1vdmVFbGVtZW50IiwidXBkYXRlQ29udGVudFdyYXBwZXJIZWlnaHQiLCJldmUiLCJhbmltYXRlU2xpZGUiLCJnZXRJbmZvIiwiaW5mbyIsInBsYXkiLCJzdGFydEF1dG9wbGF5IiwicGF1c2UiLCJ1cGRhdGVTbGlkZXJIZWlnaHQiLCJ1cGRhdGVJbm5lcldyYXBwZXJIZWlnaHQiLCJyZWZyZXNoIiwiZGVzdHJveSIsIm93bmVyTm9kZSIsInJlc2l6ZSIsIm9uUmVzaXplIiwidG9nZ2xlQXV0b3BsYXkiLCJjbGVhckludGVydmFsIiwiaHRtbExpc3QiLCJwcmV2RWwiLCJwcmV2aW91c0VsZW1lbnRTaWJsaW5nIiwicGFyZW50RWwiLCJuZXh0RWxlbWVudFNpYmxpbmciLCJyZWJ1aWxkIiwiY29uZGl0aW9uIiwiaW5kIiwiZ2V0QWJzSW5kZXgiLCJhYnNJbmRleCIsImlubmVyV2lkdGgiLCJjbGllbnRXaWR0aCIsImdldEluc2VydFBvc2l0aW9uIiwicG9zIiwiZ2FwIiwiZ2V0Q2xpZW50V2lkdGgiLCJyZWN0IiwicmlnaHQiLCJ3dyIsImVkZ2VQYWRkaW5nVGVtIiwiZ3V0dGVyVGVtIiwiZml4ZWRXaWR0aFRlbSIsInNwZWVkVGVtIiwiZ3V0dGVyVGVtVW5pdCIsIml0ZW1zVGVtIiwiZGl2aWRlbmQiLCJnZXRDU1NQcmVmaXgiLCJzdWJzdHJpbmciLCJpbWdzIiwicXVlcnlTZWxlY3RvckFsbCIsInNyYyIsImltZ3NMb2FkZWRDaGVjayIsImdldEltYWdlQXJyYXkiLCJpbml0U2xpZGVyVHJhbnNmb3JtU3R5bGVDaGVjayIsImRvQ29udGFpbmVyVHJhbnNmb3JtU2lsZW50IiwiaW5pdFRvb2xzIiwiaW5pdEV2ZW50cyIsInN0eWxlc0FwcGxpY2F0aW9uQ2hlY2siLCJpbml0U2xpZGVyVHJhbnNmb3JtQ29yZSIsInNldFNsaWRlUG9zaXRpb25zIiwidXBkYXRlU2xpZGVTdGF0dXMiLCJnZXRMaXZlUmVnaW9uU3RyIiwidHh0IiwiZGF0YS1hY3Rpb24iLCJhcmlhLWxhYmVsIiwiZGF0YS1uYXYiLCJhcmlhLWNvbnRyb2xzIiwibmF2SHRtbCIsImhpZGRlblN0ciIsInVwZGF0ZU5hdlZpc2liaWxpdHkiLCJkYXRhLWNvbnRyb2xzIiwiaXNCdXR0b24iLCJ1cGRhdGVDb250cm9sc1N0YXR1cyIsImRpc2FibGVVSSIsInJlc2l6ZVRhc2tzIiwiZG9BdXRvSGVpZ2h0IiwiZG9MYXp5TG9hZCIsImRpc2FibGVTbGlkZXIiLCJmcmVlemVTbGlkZXIiLCJhZGRpdGlvbmFsVXBkYXRlcyIsImJwQ2hhbmdlZCIsImJyZWFrcG9pbnRab25lVGVtIiwibmVlZENvbnRhaW5lclRyYW5zZm9ybSIsImluZENoYW5nZWQiLCJpdGVtc0NoYW5nZWQiLCJkaXNhYmxlVGVtIiwiZnJlZXplVGVtIiwiYXJyb3dLZXlzVGVtIiwiY29udHJvbHNUZW0iLCJuYXZUZW0iLCJ0b3VjaFRlbSIsIm1vdXNlRHJhZ1RlbSIsImF1dG9wbGF5VGVtIiwiYXV0b3BsYXlIb3ZlclBhdXNlVGVtIiwiYXV0b3BsYXlSZXNldE9uVmlzaWJpbGl0eVRlbSIsImluZGV4VGVtIiwiYXV0b0hlaWdodFRlbSIsImNvbnRyb2xzVGV4dFRlbSIsImNlbnRlclRlbSIsImF1dG9wbGF5VGV4dFRlbSIsImNsYXNzTiIsImVuYWJsZVVJIiwiZW5hYmxlU2xpZGVyIiwibWFyZ2luIiwidW5mcmVlemVTbGlkZXIiLCJoZWlnaHQiLCJsZW4iLCJ1cGRhdGVMaXZlUmVnaW9uIiwidXBkYXRlR2FsbGVyeVNsaWRlUG9zaXRpb25zIiwiYXV0b2hlaWdodFRlbSIsImRlbGV0ZVJ1bGUiLCJyZW1vdmVSdWxlIiwidnAiLCJnZXRWaXNpYmxlU2xpZGVSYW5nZSIsInJhbmdlc3RhcnQiLCJyYW5nZWVuZCIsInBvaW50IiwiY2VsbCIsInN0b3BQcm9wYWdhdGlvbiIsInNyY3NldCIsIm5hdlByZXYiLCJuYXZDdXJyZW50IiwidXBkYXRlTmF2U3RhdHVzIiwiZ2V0TWF4U2xpZGVIZWlnaHQiLCJzbGlkZVN0YXJ0Iiwic2xpZGVSYW5nZSIsImhlaWdodHMiLCJtYXhIZWlnaHQiLCJhdHRyMiIsImJhc2UiLCJyYW5nZSIsImdldExvd2VyQ2FzZU5vZGVOYW1lIiwiaXNBcmlhRGlzYWJsZWQiLCJkaXNFbmFibGVFbGVtZW50IiwicHJldkRpc2FibGVkIiwibmV4dERpc2FibGVkIiwiZGlzYWJsZVByZXYiLCJkaXNhYmxlTmV4dCIsImdldENlbnRlckdhcCIsImRlbm9taW5hdG9yIiwibnVtYmVyIiwiY2xhc3NPdXQiLCJjbGFzc0luIiwiaXNPdXQiLCJyZW5kZXIiLCJzbGlkZXJNb3ZlZCIsInN0clRyYW5zIiwiZXZlbnQiLCJwcm9wZXJ0eU5hbWUiLCJpbmRleEdhcCIsImZhY3RvciIsImRpciIsInBhc3NFdmVudE9iamVjdCIsInRhcmdldEluIiwidXBkYXRlQXV0b3BsYXlCdXR0b24iLCJhY3Rpb24iLCJmb2N1cyIsImlzVG91Y2hFdmVudCIsImNoYW5nZWRUb3VjaGVzIiwic3JjRWxlbWVudCIsInByZXZlbnREZWZhdWx0QmVoYXZpb3IiLCJwcmV2ZW50RGVmYXVsdCIsInJldHVyblZhbHVlIiwiZ2V0TW92ZURpcmVjdGlvbkV4cGVjdGVkIiwiYW5nbGUiLCJhdGFuMiIsIlBJIiwiZGlyZWN0aW9uIiwiY2xpZW50WCIsImNsaWVudFkiLCJwYW5VcGRhdGUiLCJlcnIiLCJkaXN0IiwicGVyY2VudGFnZVgiLCJwcmV2ZW50Q2xpY2siLCJpbmRleE1vdmVkIiwibW92ZWQiLCJyb3VnaCIsImRpc3BsYXlJbmRleCIsImdldFBhcmFtZXRlckJ5TmFtZSIsInVybCIsImxvY2F0aW9uIiwiaHJlZiIsInJlc3VsdHMiLCJkZWNvZGVVUklDb21wb25lbnQiLCJyZWYxIiwiYXJncyIsIm90aGVyIiwidXBkYXRlRnVsbFllYXIiLCJjaGVja01vZGFsIiwiZGF0YXNldCIsIm1vZGFsTGF1bmNoIiwibGF1bmNoTW9kYWwiLCJjbG9zZU1vZGFsQ2xpY2siLCJjbG9zZU1vZGFsIiwiY2xvc2VNb2RhbEVzYyIsIm1vZGFsVGFyZ2V0IiwicGFyZW50RWxlbWVudCIsIm9yZGVyTnVtYmVyIiwiYnV0dG9uIiwiY29udGFjdFByZWZlcmVuY2UiLCJmb3JtIiwiYWpheF9vcmRlcl90cmFja2luZyIsImFqYXhfdXJsIiwiX2FqYXhfbm9uY2UiLCJub25jZSIsImNvbnRhY3RfcHJlZmVyZW5jZSIsImN1c3RvbWVyX25hbWUiLCJlbWFpbF9hZGRyZXNzIiwicGhvbmVfbnVtYmVyIiwibWVzc2FnZSIsIm9yZGVyX251bWJlciIsInRoZW4iLCJtb2RhbENvbnRlbnQiLCJjYXRjaCIsImxvZyIsInRleHQiLCJuZXdEYXRlIiwidG9wTGV2ZWwiLCJlYWNoIiwiZmlyc3QiLCJtZWdhTWVudXMiLCJtZW51IiwibWVnYU1lbnVQYXJlbnRzIiwidG9nZ2xlU3ViTWVudSIsInRvZ2dsZSIsInNob3dDaGlsZEVxdWlwbWVudCIsImhlYWRlckhlaWdudCIsInRvcCIsInBhcmVudCIsInNpYmxpbmdzIiwibmV4dCIsInRvZ2dsZUNsYXNzIiwialF1ZXJ5IiwibW9kZWxNb2RpZmVyU2VsZWN0IiwibG9jIiwiYWxsUGFydHMiLCJlbGVtIiwic2t1IiwiYWpheCIsImRhdGFUeXBlIiwic3VjY2VzcyIsInByaWNlIiwiZmluZCIsIm1haW50ZW5hbmNlS2l0Q29udGFpbmVyIiwib25sb2FkIiwib2Zmc2V0VG9wIiwiYmFzZUZvbnRTaXplIiwic2Nyb2xsWSIsIlN0cmluZyIsImluY2x1ZGVzIiwic2VhcmNoIiwiQ2hhcmFjdGVyRGF0YSIsIkRvY3VtZW50VHlwZSIsImNvbmZpZ3VyYWJsZSIsImVudW1lcmFibGUiLCJ3cml0YWJsZSIsInNlYXJjaEVsZW1lbnQiLCJmcm9tSW5kZXgiLCJyZXZpZXdMaW5rIiwibGluayIsImZpdG1lbnRUZXh0RmlsdGVyIiwicHJvZHVjdEZpdG1lbnRUYWdzIiwicHJvZHVjdFRodW1icyIsInN3YXBGZWF0dXJlZFBob3RvIiwibmV3SW1hZ2UiLCJmdWxsSW1hZ2UiLCJ0aHVtYiIsImNzcyIsIm9yaWdpbiIsInNwaW5uZXIiLCJwcm9kdWN0cyIsImNoZWNrb3V0Iiwic2t1SW5wdXQiLCJxdHlJbnB1dCIsInF0eSIsInJlcyIsInByZXBlbmQiLCJhcHBlbmQiLCJmb3JtYXRSZXN1bHRzIiwicGFyZW50cyIsInByb2R1Y3RQcmljZSIsIm5ld1F0eSIsIm5ld1N1YnRvdGFsIiwicHJvZHVjdHNUb0FkZCIsImdhIiwiZXZlbnRDYXRlZ29yeSIsImV2ZW50QWN0aW9uIiwiZXZlbnRMYWJlbCIsImhpdENhbGxiYWNrIiwiY2FydERyYXdlciIsImNhcnRJdGVtTGlzdCIsImNsb3NlRHJhd2VyQnV0dG9uIiwiY2FydFN1YnRvdGFsIiwiaXRlbUNvdW50VGV4dCIsIm9wZW5EcmF3ZXIiLCJyZWxvYWQiLCJjbG9zZURyYXdlciIsInVwZGF0ZUNhcnRDb3VudCIsInN1YnRvdGFsIiwicHJvZHVjdFF0eSIsInNob3ciLCJoaWRlIiwiYW5pbWF0ZSIsInByb2R1Y3RJRCIsInByb2R1Y3RfaWQiLCJsaW5lSXRlbXMiLCJtYXAiLCJTYWxlUHJpY2UiLCJwcmljZUhUTUwiLCJwcm9kdWN0U2t1IiwicHJvZHVjdFJlZ3VsYXJQcmljZSIsInByb2R1Y3RLZXkiLCJwcm9kdWN0UGVybWFsaW5rIiwicHJvZHVjdEltZyIsInByb2R1Y3ROYW1lIiwicHJvZHVjdF9rZXkiLCJhY2NvcmRpYW5CdXR0b25zIiwiYWxsVG9vbFRpcHMiLCIkdGhpcyIsImVtYWlsIiwiZmlyc3ROYW1lIiwibGFzdE5hbWUiLCJtb2RlbE51bWJlciIsImN1cnJlbnRIb3VycyIsIm1vd2luZ1RpbWUiLCJzZXJpYWxpemUiLCJjYWNoZSIsImNvbnRlbnRUeXBlIiwibXNnIiwibmF2T2Zmc2V0IiwibmF2V2lkdGgiLCJtYXhXaWR0aCIsInN0aWNreUNvbnRhaW5lciIsInN0aWNreUVsZW1lbnQiLCJzdGlja3lTaWJsaW5nIiwiY2hpbGQiLCJzdGlja3lTaWJsaW5nV2lkdGgiLCJzdGlja3lDb250YWluZXJUb3AiLCJzdGlja3lFbGVtZW50V2lkdGgiLCJ3YXRjaEZvclN0aWNreSIsInRyYW5zZm9ybSIsImNhcnRMaXN0IiwidXBkYXRlQ2FydEJ1dHRvbiIsImNhcnRUb3RhbCIsImNvdXBvbnMiLCJpdGVtRGV0YWlscyIsInJlZ3VsYXJQcmljZSIsInNhbGVQcmljZSIsImNvdXBvbiIsImNvdXBvblR5cGUiLCJkaXNjb3VudFR5cGUiLCJ1cGRhdGVDYXJ0VG90YWxzIiwidXBkYXRlTGluZUl0ZW1QcmljZSIsInRvdGFscyIsInRvdGFsIiwic2hpcFRvRGlmZmVyZW50Iiwic2hpcERldGFpbHMiLCJjaGVja2VkIiwibWFpbGNoaW1wT3B0SW4iLCJzZWFyY2hSZXN1bHRDb3VudCIsInNlYXJjaEJhciIsInNlYXJjaElucHV0Iiwic2VhcmNoUmVzdWx0cyIsInBvc3RTZWFyY2hSZXN1bHRzIiwicHJvZHVjdFNlYXJjaFJlc3VsdHMiLCJjYXRlZ29yaWVzU2VhcmNoUmVzdWx0cyIsIm1vZGVsc1NlYXJjaFJlc3VsdHMiLCJ2aWV3QWxsU2VhcmNoUmVzdWx0cyIsInNlYXJjaFJlcXVlc3QiLCJkZWJvdW5jZVRpbWVvdXQiLCJoYW5kbGVDaGFuZ2UiLCJzZWFyY2hJbnB1dFZhbHVlIiwiekluZGV4Iiwic2VhcmNoTGlua0NhdGVnb3J5Iiwic2VhcmNoTGlua1RleHQiLCJzZWFyY2hUZXJtIiwicG9zdHMiLCJjYXRlZ29yaWVzIiwibW9kZWxzIiwicG9zdCIsInRpdGxlIiwicHJvZHVjdCIsImltYWdlIiwiY2F0ZWdvcnkiLCJzZWFyY2hSZXN1bHRzSFRNTCIsImVhY2hDb3VudGRvd24iLCJmb3JtYXR0ZWREYXRlIiwicmVzdWx0c0NvbnRhaW5lciIsIm9yZGVyRGV0YWlsc0NvbnRhaW5lciIsIm9yZGVycyIsImFsbEN1cnJlbnRFcnJvcnMiLCJ6aXBjb2RlIiwibG9hZGluZyIsImFsbEVycm9ycyIsIm1lc3NhZ2VzIiwiZXJyb3JzTGlzdCIsImxpc3RTdHlsZVR5cGUiLCJ2YWx1ZXMiLCJvcmRlciIsInVzZXIiLCJkaXNwbGF5TmFtZSIsImRpc3BsYXlfbmFtZSIsInBob25lTnVtYmVyIiwiZW1haWxBZGRyZXNzIiwidXBkYXRlTW9kYWxWYWx1ZXMiLCJmb3JtYXRPcmRlcnMiLCJvcmRlcklkIiwib3JkZXJJRCIsIm9yZGVyU3RhdHVzIiwicG9zdF9zdGF0dXMiLCJvcmRlck1ldGEiLCJmYW5jeSIsInBvc3RfZGF0ZV9nbXQiLCJJRCIsIm9yZGVyQ29udGVudCIsIm9yZGVyRGV0YWlsc0xpc3RDb250YWluZXIiLCJvcmRlck5vdGVzTGlzdENvbnRhaW5lciIsIm9yZGVyRGV0YWlscyIsIm9yZGVyRGV0YWlsc0xpc3QiLCJ1bml0X3ByaWNlIiwib3JkZXJOb3RlcyIsIm9yZGVyTm90ZXNMaXN0Iiwibm90ZSIsImNvbW1lbnRDb250ZW50IiwiY29tbWVudEF1dGhvckltZyIsImNvbW1lbnRBdXRob3IiLCJjb21tZW50RGF0ZSIsImFsZXJ0IiwiYWNjb3VudE5hdmlnYXRpb24iLCJhY2NvdW50TmF2aWdhdGlvbkxpc3QiLCJuYXZpZ2F0aW9uTGlua3MiLCJsb2FkTW9yZSIsIm9mZnNldCIsInBvc3RzTGlzdCIsImN1cnJlbnRDYXRlZ29yeSIsImNhcmQiLCJjYXRlZ29yeU5hbWUiLCJyZW5kZXJlZCIsImV4Y2VycHQiXSwibWFwcGluZ3MiOiJBQVlBLElBQUFBLFFDWEEsU0FBQUMsRUFBQUMsR0FBQSxtQkFBQUMsUUFBQUEsT0FBQUMsSUFBQUQsT0FB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LE1BQUEsTUFBQSxLQUFBLEtBQUEsVUFBQSxLQUFBLFdBQUEsYUFBQSxTQUFBLE9BQUEsU0FBQSxPQUFBLEtBQUEsS0FBQSxLQUFBLEtBQUEsS0FBQSxLQUFBLE9BQUEsU0FBQSxTQUFBLEtBQUEsT0FBQSxJQUFBLE1BQUEsUUFBQSxNQUFBLE1BQUEsUUFBQSxTQUFBLEtBQUEsT0FBQSxNQUFBLE9BQUEsVUFBQSxPQUFBLFdBQUEsUUFBQSxNQUFBLE9BQUEsS0FBQSxXQUFBLFNBQUEsU0FBQSxJQUFBLE1BQUEsV0FBQSxJQUFBLEtBQUEsS0FBQSxPQUFBLElBQUEsT0FBQSxVQUFBLFNBQUEsU0FBQSxRQUFBLFNBQUEsU0FBQSxPQUFBLFNBQUEsU0FBQSxRQUFBLE1BQUEsVUFBQSxNQUFBLFFBQUEsUUFBQSxLQUFBLFdBQUEsV0FBQSxRQUFBLEtBQUEsUUFBQSxPQUFBLEtBQUEsUUFBQSxLQUFBLElBQUEsS0FBQSxNQUFBLFFBQUEsUUFBQUYsR0FBQUUsRUFBQSxDQUFBLE1BQUEsSUFBQSxXQUFBLGNBQUEsZUFBQSxlQUFBLGdCQUFBLG1CQUFBLFFBQUEsU0FBQSxTQUFBLFdBQUEsT0FBQSxPQUFBLFVBQUEsU0FBQSxPQUFBLElBQUEsUUFBQSxXQUFBLFFBQUEsUUFBQSxPQUFBLGlCQUFBLFNBQUEsT0FBQSxXQUFBLFFBQUEsT0FBQSxVQUFBLFVBQUEsV0FBQSxpQkFBQSxPQUFBLE9BQUEsUUFBQSxTQUFBLFNBQUEsT0FBQSxXQUFBLFFBQUEsT0FBQSxRQUFBLFFBQUEsT0FBQSxVQUFBaUMsR0FBQWpDLEVBQUEsQ0FBQSxVQUFBLGdCQUFBLHNCQUFBLGNBQUEsbUJBQUEsb0JBQUEsb0JBQUEsaUJBQUEsVUFBQSxVQUFBLFVBQUEsVUFBQSxVQUFBLGlCQUFBLFVBQUEsY0FBQSxlQUFBLFdBQUEsZUFBQSxxQkFBQSxjQUFBLFNBQUEsaUJBQUFVLEdBQUFWLEVBQUEsQ0FBQSxPQUFBLFdBQUEsU0FBQSxVQUFBLFFBQUEsU0FBQSxLQUFBLGFBQUEsZUFBQSxLQUFBLEtBQUEsUUFBQSxVQUFBLFdBQUEsUUFBQSxPQUFBLEtBQUEsVUFBQSxRQUFBLFVBQUEsT0FBQSxPQUFBLFVBQUEsU0FBQSxNQUFBLFFBQUEsTUFBQSxTQUFBLGVBQUFrQyxHQUFBbEMsRUFBQSxDQUFBLFVBQUFtQyxFQUFBekMsT0FBQXNDLFFBQUEsU0FBQTVELEdBQUEsT0FBQUEsR0FBQWdFLEdBQUFELEVBQUEsQ0FBQSxTQUFBLFNBQUEsUUFBQSxNQUFBLGVBQUEsYUFBQSxVQUFBLFNBQUEsY0FBQSxjQUFBLFVBQUEsT0FBQSxRQUFBLFFBQUEsUUFBQSxPQUFBLFVBQUEsU0FBQSxjQUFBLFdBQUEsVUFBQSxNQUFBLFdBQUEsV0FBQSxVQUFBLE9BQUEsTUFBQSxVQUFBLFNBQUEsU0FBQSxPQUFBLE9BQUEsV0FBQSxLQUFBLFlBQUEsUUFBQSxRQUFBLE9BQUEsT0FBQSxPQUFBLE1BQUEsTUFBQSxZQUFBLFFBQUEsU0FBQSxNQUFBLFdBQUEsT0FBQSxVQUFBLGFBQUEsU0FBQSxPQUFBLFVBQUEsVUFBQSxjQUFBLFNBQUEsVUFBQSxVQUFBLGFBQUEsV0FBQSxNQUFBLFdBQUEsTUFBQSxXQUFBLE9BQUEsT0FBQSxVQUFBLGFBQUEsUUFBQSxXQUFBLFFBQUEsT0FBQSxRQUFBLE9BQUEsVUFBQSxRQUFBLE1BQUEsU0FBQSxPQUFBLFFBQUEsVUFBQSxXQUFBLFFBQUEsT0FBQSxTQUFBLFNBQUEsUUFBQSxRQUFBLFVBQUFFLEdBQUFGLEVBQUEsQ0FBQSxnQkFBQSxhQUFBLGFBQUEscUJBQUEsU0FBQSxnQkFBQSxnQkFBQSxVQUFBLGdCQUFBLGlCQUFBLFFBQUEsT0FBQSxLQUFBLFFBQUEsT0FBQSxZQUFBLFlBQUEsUUFBQSxzQkFBQSw4QkFBQSxnQkFBQSxrQkFBQSxLQUFBLEtBQUEsSUFBQSxLQUFBLEtBQUEsa0JBQUEsWUFBQSxVQUFBLFVBQUEsTUFBQSxXQUFBLFlBQUEsTUFBQSxPQUFBLGVBQUEsWUFBQSxTQUFBLGNBQUEsZ0JBQUEsY0FBQSxZQUFBLG1CQUFBLGVBQUEsYUFBQSxlQUFBLGNBQUEsS0FBQSxLQUFBLEtBQUEsS0FBQSxhQUFBLFdBQUEsZ0JBQUEsb0JBQUEsU0FBQSxPQUFBLEtBQUEsa0JBQUEsS0FBQSxNQUFBLElBQUEsS0FBQSxLQUFBLEtBQUEsS0FBQSxVQUFBLFlBQUEsYUFBQSxXQUFBLE9BQUEsZUFBQSxpQkFBQSxlQUFBLG1CQUFBLGlCQUFBLFFBQUEsYUFBQSxhQUFBLGVBQUEsZUFBQSxjQUFBLGNBQUEsbUJBQUEsWUFBQSxNQUFBLE9BQUEsUUFBQSxTQUFBLE9BQUEsTUFBQSxPQUFBLGFBQUEsU0FBQSxXQUFBLFVBQUEsUUFBQSxTQUFBLGNBQUEsU0FBQSxXQUFBLGNBQUEsT0FBQSxhQUFBLHNCQUFBLG1CQUFBLGVBQUEsU0FBQSxnQkFBQSxzQkFBQSxJQUFBLEtBQUEsS0FBQSxTQUFBLE9BQUEsT0FBQSxjQUFBLFlBQUEsVUFBQSxTQUFBLFNBQUEsUUFBQSxPQUFBLGtCQUFBLG1CQUFBLG1CQUFBLGVBQUEsZUFBQSxjQUFBLGFBQUEsZUFBQSxtQkFBQSxvQkFBQSxpQkFBQSxrQkFBQSxvQkFBQSxpQkFBQSxTQUFBLGVBQUEsUUFBQSxlQUFBLFdBQUEsVUFBQSxVQUFBLFlBQUEsY0FBQSxrQkFBQSxpQkFBQSxhQUFBLE9BQUEsS0FBQSxLQUFBLFVBQUEsU0FBQSxVQUFBLGFBQUEsYUFBQSxnQkFBQSxnQkFBQSxRQUFBLGVBQUEsT0FBQSxlQUFBLG1CQUFBLG1CQUFBLElBQUEsS0FBQSxLQUFBLFFBQUEsSUFBQSxLQUFBLEtBQUEsSUFBQSxlQUFBRyxHQUFBSCxFQUFBLENBQUEsU0FBQSxjQUFBLFFBQUEsV0FBQSxRQUFBLGVBQUEsY0FBQSxhQUFBLGFBQUEsUUFBQSxNQUFBLFVBQUEsZUFBQSxRQUFBLFFBQUEsU0FBQSxPQUFBLEtBQUEsVUFBQSxTQUFBLGdCQUFBLFNBQUEsU0FBQSxpQkFBQSxZQUFBLFdBQUEsY0FBQSxVQUFBLFVBQUEsZ0JBQUEsV0FBQSxXQUFBLE9BQUEsV0FBQSxXQUFBLGFBQUEsVUFBQSxTQUFBLFNBQUEsY0FBQSxnQkFBQSx1QkFBQSxZQUFBLFlBQUEsYUFBQSxXQUFBLGlCQUFBLGlCQUFBLFlB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Imdsb2JhbC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qZ2xvYmFsIHdpbmRvdyAqL1xuLyoqXG4gKiBAbGljZW5zZSBjb3VudGRvd24uanMgdjIuNi4wIGh0dHA6Ly9jb3VudGRvd25qcy5vcmdcbiAqIENvcHlyaWdodCAoYykyMDA2LTIwMTQgU3RlcGhlbiBNLiBNY0thbWV5LlxuICogTGljZW5zZWQgdW5kZXIgVGhlIE1JVCBMaWNlbnNlLlxuICovXG4vKmpzaGludCBiaXR3aXNlOmZhbHNlICovXG5cbi8qKlxuICogQHB1YmxpY1xuICogQHR5cGUge09iamVjdHxudWxsfVxuICovXG52YXIgbW9kdWxlO1xuXG4vKipcbiAqIEFQSSBlbnRyeVxuICogQHB1YmxpY1xuICogQHBhcmFtIHtmdW5jdGlvbihPYmplY3QpfERhdGV8bnVtYmVyfSBzdGFydCB0aGUgc3RhcnRpbmcgZGF0ZVxuICogQHBhcmFtIHtmdW5jdGlvbihPYmplY3QpfERhdGV8bnVtYmVyfSBlbmQgdGhlIGVuZGluZyBkYXRlXG4gKiBAcGFyYW0ge251bWJlcn0gdW5pdHMgdGhlIHVuaXRzIHRvIHBvcHVsYXRlXG4gKiBAcmV0dXJuIHtPYmplY3R8bnVtYmVyfVxuICovXG52YXIgY291bnRkb3duID0gKFxuXG4vKipcbiAqIEBwYXJhbSB7T2JqZWN0fSBtb2R1bGUgQ29tbW9uSlMgTW9kdWxlXG4gKi9cbmZ1bmN0aW9uKG1vZHVsZSkge1xuXHQvKmpzaGludCBzbWFydHRhYnM6dHJ1ZSAqL1xuXG5cdCd1c2Ugc3RyaWN0JztcblxuXHQvKipcblx0ICogQHByaXZhdGVcblx0ICogQGNvbnN0XG5cdCAqIEB0eXBlIHtudW1iZXJ9XG5cdCAqL1xuXHR2YXIgTUlMTElTRUNPTkRTXHQ9IDB4MDAxO1xuXG5cdC8qKlxuXHQgKiBAcHJpdmF0ZVxuXHQgKiBAY29uc3Rcblx0ICogQHR5cGUge251bWJlcn1cblx0ICovXG5cdHZhciBTRUNPTkRTXHRcdFx0PSAweDAwMjtcblxuXHQvKipcblx0ICogQHByaXZhdGVcblx0ICogQGNvbnN0XG5cdCAqIEB0eXBlIHtudW1iZXJ9XG5cdCAqL1xuXHR2YXIgTUlOVVRFU1x0XHRcdD0gMHgwMDQ7XG5cblx0LyoqXG5cdCAqIEBwcml2YXRlXG5cdCAqIEBjb25zdFxuXHQgKiBAdHlwZSB7bnVtYmVyfVxuXHQgKi9cblx0dmFyIEhPVVJTXHRcdFx0PSAweDAwODtcblxuXHQvKipcblx0ICogQHByaXZhdGVcblx0ICogQGNvbnN0XG5cdCAqIEB0eXBlIHtudW1iZXJ9XG5cdCAqL1xuXHR2YXIgREFZU1x0XHRcdD0gMHgwMTA7XG5cblx0LyoqXG5cdCAqIEBwcml2YXRlXG5cdCAqIEBjb25zdFxuXHQgKiBAdHlwZSB7bnVtYmVyfVxuXHQgKi9cblx0dmFyIFdFRUtTXHRcdFx0PSAweDAyMDtcblxuXHQvKipcblx0ICogQHByaXZhdGVcblx0ICogQGNvbnN0XG5cdCAqIEB0eXBlIHtudW1iZXJ9XG5cdCAqL1xuXHR2YXIgTU9OVEhTXHRcdFx0PSAweDA0MDtcblxuXHQvKipcblx0ICogQHByaXZhdGVcblx0ICogQGNvbnN0XG5cdCAqIEB0eXBlIHtudW1iZXJ9XG5cdCAqL1xuXHR2YXIgWUVBUlNcdFx0XHQ9IDB4MDgwO1xuXG5cdC8qKlxuXHQgKiBAcHJpdmF0ZVxuXHQgKiBAY29uc3Rcblx0ICogQHR5cGUge251bWJlcn1cblx0ICovXG5cdHZhciBERUNBREVTXHRcdFx0PSAweDEwMDtcblxuXHQvKipcblx0ICogQHByaXZhdGVcblx0ICogQGNvbnN0XG5cdCAqIEB0eXBlIHtudW1iZXJ9XG5cdCAqL1xuXHR2YXIgQ0VOVFVSSUVTXHRcdD0gMHgyMDA7XG5cblx0LyoqXG5cdCAqIEBwcml2YXRlXG5cdCAqIEBjb25zdFxuXHQgKiBAdHlwZSB7bnVtYmVyfVxuXHQgKi9cblx0dmFyIE1JTExFTk5JQVx0XHQ9IDB4NDAwO1xuXG5cdC8qKlxuXHQgKiBAcHJpdmF0ZVxuXHQgKiBAY29uc3Rcblx0ICogQHR5cGUge251bWJlcn1cblx0ICovXG5cdHZhciBERUZBVUxUU1x0XHQ9IFlFQVJTfE1PTlRIU3xEQVlTfEhPVVJTfE1JTlVURVN8U0VDT05EUztcblxuXHQvKipcblx0ICogQHByaXZhdGVcblx0ICogQGNvbnN0XG5cdCAqIEB0eXBlIHtudW1iZXJ9XG5cdCAqL1xuXHR2YXIgTUlMTElTRUNPTkRTX1BFUl9TRUNPTkQgPSAxMDAwO1xuXG5cdC8qKlxuXHQgKiBAcHJpdmF0ZVxuXHQgKiBAY29uc3Rcblx0ICogQHR5cGUge251bWJlcn1cblx0ICovXG5cdHZhciBTRUNPTkRTX1BFUl9NSU5VVEUgPSA2MDtcblxuXHQvKipcblx0ICogQHByaXZhdGVcblx0ICogQGNvbnN0XG5cdCAqIEB0eXBlIHtudW1iZXJ9XG5cdCAqL1xuXHR2YXIgTUlOVVRFU19QRVJfSE9VUiA9IDYwO1xuXG5cdC8qKlxuXHQgKiBAcHJpdmF0ZVxuXHQgKiBAY29uc3Rcblx0ICogQHR5cGUge251bWJlcn1cblx0ICovXG5cdHZhciBIT1VSU19QRVJfREFZID0gMjQ7XG5cblx0LyoqXG5cdCAqIEBwcml2YXRlXG5cdCAqIEBjb25zdFxuXHQgKiBAdHlwZSB7bnVtYmVyfVxuXHQgKi9cblx0dmFyIE1JTExJU0VDT05EU19QRVJfREFZID0gSE9VUlNfUEVSX0RBWSAqIE1JTlVURVNfUEVSX0hPVVIgKiBTRUNPTkRTX1BFUl9NSU5VVEUgKiBNSUxMSVNFQ09ORFNfUEVSX1NFQ09ORDtcblxuXHQvKipcblx0ICogQHByaXZhdGVcblx0ICogQGNvbnN0XG5cdCAqIEB0eXBlIHtudW1iZXJ9XG5cdCAqL1xuXHR2YXIgREFZU19QRVJfV0VFSyA9IDc7XG5cblx0LyoqXG5cdCAqIEBwcml2YXRlXG5cdCAqIEBjb25zdFxuXHQgKiBAdHlwZSB7bnVtYmVyfVxuXHQgKi9cblx0dmFyIE1PTlRIU19QRVJfWUVBUiA9IDEyO1xuXG5cdC8qKlxuXHQgKiBAcHJpdmF0ZVxuXHQgKiBAY29uc3Rcblx0ICogQHR5cGUge251bWJlcn1cblx0ICovXG5cdHZhciBZRUFSU19QRVJfREVDQURFID0gMTA7XG5cblx0LyoqXG5cdCAqIEBwcml2YXRlXG5cdCAqIEBjb25zdFxuXHQgKiBAdHlwZSB7bnVtYmVyfVxuXHQgKi9cblx0dmFyIERFQ0FERVNfUEVSX0NFTlRVUlkgPSAxMDtcblxuXHQvKipcblx0ICogQHByaXZhdGVcblx0ICogQGNvbnN0XG5cdCAqIEB0eXBlIHtudW1iZXJ9XG5cdCAqL1xuXHR2YXIgQ0VOVFVSSUVTX1BFUl9NSUxMRU5OSVVNID0gMTA7XG5cblx0LyoqXG5cdCAqIEBwcml2YXRlXG5cdCAqIEBwYXJhbSB7bnVtYmVyfSB4IG51bWJlclxuXHQgKiBAcmV0dXJuIHtudW1iZXJ9XG5cdCAqL1xuXHR2YXIgY2VpbCA9IE1hdGguY2VpbDtcblxuXHQvKipcblx0ICogQHByaXZhdGVcblx0ICogQHBhcmFtIHtudW1iZXJ9IHggbnVtYmVyXG5cdCAqIEByZXR1cm4ge251bWJlcn1cblx0ICovXG5cdHZhciBmbG9vciA9IE1hdGguZmxvb3I7XG5cblx0LyoqXG5cdCAqIEBwcml2YXRlXG5cdCAqIEBwYXJhbSB7RGF0ZX0gcmVmIHJlZmVyZW5jZSBkYXRlXG5cdCAqIEBwYXJhbSB7bnVtYmVyfSBzaGlmdCBudW1iZXIgb2YgbW9udGhzIHRvIHNoaWZ0XG5cdCAqIEByZXR1cm4ge251bWJlcn0gbnVtYmVyIG9mIGRheXMgc2hpZnRlZFxuXHQgKi9cblx0ZnVuY3Rpb24gYm9ycm93TW9udGhzKHJlZiwgc2hpZnQpIHtcblx0XHR2YXIgcHJldlRpbWUgPSByZWYuZ2V0VGltZSgpO1xuXG5cdFx0Ly8gaW5jcmVtZW50IG1vbnRoIGJ5IHNoaWZ0XG5cdFx0cmVmLnNldE1vbnRoKCByZWYuZ2V0TW9udGgoKSArIHNoaWZ0ICk7XG5cblx0XHQvLyB0aGlzIGlzIHRoZSB0cmlja2llc3Qgc2luY2UgbW9udGhzIHZhcnkgaW4gbGVuZ3RoXG5cdFx0cmV0dXJuIE1hdGgucm91bmQoIChyZWYuZ2V0VGltZSgpIC0gcHJldlRpbWUpIC8gTUlMTElTRUNPTkRTX1BFUl9EQVkgKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBAcHJpdmF0ZVxuXHQgKiBAcGFyYW0ge0RhdGV9IHJlZiByZWZlcmVuY2UgZGF0ZVxuXHQgKiBAcmV0dXJuIHtudW1iZXJ9IG51bWJlciBvZiBkYXlzXG5cdCAqL1xuXHRmdW5jdGlvbiBkYXlzUGVyTW9udGgocmVmKSB7XG5cdFx0dmFyIGEgPSByZWYuZ2V0VGltZSgpO1xuXG5cdFx0Ly8gaW5jcmVtZW50IG1vbnRoIGJ5IDFcblx0XHR2YXIgYiA9IG5ldyBEYXRlKGEpO1xuXHRcdGIuc2V0TW9udGgoIHJlZi5nZXRNb250aCgpICsgMSApO1xuXG5cdFx0Ly8gdGhpcyBpcyB0aGUgdHJpY2tpZXN0IHNpbmNlIG1vbnRocyB2YXJ5IGluIGxlbmd0aFxuXHRcdHJldHVybiBNYXRoLnJvdW5kKCAoYi5nZXRUaW1lKCkgLSBhKSAvIE1JTExJU0VDT05EU19QRVJfREFZICk7XG5cdH1cblxuXHQvKipcblx0ICogQHByaXZhdGVcblx0ICogQHBhcmFtIHtEYXRlfSByZWYgcmVmZXJlbmNlIGRhdGVcblx0ICogQHJldHVybiB7bnVtYmVyfSBudW1iZXIgb2YgZGF5c1xuXHQgKi9cblx0ZnVuY3Rpb24gZGF5c1BlclllYXIocmVmKSB7XG5cdFx0dmFyIGEgPSByZWYuZ2V0VGltZSgpO1xuXG5cdFx0Ly8gaW5jcmVtZW50IHllYXIgYnkgMVxuXHRcdHZhciBiID0gbmV3IERhdGUoYSk7XG5cdFx0Yi5zZXRGdWxsWWVhciggcmVmLmdldEZ1bGxZZWFyKCkgKyAxICk7XG5cblx0XHQvLyB0aGlzIGlzIHRoZSB0cmlja2llc3Qgc2luY2UgeWVhcnMgKHBlcmlvZGljYWxseSkgdmFyeSBpbiBsZW5ndGhcblx0XHRyZXR1cm4gTWF0aC5yb3VuZCggKGIuZ2V0VGltZSgpIC0gYSkgLyBNSUxMSVNFQ09ORFNfUEVSX0RBWSApO1xuXHR9XG5cblx0LyoqXG5cdCAqIEFwcGxpZXMgdGhlIFRpbWVzcGFuIHRvIHRoZSBnaXZlbiBkYXRlLlxuXHQgKiBcblx0ICogQHByaXZhdGVcblx0ICogQHBhcmFtIHtUaW1lc3Bhbn0gdHNcblx0ICogQHBhcmFtIHtEYXRlPX0gZGF0ZVxuXHQgKiBAcmV0dXJuIHtEYXRlfVxuXHQgKi9cblx0ZnVuY3Rpb24gYWRkVG9EYXRlKHRzLCBkYXRlKSB7XG5cdFx0ZGF0ZSA9IChkYXRlIGluc3RhbmNlb2YgRGF0ZSkgfHwgKChkYXRlICE9PSBudWxsKSAmJiBpc0Zpbml0ZShkYXRlKSkgPyBuZXcgRGF0ZSgrZGF0ZSkgOiBuZXcgRGF0ZSgpO1xuXHRcdGlmICghdHMpIHtcblx0XHRcdHJldHVybiBkYXRlO1xuXHRcdH1cblxuXHRcdC8vIGlmIHRoZXJlIGlzIGEgdmFsdWUgZmllbGQsIHVzZSBpdCBkaXJlY3RseVxuXHRcdHZhciB2YWx1ZSA9ICt0cy52YWx1ZSB8fCAwO1xuXHRcdGlmICh2YWx1ZSkge1xuXHRcdFx0ZGF0ZS5zZXRUaW1lKGRhdGUuZ2V0VGltZSgpICsgdmFsdWUpO1xuXHRcdFx0cmV0dXJuIGRhdGU7XG5cdFx0fVxuXG5cdFx0dmFsdWUgPSArdHMubWlsbGlzZWNvbmRzIHx8IDA7XG5cdFx0aWYgKHZhbHVlKSB7XG5cdFx0XHRkYXRlLnNldE1pbGxpc2Vjb25kcyhkYXRlLmdldE1pbGxpc2Vjb25kcygpICsgdmFsdWUpO1xuXHRcdH1cblxuXHRcdHZhbHVlID0gK3RzLnNlY29uZHMgfHwgMDtcblx0XHRpZiAodmFsdWUpIHtcblx0XHRcdGRhdGUuc2V0U2Vjb25kcyhkYXRlLmdldFNlY29uZHMoKSArIHZhbHVlKTtcblx0XHR9XG5cblx0XHR2YWx1ZSA9ICt0cy5taW51dGVzIHx8IDA7XG5cdFx0aWYgKHZhbHVlKSB7XG5cdFx0XHRkYXRlLnNldE1pbnV0ZXMoZGF0ZS5nZXRNaW51dGVzKCkgKyB2YWx1ZSk7XG5cdFx0fVxuXG5cdFx0dmFsdWUgPSArdHMuaG91cnMgfHwgMDtcblx0XHRpZiAodmFsdWUpIHtcblx0XHRcdGRhdGUuc2V0SG91cnMoZGF0ZS5nZXRIb3VycygpICsgdmFsdWUpO1xuXHRcdH1cblxuXHRcdHZhbHVlID0gK3RzLndlZWtzIHx8IDA7XG5cdFx0aWYgKHZhbHVlKSB7XG5cdFx0XHR2YWx1ZSAqPSBEQVlTX1BFUl9XRUVLO1xuXHRcdH1cblxuXHRcdHZhbHVlICs9ICt0cy5kYXlzIHx8IDA7XG5cdFx0aWYgKHZhbHVlKSB7XG5cdFx0XHRkYXRlLnNldERhdGUoZGF0ZS5nZXREYXRlKCkgKyB2YWx1ZSk7XG5cdFx0fVxuXG5cdFx0dmFsdWUgPSArdHMubW9udGhzIHx8IDA7XG5cdFx0aWYgKHZhbHVlKSB7XG5cdFx0XHRkYXRlLnNldE1vbnRoKGRhdGUuZ2V0TW9udGgoKSArIHZhbHVlKTtcblx0XHR9XG5cblx0XHR2YWx1ZSA9ICt0cy5taWxsZW5uaWEgfHwgMDtcblx0XHRpZiAodmFsdWUpIHtcblx0XHRcdHZhbHVlICo9IENFTlRVUklFU19QRVJfTUlMTEVOTklVTTtcblx0XHR9XG5cblx0XHR2YWx1ZSArPSArdHMuY2VudHVyaWVzIHx8IDA7XG5cdFx0aWYgKHZhbHVlKSB7XG5cdFx0XHR2YWx1ZSAqPSBERUNBREVTX1BFUl9DRU5UVVJZO1xuXHRcdH1cblxuXHRcdHZhbHVlICs9ICt0cy5kZWNhZGVzIHx8IDA7XG5cdFx0aWYgKHZhbHVlKSB7XG5cdFx0XHR2YWx1ZSAqPSBZRUFSU19QRVJfREVDQURFO1xuXHRcdH1cblxuXHRcdHZhbHVlICs9ICt0cy55ZWFycyB8fCAwO1xuXHRcdGlmICh2YWx1ZSkge1xuXHRcdFx0ZGF0ZS5zZXRGdWxsWWVhcihkYXRlLmdldEZ1bGxZZWFyKCkgKyB2YWx1ZSk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGRhdGU7XG5cdH1cblxuXHQvKipcblx0ICogQHByaXZhdGVcblx0ICogQGNvbnN0XG5cdCAqIEB0eXBlIHtudW1iZXJ9XG5cdCAqL1xuXHR2YXIgTEFCRUxfTUlMTElTRUNPTkRTXHQ9IDA7XG5cblx0LyoqXG5cdCAqIEBwcml2YXRlXG5cdCAqIEBjb25zdFxuXHQgKiBAdHlwZSB7bnVtYmVyfVxuXHQgKi9cblx0dmFyIExBQkVMX1NFQ09ORFNcdFx0PSAxO1xuXG5cdC8qKlxuXHQgKiBAcHJpdmF0ZVxuXHQgKiBAY29uc3Rcblx0ICogQHR5cGUge251bWJlcn1cblx0ICovXG5cdHZhciBMQUJFTF9NSU5VVEVTXHRcdD0gMjtcblxuXHQvKipcblx0ICogQHByaXZhdGVcblx0ICogQGNvbnN0XG5cdCAqIEB0eXBlIHtudW1iZXJ9XG5cdCAqL1xuXHR2YXIgTEFCRUxfSE9VUlNcdFx0XHQ9IDM7XG5cblx0LyoqXG5cdCAqIEBwcml2YXRlXG5cdCAqIEBjb25zdFxuXHQgKiBAdHlwZSB7bnVtYmVyfVxuXHQgKi9cblx0dmFyIExBQkVMX0RBWVNcdFx0XHQ9IDQ7XG5cblx0LyoqXG5cdCAqIEBwcml2YXRlXG5cdCAqIEBjb25zdFxuXHQgKiBAdHlwZSB7bnVtYmVyfVxuXHQgKi9cblx0dmFyIExBQkVMX1dFRUtTXHRcdFx0PSA1O1xuXG5cdC8qKlxuXHQgKiBAcHJpdmF0ZVxuXHQgKiBAY29uc3Rcblx0ICogQHR5cGUge251bWJlcn1cblx0ICovXG5cdHZhciBMQUJFTF9NT05USFNcdFx0PSA2O1xuXG5cdC8qKlxuXHQgKiBAcHJpdmF0ZVxuXHQgKiBAY29uc3Rcblx0ICogQHR5cGUge251bWJlcn1cblx0ICovXG5cdHZhciBMQUJFTF9ZRUFSU1x0XHRcdD0gNztcblxuXHQvKipcblx0ICogQHByaXZhdGVcblx0ICogQGNvbnN0XG5cdCAqIEB0eXBlIHtudW1iZXJ9XG5cdCAqL1xuXHR2YXIgTEFCRUxfREVDQURFU1x0XHQ9IDg7XG5cblx0LyoqXG5cdCAqIEBwcml2YXRlXG5cdCAqIEBjb25zdFxuXHQgKiBAdHlwZSB7bnVtYmVyfVxuXHQgKi9cblx0dmFyIExBQkVMX0NFTlRVUklFU1x0XHQ9IDk7XG5cblx0LyoqXG5cdCAqIEBwcml2YXRlXG5cdCAqIEBjb25zdFxuXHQgKiBAdHlwZSB7bnVtYmVyfVxuXHQgKi9cblx0dmFyIExBQkVMX01JTExFTk5JQVx0XHQ9IDEwO1xuXG5cdC8qKlxuXHQgKiBAcHJpdmF0ZVxuXHQgKiBAdHlwZSB7QXJyYXl9XG5cdCAqL1xuXHR2YXIgTEFCRUxTX1NJTkdMVUFSO1xuXG5cdC8qKlxuXHQgKiBAcHJpdmF0ZVxuXHQgKiBAdHlwZSB7QXJyYXl9XG5cdCAqL1xuXHR2YXIgTEFCRUxTX1BMVVJBTDtcblxuXHQvKipcblx0ICogQHByaXZhdGVcblx0ICogQHR5cGUge3N0cmluZ31cblx0ICovXG5cdHZhciBMQUJFTF9MQVNUO1xuXG5cdC8qKlxuXHQgKiBAcHJpdmF0ZVxuXHQgKiBAdHlwZSB7c3RyaW5nfVxuXHQgKi9cblx0dmFyIExBQkVMX0RFTElNO1xuXG5cdC8qKlxuXHQgKiBAcHJpdmF0ZVxuXHQgKiBAdHlwZSB7c3RyaW5nfVxuXHQgKi9cblx0dmFyIExBQkVMX05PVztcblxuXHQvKipcblx0ICogRm9ybWF0cyBhIG51bWJlciAmIHVuaXQgYXMgYSBzdHJpbmdcblx0ICogXG5cdCAqIEBwYXJhbSB7bnVtYmVyfSB2YWx1ZVxuXHQgKiBAcGFyYW0ge251bWJlcn0gdW5pdFxuXHQgKiBAcmV0dXJuIHtzdHJpbmd9XG5cdCAqL1xuXHR2YXIgZm9ybWF0dGVyO1xuXG5cdC8qKlxuXHQgKiBGb3JtYXRzIGEgbnVtYmVyIGFzIGEgc3RyaW5nXG5cdCAqIFxuXHQgKiBAcHJpdmF0ZVxuXHQgKiBAcGFyYW0ge251bWJlcn0gdmFsdWVcblx0ICogQHJldHVybiB7c3RyaW5nfVxuXHQgKi9cblx0dmFyIGZvcm1hdE51bWJlcjtcblxuXHQvKipcblx0ICogQHByaXZhdGVcblx0ICogQHBhcmFtIHtudW1iZXJ9IHZhbHVlXG5cdCAqIEBwYXJhbSB7bnVtYmVyfSB1bml0IHVuaXQgaW5kZXggaW50byBsYWJlbCBsaXN0XG5cdCAqIEByZXR1cm4ge3N0cmluZ31cblx0ICovXG5cdGZ1bmN0aW9uIHBsdXJhbGl0eSh2YWx1ZSwgdW5pdCkge1xuXHRcdHJldHVybiBmb3JtYXROdW1iZXIodmFsdWUpKygodmFsdWUgPT09IDEpID8gTEFCRUxTX1NJTkdMVUFSW3VuaXRdIDogTEFCRUxTX1BMVVJBTFt1bml0XSk7XG5cdH1cblxuXHQvKipcblx0ICogRm9ybWF0cyB0aGUgZW50cmllcyB3aXRoIHNpbmd1bGFyIG9yIHBsdXJhbCBsYWJlbHNcblx0ICogXG5cdCAqIEBwcml2YXRlXG5cdCAqIEBwYXJhbSB7VGltZXNwYW59IHRzXG5cdCAqIEByZXR1cm4ge0FycmF5fVxuXHQgKi9cblx0dmFyIGZvcm1hdExpc3Q7XG5cblx0LyoqXG5cdCAqIFRpbWVzcGFuIHJlcHJlc2VudGF0aW9uIG9mIGEgZHVyYXRpb24gb2YgdGltZVxuXHQgKiBcblx0ICogQHByaXZhdGVcblx0ICogQHRoaXMge1RpbWVzcGFufVxuXHQgKiBAY29uc3RydWN0b3Jcblx0ICovXG5cdGZ1bmN0aW9uIFRpbWVzcGFuKCkge31cblxuXHQvKipcblx0ICogRm9ybWF0cyB0aGUgVGltZXNwYW4gYXMgYSBzZW50ZW5jZVxuXHQgKiBcblx0ICogQHBhcmFtIHtzdHJpbmc9fSBlbXB0eUxhYmVsIHRoZSBzdHJpbmcgdG8gdXNlIHdoZW4gbm8gdmFsdWVzIHJldHVybmVkXG5cdCAqIEByZXR1cm4ge3N0cmluZ31cblx0ICovXG5cdFRpbWVzcGFuLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKGVtcHR5TGFiZWwpIHtcblx0XHR2YXIgbGFiZWwgPSBmb3JtYXRMaXN0KHRoaXMpO1xuXG5cdFx0dmFyIGNvdW50ID0gbGFiZWwubGVuZ3RoO1xuXHRcdGlmICghY291bnQpIHtcblx0XHRcdHJldHVybiBlbXB0eUxhYmVsID8gJycrZW1wdHlMYWJlbCA6IExBQkVMX05PVztcblx0XHR9XG5cdFx0aWYgKGNvdW50ID09PSAxKSB7XG5cdFx0XHRyZXR1cm4gbGFiZWxbMF07XG5cdFx0fVxuXG5cdFx0dmFyIGxhc3QgPSBMQUJFTF9MQVNUK2xhYmVsLnBvcCgpO1xuXHRcdHJldHVybiBsYWJlbC5qb2luKExBQkVMX0RFTElNKStsYXN0O1xuXHR9O1xuXG5cdC8qKlxuXHQgKiBGb3JtYXRzIHRoZSBUaW1lc3BhbiBhcyBhIHNlbnRlbmNlIGluIEhUTUxcblx0ICogXG5cdCAqIEBwYXJhbSB7c3RyaW5nPX0gdGFnIEhUTUwgdGFnIG5hbWUgdG8gd3JhcCBlYWNoIHZhbHVlXG5cdCAqIEBwYXJhbSB7c3RyaW5nPX0gZW1wdHlMYWJlbCB0aGUgc3RyaW5nIHRvIHVzZSB3aGVuIG5vIHZhbHVlcyByZXR1cm5lZFxuXHQgKiBAcmV0dXJuIHtzdHJpbmd9XG5cdCAqL1xuXHRUaW1lc3Bhbi5wcm90b3R5cGUudG9IVE1MID0gZnVuY3Rpb24odGFnLCBlbXB0eUxhYmVsKSB7XG5cdFx0dGFnID0gdGFnIHx8ICdzcGFuJztcblx0XHR2YXIgbGFiZWwgPSBmb3JtYXRMaXN0KHRoaXMpO1xuXG5cdFx0dmFyIGNvdW50ID0gbGFiZWwubGVuZ3RoO1xuXHRcdGlmICghY291bnQpIHtcblx0XHRcdGVtcHR5TGFiZWwgPSBlbXB0eUxhYmVsIHx8IExBQkVMX05PVztcblx0XHRcdHJldHVybiBlbXB0eUxhYmVsID8gJzwnK3RhZysnPicrZW1wdHlMYWJlbCsnPC8nK3RhZysnPicgOiBlbXB0eUxhYmVsO1xuXHRcdH1cblx0XHRmb3IgKHZhciBpPTA7IGk8Y291bnQ7IGkrKykge1xuXHRcdFx0Ly8gd3JhcCBlYWNoIHVuaXQgaW4gdGFnXG5cdFx0XHRsYWJlbFtpXSA9ICc8Jyt0YWcrJz4nK2xhYmVsW2ldKyc8LycrdGFnKyc+Jztcblx0XHR9XG5cdFx0aWYgKGNvdW50ID09PSAxKSB7XG5cdFx0XHRyZXR1cm4gbGFiZWxbMF07XG5cdFx0fVxuXG5cdFx0dmFyIGxhc3QgPSBMQUJFTF9MQVNUK2xhYmVsLnBvcCgpO1xuXHRcdHJldHVybiBsYWJlbC5qb2luKExBQkVMX0RFTElNKStsYXN0O1xuXHR9O1xuXG5cdC8qKlxuXHQgKiBBcHBsaWVzIHRoZSBUaW1lc3BhbiB0byB0aGUgZ2l2ZW4gZGF0ZVxuXHQgKiBcblx0ICogQHBhcmFtIHtEYXRlPX0gZGF0ZSB0aGUgZGF0ZSB0byB3aGljaCB0aGUgdGltZXNwYW4gaXMgYWRkZWQuXG5cdCAqIEByZXR1cm4ge0RhdGV9XG5cdCAqL1xuXHRUaW1lc3Bhbi5wcm90b3R5cGUuYWRkVG8gPSBmdW5jdGlvbihkYXRlKSB7XG5cdFx0cmV0dXJuIGFkZFRvRGF0ZSh0aGlzLCBkYXRlKTtcblx0fTtcblxuXHQvKipcblx0ICogRm9ybWF0cyB0aGUgZW50cmllcyBhcyBFbmdsaXNoIGxhYmVsc1xuXHQgKiBcblx0ICogQHByaXZhdGVcblx0ICogQHBhcmFtIHtUaW1lc3Bhbn0gdHNcblx0ICogQHJldHVybiB7QXJyYXl9XG5cdCAqL1xuXHRmb3JtYXRMaXN0ID0gZnVuY3Rpb24odHMpIHtcblx0XHR2YXIgbGlzdCA9IFtdO1xuXG5cdFx0dmFyIHZhbHVlID0gdHMubWlsbGVubmlhO1xuXHRcdGlmICh2YWx1ZSkge1xuXHRcdFx0bGlzdC5wdXNoKGZvcm1hdHRlcih2YWx1ZSwgTEFCRUxfTUlMTEVOTklBKSk7XG5cdFx0fVxuXG5cdFx0dmFsdWUgPSB0cy5jZW50dXJpZXM7XG5cdFx0aWYgKHZhbHVlKSB7XG5cdFx0XHRsaXN0LnB1c2goZm9ybWF0dGVyKHZhbHVlLCBMQUJFTF9DRU5UVVJJRVMpKTtcblx0XHR9XG5cblx0XHR2YWx1ZSA9IHRzLmRlY2FkZXM7XG5cdFx0aWYgKHZhbHVlKSB7XG5cdFx0XHRsaXN0LnB1c2goZm9ybWF0dGVyKHZhbHVlLCBMQUJFTF9ERUNBREVTKSk7XG5cdFx0fVxuXG5cdFx0dmFsdWUgPSB0cy55ZWFycztcblx0XHRpZiAodmFsdWUpIHtcblx0XHRcdGxpc3QucHVzaChmb3JtYXR0ZXIodmFsdWUsIExBQkVMX1lFQVJTKSk7XG5cdFx0fVxuXG5cdFx0dmFsdWUgPSB0cy5tb250aHM7XG5cdFx0aWYgKHZhbHVlKSB7XG5cdFx0XHRsaXN0LnB1c2goZm9ybWF0dGVyKHZhbHVlLCBMQUJFTF9NT05USFMpKTtcblx0XHR9XG5cblx0XHR2YWx1ZSA9IHRzLndlZWtzO1xuXHRcdGlmICh2YWx1ZSkge1xuXHRcdFx0bGlzdC5wdXNoKGZvcm1hdHRlcih2YWx1ZSwgTEFCRUxfV0VFS1MpKTtcblx0XHR9XG5cblx0XHR2YWx1ZSA9IHRzLmRheXM7XG5cdFx0aWYgKHZhbHVlKSB7XG5cdFx0XHRsaXN0LnB1c2goZm9ybWF0dGVyKHZhbHVlLCBMQUJFTF9EQVlTKSk7XG5cdFx0fVxuXG5cdFx0dmFsdWUgPSB0cy5ob3Vycztcblx0XHRpZiAodmFsdWUpIHtcblx0XHRcdGxpc3QucHVzaChmb3JtYXR0ZXIodmFsdWUsIExBQkVMX0hPVVJTKSk7XG5cdFx0fVxuXG5cdFx0dmFsdWUgPSB0cy5taW51dGVzO1xuXHRcdGlmICh2YWx1ZSkge1xuXHRcdFx0bGlzdC5wdXNoKGZvcm1hdHRlcih2YWx1ZSwgTEFCRUxfTUlOVVRFUykpO1xuXHRcdH1cblxuXHRcdHZhbHVlID0gdHMuc2Vjb25kcztcblx0XHRpZiAodmFsdWUpIHtcblx0XHRcdGxpc3QucHVzaChmb3JtYXR0ZXIodmFsdWUsIExBQkVMX1NFQ09ORFMpKTtcblx0XHR9XG5cblx0XHR2YWx1ZSA9IHRzLm1pbGxpc2Vjb25kcztcblx0XHRpZiAodmFsdWUpIHtcblx0XHRcdGxpc3QucHVzaChmb3JtYXR0ZXIodmFsdWUsIExBQkVMX01JTExJU0VDT05EUykpO1xuXHRcdH1cblxuXHRcdHJldHVybiBsaXN0O1xuXHR9O1xuXG5cdC8qKlxuXHQgKiBCb3Jyb3cgYW55IHVuZGVyZmxvdyB1bml0cywgY2FycnkgYW55IG92ZXJmbG93IHVuaXRzXG5cdCAqIFxuXHQgKiBAcHJpdmF0ZVxuXHQgKiBAcGFyYW0ge1RpbWVzcGFufSB0c1xuXHQgKiBAcGFyYW0ge3N0cmluZ30gdG9Vbml0XG5cdCAqL1xuXHRmdW5jdGlvbiByaXBwbGVSb3VuZGVkKHRzLCB0b1VuaXQpIHtcblx0XHRzd2l0Y2ggKHRvVW5pdCkge1xuXHRcdFx0Y2FzZSAnc2Vjb25kcyc6XG5cdFx0XHRcdGlmICh0cy5zZWNvbmRzICE9PSBTRUNPTkRTX1BFUl9NSU5VVEUgfHwgaXNOYU4odHMubWludXRlcykpIHtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblx0XHRcdFx0Ly8gcmlwcGxlIHNlY29uZHMgdXAgdG8gbWludXRlc1xuXHRcdFx0XHR0cy5taW51dGVzKys7XG5cdFx0XHRcdHRzLnNlY29uZHMgPSAwO1xuXG5cdFx0XHRcdC8qIGZhbGxzIHRocm91Z2ggKi9cblx0XHRcdGNhc2UgJ21pbnV0ZXMnOlxuXHRcdFx0XHRpZiAodHMubWludXRlcyAhPT0gTUlOVVRFU19QRVJfSE9VUiB8fCBpc05hTih0cy5ob3VycykpIHtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblx0XHRcdFx0Ly8gcmlwcGxlIG1pbnV0ZXMgdXAgdG8gaG91cnNcblx0XHRcdFx0dHMuaG91cnMrKztcblx0XHRcdFx0dHMubWludXRlcyA9IDA7XG5cblx0XHRcdFx0LyogZmFsbHMgdGhyb3VnaCAqL1xuXHRcdFx0Y2FzZSAnaG91cnMnOlxuXHRcdFx0XHRpZiAodHMuaG91cnMgIT09IEhPVVJTX1BFUl9EQVkgfHwgaXNOYU4odHMuZGF5cykpIHtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblx0XHRcdFx0Ly8gcmlwcGxlIGhvdXJzIHVwIHRvIGRheXNcblx0XHRcdFx0dHMuZGF5cysrO1xuXHRcdFx0XHR0cy5ob3VycyA9IDA7XG5cblx0XHRcdFx0LyogZmFsbHMgdGhyb3VnaCAqL1xuXHRcdFx0Y2FzZSAnZGF5cyc6XG5cdFx0XHRcdGlmICh0cy5kYXlzICE9PSBEQVlTX1BFUl9XRUVLIHx8IGlzTmFOKHRzLndlZWtzKSkge1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXHRcdFx0XHQvLyByaXBwbGUgZGF5cyB1cCB0byB3ZWVrc1xuXHRcdFx0XHR0cy53ZWVrcysrO1xuXHRcdFx0XHR0cy5kYXlzID0gMDtcblxuXHRcdFx0XHQvKiBmYWxscyB0aHJvdWdoICovXG5cdFx0XHRjYXNlICd3ZWVrcyc6XG5cdFx0XHRcdGlmICh0cy53ZWVrcyAhPT0gZGF5c1Blck1vbnRoKHRzLnJlZk1vbnRoKS9EQVlTX1BFUl9XRUVLIHx8IGlzTmFOKHRzLm1vbnRocykpIHtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblx0XHRcdFx0Ly8gcmlwcGxlIHdlZWtzIHVwIHRvIG1vbnRoc1xuXHRcdFx0XHR0cy5tb250aHMrKztcblx0XHRcdFx0dHMud2Vla3MgPSAwO1xuXG5cdFx0XHRcdC8qIGZhbGxzIHRocm91Z2ggKi9cblx0XHRcdGNhc2UgJ21vbnRocyc6XG5cdFx0XHRcdGlmICh0cy5tb250aHMgIT09IE1PTlRIU19QRVJfWUVBUiB8fCBpc05hTih0cy55ZWFycykpIHtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblx0XHRcdFx0Ly8gcmlwcGxlIG1vbnRocyB1cCB0byB5ZWFyc1xuXHRcdFx0XHR0cy55ZWFycysrO1xuXHRcdFx0XHR0cy5tb250aHMgPSAwO1xuXG5cdFx0XHRcdC8qIGZhbGxzIHRocm91Z2ggKi9cblx0XHRcdGNhc2UgJ3llYXJzJzpcblx0XHRcdFx0aWYgKHRzLnllYXJzICE9PSBZRUFSU19QRVJfREVDQURFIHx8IGlzTmFOKHRzLmRlY2FkZXMpKSB7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cdFx0XHRcdC8vIHJpcHBsZSB5ZWFycyB1cCB0byBkZWNhZGVzXG5cdFx0XHRcdHRzLmRlY2FkZXMrKztcblx0XHRcdFx0dHMueWVhcnMgPSAwO1xuXG5cdFx0XHRcdC8qIGZhbGxzIHRocm91Z2ggKi9cblx0XHRcdGNhc2UgJ2RlY2FkZXMnOlxuXHRcdFx0XHRpZiAodHMuZGVjYWRlcyAhPT0gREVDQURFU19QRVJfQ0VOVFVSWSB8fCBpc05hTih0cy5jZW50dXJpZXMpKSB7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cdFx0XHRcdC8vIHJpcHBsZSBkZWNhZGVzIHVwIHRvIGNlbnR1cmllc1xuXHRcdFx0XHR0cy5jZW50dXJpZXMrKztcblx0XHRcdFx0dHMuZGVjYWRlcyA9IDA7XG5cblx0XHRcdFx0LyogZmFsbHMgdGhyb3VnaCAqL1xuXHRcdFx0Y2FzZSAnY2VudHVyaWVzJzpcblx0XHRcdFx0aWYgKHRzLmNlbnR1cmllcyAhPT0gQ0VOVFVSSUVTX1BFUl9NSUxMRU5OSVVNIHx8IGlzTmFOKHRzLm1pbGxlbm5pYSkpIHtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblx0XHRcdFx0Ly8gcmlwcGxlIGNlbnR1cmllcyB1cCB0byBtaWxsZW5uaWFcblx0XHRcdFx0dHMubWlsbGVubmlhKys7XG5cdFx0XHRcdHRzLmNlbnR1cmllcyA9IDA7XG5cdFx0XHRcdC8qIGZhbGxzIHRocm91Z2ggKi9cblx0XHRcdH1cblx0fVxuXG5cdC8qKlxuXHQgKiBSaXBwbGUgdXAgcGFydGlhbCB1bml0cyBvbmUgcGxhY2Vcblx0ICogXG5cdCAqIEBwcml2YXRlXG5cdCAqIEBwYXJhbSB7VGltZXNwYW59IHRzIHRpbWVzcGFuXG5cdCAqIEBwYXJhbSB7bnVtYmVyfSBmcmFjIGFjY3VtdWxhdGVkIGZyYWN0aW9uYWwgdmFsdWVcblx0ICogQHBhcmFtIHtzdHJpbmd9IGZyb21Vbml0IHNvdXJjZSB1bml0IG5hbWVcblx0ICogQHBhcmFtIHtzdHJpbmd9IHRvVW5pdCB0YXJnZXQgdW5pdCBuYW1lXG5cdCAqIEBwYXJhbSB7bnVtYmVyfSBjb252ZXJzaW9uIG11bHRpcGxpZXIgYmV0d2VlbiB1bml0c1xuXHQgKiBAcGFyYW0ge251bWJlcn0gZGlnaXRzIG1heCBudW1iZXIgb2YgZGVjaW1hbCBkaWdpdHMgdG8gb3V0cHV0XG5cdCAqIEByZXR1cm4ge251bWJlcn0gbmV3IGZyYWN0aW9uYWwgdmFsdWVcblx0ICovXG5cdGZ1bmN0aW9uIGZyYWN0aW9uKHRzLCBmcmFjLCBmcm9tVW5pdCwgdG9Vbml0LCBjb252ZXJzaW9uLCBkaWdpdHMpIHtcblx0XHRpZiAodHNbZnJvbVVuaXRdID49IDApIHtcblx0XHRcdGZyYWMgKz0gdHNbZnJvbVVuaXRdO1xuXHRcdFx0ZGVsZXRlIHRzW2Zyb21Vbml0XTtcblx0XHR9XG5cblx0XHRmcmFjIC89IGNvbnZlcnNpb247XG5cdFx0aWYgKGZyYWMgKyAxIDw9IDEpIHtcblx0XHRcdC8vIGRyb3AgaWYgYmVsb3cgbWFjaGluZSBlcHNpbG9uXG5cdFx0XHRyZXR1cm4gMDtcblx0XHR9XG5cblx0XHRpZiAodHNbdG9Vbml0XSA+PSAwKSB7XG5cdFx0XHQvLyBlbnN1cmUgZG9lcyBub3QgaGF2ZSBtb3JlIHRoYW4gc3BlY2lmaWVkIG51bWJlciBvZiBkaWdpdHNcblx0XHRcdHRzW3RvVW5pdF0gPSArKHRzW3RvVW5pdF0gKyBmcmFjKS50b0ZpeGVkKGRpZ2l0cyk7XG5cdFx0XHRyaXBwbGVSb3VuZGVkKHRzLCB0b1VuaXQpO1xuXHRcdFx0cmV0dXJuIDA7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGZyYWM7XG5cdH1cblxuXHQvKipcblx0ICogUmlwcGxlIHVwIHBhcnRpYWwgdW5pdHMgdG8gbmV4dCBleGlzdGluZ1xuXHQgKiBcblx0ICogQHByaXZhdGVcblx0ICogQHBhcmFtIHtUaW1lc3Bhbn0gdHNcblx0ICogQHBhcmFtIHtudW1iZXJ9IGRpZ2l0cyBtYXggbnVtYmVyIG9mIGRlY2ltYWwgZGlnaXRzIHRvIG91dHB1dFxuXHQgKi9cblx0ZnVuY3Rpb24gZnJhY3Rpb25hbCh0cywgZGlnaXRzKSB7XG5cdFx0dmFyIGZyYWMgPSBmcmFjdGlvbih0cywgMCwgJ21pbGxpc2Vjb25kcycsICdzZWNvbmRzJywgTUlMTElTRUNPTkRTX1BFUl9TRUNPTkQsIGRpZ2l0cyk7XG5cdFx0aWYgKCFmcmFjKSB7IHJldHVybjsgfVxuXG5cdFx0ZnJhYyA9IGZyYWN0aW9uKHRzLCBmcmFjLCAnc2Vjb25kcycsICdtaW51dGVzJywgU0VDT05EU19QRVJfTUlOVVRFLCBkaWdpdHMpO1xuXHRcdGlmICghZnJhYykgeyByZXR1cm47IH1cblxuXHRcdGZyYWMgPSBmcmFjdGlvbih0cywgZnJhYywgJ21pbnV0ZXMnLCAnaG91cnMnLCBNSU5VVEVTX1BFUl9IT1VSLCBkaWdpdHMpO1xuXHRcdGlmICghZnJhYykgeyByZXR1cm47IH1cblxuXHRcdGZyYWMgPSBmcmFjdGlvbih0cywgZnJhYywgJ2hvdXJzJywgJ2RheXMnLCBIT1VSU19QRVJfREFZLCBkaWdpdHMpO1xuXHRcdGlmICghZnJhYykgeyByZXR1cm47IH1cblxuXHRcdGZyYWMgPSBmcmFjdGlvbih0cywgZnJhYywgJ2RheXMnLCAnd2Vla3MnLCBEQVlTX1BFUl9XRUVLLCBkaWdpdHMpO1xuXHRcdGlmICghZnJhYykgeyByZXR1cm47IH1cblxuXHRcdGZyYWMgPSBmcmFjdGlvbih0cywgZnJhYywgJ3dlZWtzJywgJ21vbnRocycsIGRheXNQZXJNb250aCh0cy5yZWZNb250aCkvREFZU19QRVJfV0VFSywgZGlnaXRzKTtcblx0XHRpZiAoIWZyYWMpIHsgcmV0dXJuOyB9XG5cblx0XHRmcmFjID0gZnJhY3Rpb24odHMsIGZyYWMsICdtb250aHMnLCAneWVhcnMnLCBkYXlzUGVyWWVhcih0cy5yZWZNb250aCkvZGF5c1Blck1vbnRoKHRzLnJlZk1vbnRoKSwgZGlnaXRzKTtcblx0XHRpZiAoIWZyYWMpIHsgcmV0dXJuOyB9XG5cblx0XHRmcmFjID0gZnJhY3Rpb24odHMsIGZyYWMsICd5ZWFycycsICdkZWNhZGVzJywgWUVBUlNfUEVSX0RFQ0FERSwgZGlnaXRzKTtcblx0XHRpZiAoIWZyYWMpIHsgcmV0dXJuOyB9XG5cblx0XHRmcmFjID0gZnJhY3Rpb24odHMsIGZyYWMsICdkZWNhZGVzJywgJ2NlbnR1cmllcycsIERFQ0FERVNfUEVSX0NFTlRVUlksIGRpZ2l0cyk7XG5cdFx0aWYgKCFmcmFjKSB7IHJldHVybjsgfVxuXG5cdFx0ZnJhYyA9IGZyYWN0aW9uKHRzLCBmcmFjLCAnY2VudHVyaWVzJywgJ21pbGxlbm5pYScsIENFTlRVUklFU19QRVJfTUlMTEVOTklVTSwgZGlnaXRzKTtcblxuXHRcdC8vIHNob3VsZCBuZXZlciByZWFjaCB0aGlzIHdpdGggcmVtYWluaW5nIGZyYWN0aW9uYWwgdmFsdWVcblx0XHRpZiAoZnJhYykgeyB0aHJvdyBuZXcgRXJyb3IoJ0ZyYWN0aW9uYWwgdW5pdCBvdmVyZmxvdycpOyB9XG5cdH1cblxuXHQvKipcblx0ICogQm9ycm93IGFueSB1bmRlcmZsb3cgdW5pdHMsIGNhcnJ5IGFueSBvdmVyZmxvdyB1bml0c1xuXHQgKiBcblx0ICogQHByaXZhdGVcblx0ICogQHBhcmFtIHtUaW1lc3Bhbn0gdHNcblx0ICovXG5cdGZ1bmN0aW9uIHJpcHBsZSh0cykge1xuXHRcdHZhciB4O1xuXG5cdFx0aWYgKHRzLm1pbGxpc2Vjb25kcyA8IDApIHtcblx0XHRcdC8vIHJpcHBsZSBzZWNvbmRzIGRvd24gdG8gbWlsbGlzZWNvbmRzXG5cdFx0XHR4ID0gY2VpbCgtdHMubWlsbGlzZWNvbmRzIC8gTUlMTElTRUNPTkRTX1BFUl9TRUNPTkQpO1xuXHRcdFx0dHMuc2Vjb25kcyAtPSB4O1xuXHRcdFx0dHMubWlsbGlzZWNvbmRzICs9IHggKiBNSUxMSVNFQ09ORFNfUEVSX1NFQ09ORDtcblxuXHRcdH0gZWxzZSBpZiAodHMubWlsbGlzZWNvbmRzID49IE1JTExJU0VDT05EU19QRVJfU0VDT05EKSB7XG5cdFx0XHQvLyByaXBwbGUgbWlsbGlzZWNvbmRzIHVwIHRvIHNlY29uZHNcblx0XHRcdHRzLnNlY29uZHMgKz0gZmxvb3IodHMubWlsbGlzZWNvbmRzIC8gTUlMTElTRUNPTkRTX1BFUl9TRUNPTkQpO1xuXHRcdFx0dHMubWlsbGlzZWNvbmRzICU9IE1JTExJU0VDT05EU19QRVJfU0VDT05EO1xuXHRcdH1cblxuXHRcdGlmICh0cy5zZWNvbmRzIDwgMCkge1xuXHRcdFx0Ly8gcmlwcGxlIG1pbnV0ZXMgZG93biB0byBzZWNvbmRzXG5cdFx0XHR4ID0gY2VpbCgtdHMuc2Vjb25kcyAvIFNFQ09ORFNfUEVSX01JTlVURSk7XG5cdFx0XHR0cy5taW51dGVzIC09IHg7XG5cdFx0XHR0cy5zZWNvbmRzICs9IHggKiBTRUNPTkRTX1BFUl9NSU5VVEU7XG5cblx0XHR9IGVsc2UgaWYgKHRzLnNlY29uZHMgPj0gU0VDT05EU19QRVJfTUlOVVRFKSB7XG5cdFx0XHQvLyByaXBwbGUgc2Vjb25kcyB1cCB0byBtaW51dGVzXG5cdFx0XHR0cy5taW51dGVzICs9IGZsb29yKHRzLnNlY29uZHMgLyBTRUNPTkRTX1BFUl9NSU5VVEUpO1xuXHRcdFx0dHMuc2Vjb25kcyAlPSBTRUNPTkRTX1BFUl9NSU5VVEU7XG5cdFx0fVxuXG5cdFx0aWYgKHRzLm1pbnV0ZXMgPCAwKSB7XG5cdFx0XHQvLyByaXBwbGUgaG91cnMgZG93biB0byBtaW51dGVzXG5cdFx0XHR4ID0gY2VpbCgtdHMubWludXRlcyAvIE1JTlVURVNfUEVSX0hPVVIpO1xuXHRcdFx0dHMuaG91cnMgLT0geDtcblx0XHRcdHRzLm1pbnV0ZXMgKz0geCAqIE1JTlVURVNfUEVSX0hPVVI7XG5cblx0XHR9IGVsc2UgaWYgKHRzLm1pbnV0ZXMgPj0gTUlOVVRFU19QRVJfSE9VUikge1xuXHRcdFx0Ly8gcmlwcGxlIG1pbnV0ZXMgdXAgdG8gaG91cnNcblx0XHRcdHRzLmhvdXJzICs9IGZsb29yKHRzLm1pbnV0ZXMgLyBNSU5VVEVTX1BFUl9IT1VSKTtcblx0XHRcdHRzLm1pbnV0ZXMgJT0gTUlOVVRFU19QRVJfSE9VUjtcblx0XHR9XG5cblx0XHRpZiAodHMuaG91cnMgPCAwKSB7XG5cdFx0XHQvLyByaXBwbGUgZGF5cyBkb3duIHRvIGhvdXJzXG5cdFx0XHR4ID0gY2VpbCgtdHMuaG91cnMgLyBIT1VSU19QRVJfREFZKTtcblx0XHRcdHRzLmRheXMgLT0geDtcblx0XHRcdHRzLmhvdXJzICs9IHggKiBIT1VSU19QRVJfREFZO1xuXG5cdFx0fSBlbHNlIGlmICh0cy5ob3VycyA+PSBIT1VSU19QRVJfREFZKSB7XG5cdFx0XHQvLyByaXBwbGUgaG91cnMgdXAgdG8gZGF5c1xuXHRcdFx0dHMuZGF5cyArPSBmbG9vcih0cy5ob3VycyAvIEhPVVJTX1BFUl9EQVkpO1xuXHRcdFx0dHMuaG91cnMgJT0gSE9VUlNfUEVSX0RBWTtcblx0XHR9XG5cblx0XHR3aGlsZSAodHMuZGF5cyA8IDApIHtcblx0XHRcdC8vIE5PVEU6IG5ldmVyIGFjdHVhbGx5IHNlZW4gdGhpcyBsb29wIG1vcmUgdGhhbiBvbmNlXG5cblx0XHRcdC8vIHJpcHBsZSBtb250aHMgZG93biB0byBkYXlzXG5cdFx0XHR0cy5tb250aHMtLTtcblx0XHRcdHRzLmRheXMgKz0gYm9ycm93TW9udGhzKHRzLnJlZk1vbnRoLCAxKTtcblx0XHR9XG5cblx0XHQvLyB3ZWVrcyBpcyBhbHdheXMgemVybyBoZXJlXG5cblx0XHRpZiAodHMuZGF5cyA+PSBEQVlTX1BFUl9XRUVLKSB7XG5cdFx0XHQvLyByaXBwbGUgZGF5cyB1cCB0byB3ZWVrc1xuXHRcdFx0dHMud2Vla3MgKz0gZmxvb3IodHMuZGF5cyAvIERBWVNfUEVSX1dFRUspO1xuXHRcdFx0dHMuZGF5cyAlPSBEQVlTX1BFUl9XRUVLO1xuXHRcdH1cblxuXHRcdGlmICh0cy5tb250aHMgPCAwKSB7XG5cdFx0XHQvLyByaXBwbGUgeWVhcnMgZG93biB0byBtb250aHNcblx0XHRcdHggPSBjZWlsKC10cy5tb250aHMgLyBNT05USFNfUEVSX1lFQVIpO1xuXHRcdFx0dHMueWVhcnMgLT0geDtcblx0XHRcdHRzLm1vbnRocyArPSB4ICogTU9OVEhTX1BFUl9ZRUFSO1xuXG5cdFx0fSBlbHNlIGlmICh0cy5tb250aHMgPj0gTU9OVEhTX1BFUl9ZRUFSKSB7XG5cdFx0XHQvLyByaXBwbGUgbW9udGhzIHVwIHRvIHllYXJzXG5cdFx0XHR0cy55ZWFycyArPSBmbG9vcih0cy5tb250aHMgLyBNT05USFNfUEVSX1lFQVIpO1xuXHRcdFx0dHMubW9udGhzICU9IE1PTlRIU19QRVJfWUVBUjtcblx0XHR9XG5cblx0XHQvLyB5ZWFycyBpcyBhbHdheXMgbm9uLW5lZ2F0aXZlIGhlcmVcblx0XHQvLyBkZWNhZGVzLCBjZW50dXJpZXMgYW5kIG1pbGxlbm5pYSBhcmUgYWx3YXlzIHplcm8gaGVyZVxuXG5cdFx0aWYgKHRzLnllYXJzID49IFlFQVJTX1BFUl9ERUNBREUpIHtcblx0XHRcdC8vIHJpcHBsZSB5ZWFycyB1cCB0byBkZWNhZGVzXG5cdFx0XHR0cy5kZWNhZGVzICs9IGZsb29yKHRzLnllYXJzIC8gWUVBUlNfUEVSX0RFQ0FERSk7XG5cdFx0XHR0cy55ZWFycyAlPSBZRUFSU19QRVJfREVDQURFO1xuXG5cdFx0XHRpZiAodHMuZGVjYWRlcyA+PSBERUNBREVTX1BFUl9DRU5UVVJZKSB7XG5cdFx0XHRcdC8vIHJpcHBsZSBkZWNhZGVzIHVwIHRvIGNlbnR1cmllc1xuXHRcdFx0XHR0cy5jZW50dXJpZXMgKz0gZmxvb3IodHMuZGVjYWRlcyAvIERFQ0FERVNfUEVSX0NFTlRVUlkpO1xuXHRcdFx0XHR0cy5kZWNhZGVzICU9IERFQ0FERVNfUEVSX0NFTlRVUlk7XG5cblx0XHRcdFx0aWYgKHRzLmNlbnR1cmllcyA+PSBDRU5UVVJJRVNfUEVSX01JTExFTk5JVU0pIHtcblx0XHRcdFx0XHQvLyByaXBwbGUgY2VudHVyaWVzIHVwIHRvIG1pbGxlbm5pYVxuXHRcdFx0XHRcdHRzLm1pbGxlbm5pYSArPSBmbG9vcih0cy5jZW50dXJpZXMgLyBDRU5UVVJJRVNfUEVSX01JTExFTk5JVU0pO1xuXHRcdFx0XHRcdHRzLmNlbnR1cmllcyAlPSBDRU5UVVJJRVNfUEVSX01JTExFTk5JVU07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvKipcblx0ICogUmVtb3ZlIGFueSB1bml0cyBub3QgcmVxdWVzdGVkXG5cdCAqIFxuXHQgKiBAcHJpdmF0ZVxuXHQgKiBAcGFyYW0ge1RpbWVzcGFufSB0c1xuXHQgKiBAcGFyYW0ge251bWJlcn0gdW5pdHMgdGhlIHVuaXRzIHRvIHBvcHVsYXRlXG5cdCAqIEBwYXJhbSB7bnVtYmVyfSBtYXggbnVtYmVyIG9mIGxhYmVscyB0byBvdXRwdXRcblx0ICogQHBhcmFtIHtudW1iZXJ9IGRpZ2l0cyBtYXggbnVtYmVyIG9mIGRlY2ltYWwgZGlnaXRzIHRvIG91dHB1dFxuXHQgKi9cblx0ZnVuY3Rpb24gcHJ1bmVVbml0cyh0cywgdW5pdHMsIG1heCwgZGlnaXRzKSB7XG5cdFx0dmFyIGNvdW50ID0gMDtcblxuXHRcdC8vIENhbGMgZnJvbSBsYXJnZXN0IHVuaXQgdG8gc21hbGxlc3QgdG8gcHJldmVudCB1bmRlcmZsb3dcblx0XHRpZiAoISh1bml0cyAmIE1JTExFTk5JQSkgfHwgKGNvdW50ID49IG1heCkpIHtcblx0XHRcdC8vIHJpcHBsZSBtaWxsZW5uaWEgZG93biB0byBjZW50dXJpZXNcblx0XHRcdHRzLmNlbnR1cmllcyArPSB0cy5taWxsZW5uaWEgKiBDRU5UVVJJRVNfUEVSX01JTExFTk5JVU07XG5cdFx0XHRkZWxldGUgdHMubWlsbGVubmlhO1xuXG5cdFx0fSBlbHNlIGlmICh0cy5taWxsZW5uaWEpIHtcblx0XHRcdGNvdW50Kys7XG5cdFx0fVxuXG5cdFx0aWYgKCEodW5pdHMgJiBDRU5UVVJJRVMpIHx8IChjb3VudCA+PSBtYXgpKSB7XG5cdFx0XHQvLyByaXBwbGUgY2VudHVyaWVzIGRvd24gdG8gZGVjYWRlc1xuXHRcdFx0dHMuZGVjYWRlcyArPSB0cy5jZW50dXJpZXMgKiBERUNBREVTX1BFUl9DRU5UVVJZO1xuXHRcdFx0ZGVsZXRlIHRzLmNlbnR1cmllcztcblxuXHRcdH0gZWxzZSBpZiAodHMuY2VudHVyaWVzKSB7XG5cdFx0XHRjb3VudCsrO1xuXHRcdH1cblxuXHRcdGlmICghKHVuaXRzICYgREVDQURFUykgfHwgKGNvdW50ID49IG1heCkpIHtcblx0XHRcdC8vIHJpcHBsZSBkZWNhZGVzIGRvd24gdG8geWVhcnNcblx0XHRcdHRzLnllYXJzICs9IHRzLmRlY2FkZXMgKiBZRUFSU19QRVJfREVDQURFO1xuXHRcdFx0ZGVsZXRlIHRzLmRlY2FkZXM7XG5cblx0XHR9IGVsc2UgaWYgKHRzLmRlY2FkZXMpIHtcblx0XHRcdGNvdW50Kys7XG5cdFx0fVxuXG5cdFx0aWYgKCEodW5pdHMgJiBZRUFSUykgfHwgKGNvdW50ID49IG1heCkpIHtcblx0XHRcdC8vIHJpcHBsZSB5ZWFycyBkb3duIHRvIG1vbnRoc1xuXHRcdFx0dHMubW9udGhzICs9IHRzLnllYXJzICogTU9OVEhTX1BFUl9ZRUFSO1xuXHRcdFx0ZGVsZXRlIHRzLnllYXJzO1xuXG5cdFx0fSBlbHNlIGlmICh0cy55ZWFycykge1xuXHRcdFx0Y291bnQrKztcblx0XHR9XG5cblx0XHRpZiAoISh1bml0cyAmIE1PTlRIUykgfHwgKGNvdW50ID49IG1heCkpIHtcblx0XHRcdC8vIHJpcHBsZSBtb250aHMgZG93biB0byBkYXlzXG5cdFx0XHRpZiAodHMubW9udGhzKSB7XG5cdFx0XHRcdHRzLmRheXMgKz0gYm9ycm93TW9udGhzKHRzLnJlZk1vbnRoLCB0cy5tb250aHMpO1xuXHRcdFx0fVxuXHRcdFx0ZGVsZXRlIHRzLm1vbnRocztcblxuXHRcdFx0aWYgKHRzLmRheXMgPj0gREFZU19QRVJfV0VFSykge1xuXHRcdFx0XHQvLyByaXBwbGUgZGF5IG92ZXJmbG93IGJhY2sgdXAgdG8gd2Vla3Ncblx0XHRcdFx0dHMud2Vla3MgKz0gZmxvb3IodHMuZGF5cyAvIERBWVNfUEVSX1dFRUspO1xuXHRcdFx0XHR0cy5kYXlzICU9IERBWVNfUEVSX1dFRUs7XG5cdFx0XHR9XG5cblx0XHR9IGVsc2UgaWYgKHRzLm1vbnRocykge1xuXHRcdFx0Y291bnQrKztcblx0XHR9XG5cblx0XHRpZiAoISh1bml0cyAmIFdFRUtTKSB8fCAoY291bnQgPj0gbWF4KSkge1xuXHRcdFx0Ly8gcmlwcGxlIHdlZWtzIGRvd24gdG8gZGF5c1xuXHRcdFx0dHMuZGF5cyArPSB0cy53ZWVrcyAqIERBWVNfUEVSX1dFRUs7XG5cdFx0XHRkZWxldGUgdHMud2Vla3M7XG5cblx0XHR9IGVsc2UgaWYgKHRzLndlZWtzKSB7XG5cdFx0XHRjb3VudCsrO1xuXHRcdH1cblxuXHRcdGlmICghKHVuaXRzICYgREFZUykgfHwgKGNvdW50ID49IG1heCkpIHtcblx0XHRcdC8vcmlwcGxlIGRheXMgZG93biB0byBob3Vyc1xuXHRcdFx0dHMuaG91cnMgKz0gdHMuZGF5cyAqIEhPVVJTX1BFUl9EQVk7XG5cdFx0XHRkZWxldGUgdHMuZGF5cztcblxuXHRcdH0gZWxzZSBpZiAodHMuZGF5cykge1xuXHRcdFx0Y291bnQrKztcblx0XHR9XG5cblx0XHRpZiAoISh1bml0cyAmIEhPVVJTKSB8fCAoY291bnQgPj0gbWF4KSkge1xuXHRcdFx0Ly8gcmlwcGxlIGhvdXJzIGRvd24gdG8gbWludXRlc1xuXHRcdFx0dHMubWludXRlcyArPSB0cy5ob3VycyAqIE1JTlVURVNfUEVSX0hPVVI7XG5cdFx0XHRkZWxldGUgdHMuaG91cnM7XG5cblx0XHR9IGVsc2UgaWYgKHRzLmhvdXJzKSB7XG5cdFx0XHRjb3VudCsrO1xuXHRcdH1cblxuXHRcdGlmICghKHVuaXRzICYgTUlOVVRFUykgfHwgKGNvdW50ID49IG1heCkpIHtcblx0XHRcdC8vIHJpcHBsZSBtaW51dGVzIGRvd24gdG8gc2Vjb25kc1xuXHRcdFx0dHMuc2Vjb25kcyArPSB0cy5taW51dGVzICogU0VDT05EU19QRVJfTUlOVVRFO1xuXHRcdFx0ZGVsZXRlIHRzLm1pbnV0ZXM7XG5cblx0XHR9IGVsc2UgaWYgKHRzLm1pbnV0ZXMpIHtcblx0XHRcdGNvdW50Kys7XG5cdFx0fVxuXG5cdFx0aWYgKCEodW5pdHMgJiBTRUNPTkRTKSB8fCAoY291bnQgPj0gbWF4KSkge1xuXHRcdFx0Ly8gcmlwcGxlIHNlY29uZHMgZG93biB0byBtaWxsaXNlY29uZHNcblx0XHRcdHRzLm1pbGxpc2Vjb25kcyArPSB0cy5zZWNvbmRzICogTUlMTElTRUNPTkRTX1BFUl9TRUNPTkQ7XG5cdFx0XHRkZWxldGUgdHMuc2Vjb25kcztcblxuXHRcdH0gZWxzZSBpZiAodHMuc2Vjb25kcykge1xuXHRcdFx0Y291bnQrKztcblx0XHR9XG5cblx0XHQvLyBub3RoaW5nIHRvIHJpcHBsZSBtaWxsaXNlY29uZHMgZG93biB0b1xuXHRcdC8vIHNvIHJpcHBsZSBiYWNrIHVwIHRvIHNtYWxsZXN0IGV4aXN0aW5nIHVuaXQgYXMgYSBmcmFjdGlvbmFsIHZhbHVlXG5cdFx0aWYgKCEodW5pdHMgJiBNSUxMSVNFQ09ORFMpIHx8IChjb3VudCA+PSBtYXgpKSB7XG5cdFx0XHRmcmFjdGlvbmFsKHRzLCBkaWdpdHMpO1xuXHRcdH1cblx0fVxuXG5cdC8qKlxuXHQgKiBQb3B1bGF0ZXMgdGhlIFRpbWVzcGFuIG9iamVjdFxuXHQgKiBcblx0ICogQHByaXZhdGVcblx0ICogQHBhcmFtIHtUaW1lc3Bhbn0gdHNcblx0ICogQHBhcmFtIHs/RGF0ZX0gc3RhcnQgdGhlIHN0YXJ0aW5nIGRhdGVcblx0ICogQHBhcmFtIHs/RGF0ZX0gZW5kIHRoZSBlbmRpbmcgZGF0ZVxuXHQgKiBAcGFyYW0ge251bWJlcn0gdW5pdHMgdGhlIHVuaXRzIHRvIHBvcHVsYXRlXG5cdCAqIEBwYXJhbSB7bnVtYmVyfSBtYXggbnVtYmVyIG9mIGxhYmVscyB0byBvdXRwdXRcblx0ICogQHBhcmFtIHtudW1iZXJ9IGRpZ2l0cyBtYXggbnVtYmVyIG9mIGRlY2ltYWwgZGlnaXRzIHRvIG91dHB1dFxuXHQgKi9cblx0ZnVuY3Rpb24gcG9wdWxhdGUodHMsIHN0YXJ0LCBlbmQsIHVuaXRzLCBtYXgsIGRpZ2l0cykge1xuXHRcdHZhciBub3cgPSBuZXcgRGF0ZSgpO1xuXG5cdFx0dHMuc3RhcnQgPSBzdGFydCA9IHN0YXJ0IHx8IG5vdztcblx0XHR0cy5lbmQgPSBlbmQgPSBlbmQgfHwgbm93O1xuXHRcdHRzLnVuaXRzID0gdW5pdHM7XG5cblx0XHR0cy52YWx1ZSA9IGVuZC5nZXRUaW1lKCkgLSBzdGFydC5nZXRUaW1lKCk7XG5cdFx0aWYgKHRzLnZhbHVlIDwgMCkge1xuXHRcdFx0Ly8gc3dhcCBpZiByZXZlcnNlZFxuXHRcdFx0dmFyIHRtcCA9IGVuZDtcblx0XHRcdGVuZCA9IHN0YXJ0O1xuXHRcdFx0c3RhcnQgPSB0bXA7XG5cdFx0fVxuXG5cdFx0Ly8gcmVmZXJlbmNlIG1vbnRoIGZvciBkZXRlcm1pbmluZyBkYXlzIGluIG1vbnRoXG5cdFx0dHMucmVmTW9udGggPSBuZXcgRGF0ZShzdGFydC5nZXRGdWxsWWVhcigpLCBzdGFydC5nZXRNb250aCgpLCAxNSwgMTIsIDAsIDApO1xuXHRcdHRyeSB7XG5cdFx0XHQvLyByZXNldCB0byBpbml0aWFsIGRlbHRhc1xuXHRcdFx0dHMubWlsbGVubmlhID0gMDtcblx0XHRcdHRzLmNlbnR1cmllcyA9IDA7XG5cdFx0XHR0cy5kZWNhZGVzID0gMDtcblx0XHRcdHRzLnllYXJzID0gZW5kLmdldEZ1bGxZZWFyKCkgLSBzdGFydC5nZXRGdWxsWWVhcigpO1xuXHRcdFx0dHMubW9udGhzID0gZW5kLmdldE1vbnRoKCkgLSBzdGFydC5nZXRNb250aCgpO1xuXHRcdFx0dHMud2Vla3MgPSAwO1xuXHRcdFx0dHMuZGF5cyA9IGVuZC5nZXREYXRlKCkgLSBzdGFydC5nZXREYXRlKCk7XG5cdFx0XHR0cy5ob3VycyA9IGVuZC5nZXRIb3VycygpIC0gc3RhcnQuZ2V0SG91cnMoKTtcblx0XHRcdHRzLm1pbnV0ZXMgPSBlbmQuZ2V0TWludXRlcygpIC0gc3RhcnQuZ2V0TWludXRlcygpO1xuXHRcdFx0dHMuc2Vjb25kcyA9IGVuZC5nZXRTZWNvbmRzKCkgLSBzdGFydC5nZXRTZWNvbmRzKCk7XG5cdFx0XHR0cy5taWxsaXNlY29uZHMgPSBlbmQuZ2V0TWlsbGlzZWNvbmRzKCkgLSBzdGFydC5nZXRNaWxsaXNlY29uZHMoKTtcblxuXHRcdFx0cmlwcGxlKHRzKTtcblx0XHRcdHBydW5lVW5pdHModHMsIHVuaXRzLCBtYXgsIGRpZ2l0cyk7XG5cblx0XHR9IGZpbmFsbHkge1xuXHRcdFx0ZGVsZXRlIHRzLnJlZk1vbnRoO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cztcblx0fVxuXG5cdC8qKlxuXHQgKiBEZXRlcm1pbmUgYW4gYXBwcm9wcmlhdGUgcmVmcmVzaCByYXRlIGJhc2VkIHVwb24gdW5pdHNcblx0ICogXG5cdCAqIEBwcml2YXRlXG5cdCAqIEBwYXJhbSB7bnVtYmVyfSB1bml0cyB0aGUgdW5pdHMgdG8gcG9wdWxhdGVcblx0ICogQHJldHVybiB7bnVtYmVyfSBtaWxsaXNlY29uZHMgdG8gZGVsYXlcblx0ICovXG5cdGZ1bmN0aW9uIGdldERlbGF5KHVuaXRzKSB7XG5cdFx0aWYgKHVuaXRzICYgTUlMTElTRUNPTkRTKSB7XG5cdFx0XHQvLyByZWZyZXNoIHZlcnkgcXVpY2tseVxuXHRcdFx0cmV0dXJuIE1JTExJU0VDT05EU19QRVJfU0VDT05EIC8gMzA7IC8vMzBIelxuXHRcdH1cblxuXHRcdGlmICh1bml0cyAmIFNFQ09ORFMpIHtcblx0XHRcdC8vIHJlZnJlc2ggZXZlcnkgc2Vjb25kXG5cdFx0XHRyZXR1cm4gTUlMTElTRUNPTkRTX1BFUl9TRUNPTkQ7IC8vMUh6XG5cdFx0fVxuXG5cdFx0aWYgKHVuaXRzICYgTUlOVVRFUykge1xuXHRcdFx0Ly8gcmVmcmVzaCBldmVyeSBtaW51dGVcblx0XHRcdHJldHVybiBNSUxMSVNFQ09ORFNfUEVSX1NFQ09ORCAqIFNFQ09ORFNfUEVSX01JTlVURTtcblx0XHR9XG5cblx0XHRpZiAodW5pdHMgJiBIT1VSUykge1xuXHRcdFx0Ly8gcmVmcmVzaCBob3VybHlcblx0XHRcdHJldHVybiBNSUxMSVNFQ09ORFNfUEVSX1NFQ09ORCAqIFNFQ09ORFNfUEVSX01JTlVURSAqIE1JTlVURVNfUEVSX0hPVVI7XG5cdFx0fVxuXHRcdFxuXHRcdGlmICh1bml0cyAmIERBWVMpIHtcblx0XHRcdC8vIHJlZnJlc2ggZGFpbHlcblx0XHRcdHJldHVybiBNSUxMSVNFQ09ORFNfUEVSX1NFQ09ORCAqIFNFQ09ORFNfUEVSX01JTlVURSAqIE1JTlVURVNfUEVSX0hPVVIgKiBIT1VSU19QRVJfREFZO1xuXHRcdH1cblxuXHRcdC8vIHJlZnJlc2ggdGhlIHJlc3Qgd2Vla2x5XG5cdFx0cmV0dXJuIE1JTExJU0VDT05EU19QRVJfU0VDT05EICogU0VDT05EU19QRVJfTUlOVVRFICogTUlOVVRFU19QRVJfSE9VUiAqIEhPVVJTX1BFUl9EQVkgKiBEQVlTX1BFUl9XRUVLO1xuXHR9XG5cblx0LyoqXG5cdCAqIEFQSSBlbnRyeSBwb2ludFxuXHQgKiBcblx0ICogQHB1YmxpY1xuXHQgKiBAcGFyYW0ge0RhdGV8bnVtYmVyfFRpbWVzcGFufG51bGx8ZnVuY3Rpb24oVGltZXNwYW4sbnVtYmVyKX0gc3RhcnQgdGhlIHN0YXJ0aW5nIGRhdGVcblx0ICogQHBhcmFtIHtEYXRlfG51bWJlcnxUaW1lc3BhbnxudWxsfGZ1bmN0aW9uKFRpbWVzcGFuLG51bWJlcil9IGVuZCB0aGUgZW5kaW5nIGRhdGVcblx0ICogQHBhcmFtIHtudW1iZXI9fSB1bml0cyB0aGUgdW5pdHMgdG8gcG9wdWxhdGVcblx0ICogQHBhcmFtIHtudW1iZXI9fSBtYXggbnVtYmVyIG9mIGxhYmVscyB0byBvdXRwdXRcblx0ICogQHBhcmFtIHtudW1iZXI9fSBkaWdpdHMgbWF4IG51bWJlciBvZiBkZWNpbWFsIGRpZ2l0cyB0byBvdXRwdXRcblx0ICogQHJldHVybiB7VGltZXNwYW58bnVtYmVyfVxuXHQgKi9cblx0ZnVuY3Rpb24gY291bnRkb3duKHN0YXJ0LCBlbmQsIHVuaXRzLCBtYXgsIGRpZ2l0cykge1xuXHRcdHZhciBjYWxsYmFjaztcblxuXHRcdC8vIGVuc3VyZSBzb21lIHVuaXRzIG9yIHVzZSBkZWZhdWx0c1xuXHRcdHVuaXRzID0gK3VuaXRzIHx8IERFRkFVTFRTO1xuXHRcdC8vIG1heCBtdXN0IGJlIHBvc2l0aXZlXG5cdFx0bWF4ID0gKG1heCA+IDApID8gbWF4IDogTmFOO1xuXHRcdC8vIGNsYW1wIGRpZ2l0cyB0byBhbiBpbnRlZ2VyIGJldHdlZW4gWzAsIDIwXVxuXHRcdGRpZ2l0cyA9IChkaWdpdHMgPiAwKSA/IChkaWdpdHMgPCAyMCkgPyBNYXRoLnJvdW5kKGRpZ2l0cykgOiAyMCA6IDA7XG5cblx0XHQvLyBlbnN1cmUgc3RhcnQgZGF0ZVxuXHRcdHZhciBzdGFydFRTID0gbnVsbDtcblx0XHRpZiAoJ2Z1bmN0aW9uJyA9PT0gdHlwZW9mIHN0YXJ0KSB7XG5cdFx0XHRjYWxsYmFjayA9IHN0YXJ0O1xuXHRcdFx0c3RhcnQgPSBudWxsO1xuXG5cdFx0fSBlbHNlIGlmICghKHN0YXJ0IGluc3RhbmNlb2YgRGF0ZSkpIHtcblx0XHRcdGlmICgoc3RhcnQgIT09IG51bGwpICYmIGlzRmluaXRlKHN0YXJ0KSkge1xuXHRcdFx0XHRzdGFydCA9IG5ldyBEYXRlKCtzdGFydCk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRpZiAoJ29iamVjdCcgPT09IHR5cGVvZiBzdGFydFRTKSB7XG5cdFx0XHRcdFx0c3RhcnRUUyA9IC8qKiBAdHlwZXtUaW1lc3Bhbn0gKi8oc3RhcnQpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHN0YXJ0ID0gbnVsbDtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBlbnN1cmUgZW5kIGRhdGVcblx0XHR2YXIgZW5kVFMgPSBudWxsO1xuXHRcdGlmICgnZnVuY3Rpb24nID09PSB0eXBlb2YgZW5kKSB7XG5cdFx0XHRjYWxsYmFjayA9IGVuZDtcblx0XHRcdGVuZCA9IG51bGw7XG5cblx0XHR9IGVsc2UgaWYgKCEoZW5kIGluc3RhbmNlb2YgRGF0ZSkpIHtcblx0XHRcdGlmICgoZW5kICE9PSBudWxsKSAmJiBpc0Zpbml0ZShlbmQpKSB7XG5cdFx0XHRcdGVuZCA9IG5ldyBEYXRlKCtlbmQpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0aWYgKCdvYmplY3QnID09PSB0eXBlb2YgZW5kKSB7XG5cdFx0XHRcdFx0ZW5kVFMgPSAvKiogQHR5cGV7VGltZXNwYW59ICovKGVuZCk7XG5cdFx0XHRcdH1cblx0XHRcdFx0ZW5kID0gbnVsbDtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBtdXN0IHdhaXQgdG8gaW50ZXJwcmV0IHRpbWVzcGFucyB1bnRpbCBhZnRlciByZXNvbHZpbmcgZGF0ZXNcblx0XHRpZiAoc3RhcnRUUykge1xuXHRcdFx0c3RhcnQgPSBhZGRUb0RhdGUoc3RhcnRUUywgZW5kKTtcblx0XHR9XG5cdFx0aWYgKGVuZFRTKSB7XG5cdFx0XHRlbmQgPSBhZGRUb0RhdGUoZW5kVFMsIHN0YXJ0KTtcblx0XHR9XG5cblx0XHRpZiAoIXN0YXJ0ICYmICFlbmQpIHtcblx0XHRcdC8vIHVzZWQgZm9yIHVuaXQgdGVzdGluZ1xuXHRcdFx0cmV0dXJuIG5ldyBUaW1lc3BhbigpO1xuXHRcdH1cblxuXHRcdGlmICghY2FsbGJhY2spIHtcblx0XHRcdHJldHVybiBwb3B1bGF0ZShuZXcgVGltZXNwYW4oKSwgLyoqIEB0eXBle0RhdGV9ICovKHN0YXJ0KSwgLyoqIEB0eXBle0RhdGV9ICovKGVuZCksIC8qKiBAdHlwZXtudW1iZXJ9ICovKHVuaXRzKSwgLyoqIEB0eXBle251bWJlcn0gKi8obWF4KSwgLyoqIEB0eXBle251bWJlcn0gKi8oZGlnaXRzKSk7XG5cdFx0fVxuXG5cdFx0Ly8gYmFzZSBkZWxheSBvZmYgdW5pdHNcblx0XHR2YXIgZGVsYXkgPSBnZXREZWxheSh1bml0cyksXG5cdFx0XHR0aW1lcklkLFxuXHRcdFx0Zm4gPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0Y2FsbGJhY2soXG5cdFx0XHRcdFx0cG9wdWxhdGUobmV3IFRpbWVzcGFuKCksIC8qKiBAdHlwZXtEYXRlfSAqLyhzdGFydCksIC8qKiBAdHlwZXtEYXRlfSAqLyhlbmQpLCAvKiogQHR5cGV7bnVtYmVyfSAqLyh1bml0cyksIC8qKiBAdHlwZXtudW1iZXJ9ICovKG1heCksIC8qKiBAdHlwZXtudW1iZXJ9ICovKGRpZ2l0cykpLFxuXHRcdFx0XHRcdHRpbWVySWRcblx0XHRcdFx0KTtcblx0XHRcdH07XG5cblx0XHRmbigpO1xuXHRcdHJldHVybiAodGltZXJJZCA9IHNldEludGVydmFsKGZuLCBkZWxheSkpO1xuXHR9XG5cblx0LyoqXG5cdCAqIEBwdWJsaWNcblx0ICogQGNvbnN0XG5cdCAqIEB0eXBlIHtudW1iZXJ9XG5cdCAqL1xuXHRjb3VudGRvd24uTUlMTElTRUNPTkRTID0gTUlMTElTRUNPTkRTO1xuXG5cdC8qKlxuXHQgKiBAcHVibGljXG5cdCAqIEBjb25zdFxuXHQgKiBAdHlwZSB7bnVtYmVyfVxuXHQgKi9cblx0Y291bnRkb3duLlNFQ09ORFMgPSBTRUNPTkRTO1xuXG5cdC8qKlxuXHQgKiBAcHVibGljXG5cdCAqIEBjb25zdFxuXHQgKiBAdHlwZSB7bnVtYmVyfVxuXHQgKi9cblx0Y291bnRkb3duLk1JTlVURVMgPSBNSU5VVEVTO1xuXG5cdC8qKlxuXHQgKiBAcHVibGljXG5cdCAqIEBjb25zdFxuXHQgKiBAdHlwZSB7bnVtYmVyfVxuXHQgKi9cblx0Y291bnRkb3duLkhPVVJTID0gSE9VUlM7XG5cblx0LyoqXG5cdCAqIEBwdWJsaWNcblx0ICogQGNvbnN0XG5cdCAqIEB0eXBlIHtudW1iZXJ9XG5cdCAqL1xuXHRjb3VudGRvd24uREFZUyA9IERBWVM7XG5cblx0LyoqXG5cdCAqIEBwdWJsaWNcblx0ICogQGNvbnN0XG5cdCAqIEB0eXBlIHtudW1iZXJ9XG5cdCAqL1xuXHRjb3VudGRvd24uV0VFS1MgPSBXRUVLUztcblxuXHQvKipcblx0ICogQHB1YmxpY1xuXHQgKiBAY29uc3Rcblx0ICogQHR5cGUge251bWJlcn1cblx0ICovXG5cdGNvdW50ZG93bi5NT05USFMgPSBNT05USFM7XG5cblx0LyoqXG5cdCAqIEBwdWJsaWNcblx0ICogQGNvbnN0XG5cdCAqIEB0eXBlIHtudW1iZXJ9XG5cdCAqL1xuXHRjb3VudGRvd24uWUVBUlMgPSBZRUFSUztcblxuXHQvKipcblx0ICogQHB1YmxpY1xuXHQgKiBAY29uc3Rcblx0ICogQHR5cGUge251bWJlcn1cblx0ICovXG5cdGNvdW50ZG93bi5ERUNBREVTID0gREVDQURFUztcblxuXHQvKipcblx0ICogQHB1YmxpY1xuXHQgKiBAY29uc3Rcblx0ICogQHR5cGUge251bWJlcn1cblx0ICovXG5cdGNvdW50ZG93bi5DRU5UVVJJRVMgPSBDRU5UVVJJRVM7XG5cblx0LyoqXG5cdCAqIEBwdWJsaWNcblx0ICogQGNvbnN0XG5cdCAqIEB0eXBlIHtudW1iZXJ9XG5cdCAqL1xuXHRjb3VudGRvd24uTUlMTEVOTklBID0gTUlMTEVOTklBO1xuXG5cdC8qKlxuXHQgKiBAcHVibGljXG5cdCAqIEBjb25zdFxuXHQgKiBAdHlwZSB7bnVtYmVyfVxuXHQgKi9cblx0Y291bnRkb3duLkRFRkFVTFRTID0gREVGQVVMVFM7XG5cblx0LyoqXG5cdCAqIEBwdWJsaWNcblx0ICogQGNvbnN0XG5cdCAqIEB0eXBlIHtudW1iZXJ9XG5cdCAqL1xuXHRjb3VudGRvd24uQUxMID0gTUlMTEVOTklBfENFTlRVUklFU3xERUNBREVTfFlFQVJTfE1PTlRIU3xXRUVLU3xEQVlTfEhPVVJTfE1JTlVURVN8U0VDT05EU3xNSUxMSVNFQ09ORFM7XG5cblx0LyoqXG5cdCAqIEN1c3RvbWl6ZSB0aGUgZm9ybWF0IHNldHRpbmdzLlxuXHQgKiBAcHVibGljXG5cdCAqIEBwYXJhbSB7T2JqZWN0fSBmb3JtYXQgc2V0dGluZ3Mgb2JqZWN0XG5cdCAqL1xuXHR2YXIgc2V0Rm9ybWF0ID0gY291bnRkb3duLnNldEZvcm1hdCA9IGZ1bmN0aW9uKGZvcm1hdCkge1xuXHRcdGlmICghZm9ybWF0KSB7IHJldHVybjsgfVxuXG5cdFx0aWYgKCdzaW5ndWxhcicgaW4gZm9ybWF0IHx8ICdwbHVyYWwnIGluIGZvcm1hdCkge1xuXHRcdFx0dmFyIHNpbmd1bGFyID0gZm9ybWF0LnNpbmd1bGFyIHx8IFtdO1xuXHRcdFx0aWYgKHNpbmd1bGFyLnNwbGl0KSB7XG5cdFx0XHRcdHNpbmd1bGFyID0gc2luZ3VsYXIuc3BsaXQoJ3wnKTtcblx0XHRcdH1cblx0XHRcdHZhciBwbHVyYWwgPSBmb3JtYXQucGx1cmFsIHx8IFtdO1xuXHRcdFx0aWYgKHBsdXJhbC5zcGxpdCkge1xuXHRcdFx0XHRwbHVyYWwgPSBwbHVyYWwuc3BsaXQoJ3wnKTtcblx0XHRcdH1cblxuXHRcdFx0Zm9yICh2YXIgaT1MQUJFTF9NSUxMSVNFQ09ORFM7IGk8PUxBQkVMX01JTExFTk5JQTsgaSsrKSB7XG5cdFx0XHRcdC8vIG92ZXJyaWRlIGFueSBzcGVjaWZpZWQgdW5pdHNcblx0XHRcdFx0TEFCRUxTX1NJTkdMVUFSW2ldID0gc2luZ3VsYXJbaV0gfHwgTEFCRUxTX1NJTkdMVUFSW2ldO1xuXHRcdFx0XHRMQUJFTFNfUExVUkFMW2ldID0gcGx1cmFsW2ldIHx8IExBQkVMU19QTFVSQUxbaV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKCdzdHJpbmcnID09PSB0eXBlb2YgZm9ybWF0Lmxhc3QpIHtcblx0XHRcdExBQkVMX0xBU1QgPSBmb3JtYXQubGFzdDtcblx0XHR9XG5cdFx0aWYgKCdzdHJpbmcnID09PSB0eXBlb2YgZm9ybWF0LmRlbGltKSB7XG5cdFx0XHRMQUJFTF9ERUxJTSA9IGZvcm1hdC5kZWxpbTtcblx0XHR9XG5cdFx0aWYgKCdzdHJpbmcnID09PSB0eXBlb2YgZm9ybWF0LmVtcHR5KSB7XG5cdFx0XHRMQUJFTF9OT1cgPSBmb3JtYXQuZW1wdHk7XG5cdFx0fVxuXHRcdGlmICgnZnVuY3Rpb24nID09PSB0eXBlb2YgZm9ybWF0LmZvcm1hdE51bWJlcikge1xuXHRcdFx0Zm9ybWF0TnVtYmVyID0gZm9ybWF0LmZvcm1hdE51bWJlcjtcblx0XHR9XG5cdFx0aWYgKCdmdW5jdGlvbicgPT09IHR5cGVvZiBmb3JtYXQuZm9ybWF0dGVyKSB7XG5cdFx0XHRmb3JtYXR0ZXIgPSBmb3JtYXQuZm9ybWF0dGVyO1xuXHRcdH1cblx0fTtcblxuXHQvKipcblx0ICogUmV2ZXJ0IHRvIHRoZSBkZWZhdWx0IGZvcm1hdHRpbmcuXG5cdCAqIEBwdWJsaWNcblx0ICovXG5cdHZhciByZXNldEZvcm1hdCA9IGNvdW50ZG93bi5yZXNldEZvcm1hdCA9IGZ1bmN0aW9uKCkge1xuXHRcdExBQkVMU19TSU5HTFVBUiA9ICcgbWlsbGlzZWNvbmR8IHNlY29uZHwgbWludXRlfCBob3VyfCBkYXl8IHdlZWt8IG1vbnRofCB5ZWFyfCBkZWNhZGV8IGNlbnR1cnl8IG1pbGxlbm5pdW0nLnNwbGl0KCd8Jyk7XG5cdFx0TEFCRUxTX1BMVVJBTCA9ICcgbWlsbGlzZWNvbmRzfCBzZWNvbmRzfCBtaW51dGVzfCBob3Vyc3wgZGF5c3wgd2Vla3N8IG1vbnRoc3wgeWVhcnN8IGRlY2FkZXN8IGNlbnR1cmllc3wgbWlsbGVubmlhJy5zcGxpdCgnfCcpO1xuXHRcdExBQkVMX0xBU1QgPSAnIGFuZCAnO1xuXHRcdExBQkVMX0RFTElNID0gJywgJztcblx0XHRMQUJFTF9OT1cgPSAnJztcblx0XHRmb3JtYXROdW1iZXIgPSBmdW5jdGlvbih2YWx1ZSkgeyByZXR1cm4gdmFsdWU7IH07XG5cdFx0Zm9ybWF0dGVyID0gcGx1cmFsaXR5O1xuXHR9O1xuXG5cdC8qKlxuXHQgKiBPdmVycmlkZSB0aGUgdW5pdCBsYWJlbHMuXG5cdCAqIEBwdWJsaWNcblx0ICogQHBhcmFtIHtzdHJpbmd8QXJyYXk9fSBzaW5ndWxhciBhIHBpcGUgKCd8JykgZGVsaW1pdGVkIGxpc3Qgb2Ygc2luZ3VsYXIgdW5pdCBuYW1lIG92ZXJyaWRlc1xuXHQgKiBAcGFyYW0ge3N0cmluZ3xBcnJheT19IHBsdXJhbCBhIHBpcGUgKCd8JykgZGVsaW1pdGVkIGxpc3Qgb2YgcGx1cmFsIHVuaXQgbmFtZSBvdmVycmlkZXNcblx0ICogQHBhcmFtIHtzdHJpbmc9fSBsYXN0IGEgZGVsaW1pdGVyIGJlZm9yZSB0aGUgbGFzdCB1bml0IChkZWZhdWx0OiAnIGFuZCAnKVxuXHQgKiBAcGFyYW0ge3N0cmluZz19IGRlbGltIGEgZGVsaW1pdGVyIHRvIHVzZSBiZXR3ZWVuIGFsbCBvdGhlciB1bml0cyAoZGVmYXVsdDogJywgJylcblx0ICogQHBhcmFtIHtzdHJpbmc9fSBlbXB0eSBhIGxhYmVsIHRvIHVzZSB3aGVuIGFsbCB1bml0cyBhcmUgemVybyAoZGVmYXVsdDogJycpXG5cdCAqIEBwYXJhbSB7ZnVuY3Rpb24obnVtYmVyKTpzdHJpbmc9fSBmb3JtYXROdW1iZXIgYSBmdW5jdGlvbiB3aGljaCBmb3JtYXRzIG51bWJlcnMgYXMgYSBzdHJpbmdcblx0ICogQHBhcmFtIHtmdW5jdGlvbihudW1iZXIsbnVtYmVyKTpzdHJpbmc9fSBmb3JtYXR0ZXIgYSBmdW5jdGlvbiB3aGljaCBmb3JtYXRzIGEgbnVtYmVyL3VuaXQgcGFpciBhcyBhIHN0cmluZ1xuXHQgKiBAZGVwcmVjYXRlZCBzaW5jZSB2ZXJzaW9uIDIuNi4wXG5cdCAqL1xuXHRjb3VudGRvd24uc2V0TGFiZWxzID0gZnVuY3Rpb24oc2luZ3VsYXIsIHBsdXJhbCwgbGFzdCwgZGVsaW0sIGVtcHR5LCBmb3JtYXROdW1iZXIsIGZvcm1hdHRlcikge1xuXHRcdHNldEZvcm1hdCh7XG5cdFx0XHRzaW5ndWxhcjogc2luZ3VsYXIsXG5cdFx0XHRwbHVyYWw6IHBsdXJhbCxcblx0XHRcdGxhc3Q6IGxhc3QsXG5cdFx0XHRkZWxpbTogZGVsaW0sXG5cdFx0XHRlbXB0eTogZW1wdHksXG5cdFx0XHRmb3JtYXROdW1iZXI6IGZvcm1hdE51bWJlcixcblx0XHRcdGZvcm1hdHRlcjogZm9ybWF0dGVyXG5cdFx0fSk7XG5cdH07XG5cblx0LyoqXG5cdCAqIFJldmVydCB0byB0aGUgZGVmYXVsdCB1bml0IGxhYmVscy5cblx0ICogQHB1YmxpY1xuXHQgKiBAZGVwcmVjYXRlZCBzaW5jZSB2ZXJzaW9uIDIuNi4wXG5cdCAqL1xuXHRjb3VudGRvd24ucmVzZXRMYWJlbHMgPSByZXNldEZvcm1hdDtcblxuXHRyZXNldEZvcm1hdCgpO1xuXG5cdGlmIChtb2R1bGUgJiYgbW9kdWxlLmV4cG9ydHMpIHtcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGNvdW50ZG93bjtcblxuXHR9IGVsc2UgaWYgKHR5cGVvZiB3aW5kb3cuZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiB3aW5kb3cuZGVmaW5lLmFtZCAhPT0gJ3VuZGVmaW5lZCcpIHtcblx0XHR3aW5kb3cuZGVmaW5lKCdjb3VudGRvd24nLCBbXSwgZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4gY291bnRkb3duO1xuXHRcdH0pO1xuXHR9XG5cblx0cmV0dXJuIGNvdW50ZG93bjtcblxufSkobW9kdWxlKTtcbiIsIi8qISBhdG9taWMgdjQuMi4xIHwgKGMpIDIwMTggQ2hyaXMgRmVyZGluYW5kaSB8IE1JVCBMaWNlbnNlIHwgaHR0cHM6Ly9naXRodWIuY29tL2NmZXJkaW5hbmRpL2F0b21pYyAqL1xuIShmdW5jdGlvbih0LGUpe1wiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoW10sKGZ1bmN0aW9uKCl7cmV0dXJuIGUodCl9KSk6XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHM/bW9kdWxlLmV4cG9ydHM9ZSh0KTp3aW5kb3cuYXRvbWljPWUodCl9KShcInVuZGVmaW5lZFwiIT10eXBlb2YgZ2xvYmFsP2dsb2JhbDpcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93P3dpbmRvdzp0aGlzLChmdW5jdGlvbih0KXtcInVzZSBzdHJpY3RcIjt2YXIgZSxuPXttZXRob2Q6XCJHRVRcIix1c2VybmFtZTpudWxsLHBhc3N3b3JkOm51bGwsZGF0YTp7fSxoZWFkZXJzOntcIkNvbnRlbnQtdHlwZVwiOlwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCJ9LHJlc3BvbnNlVHlwZTpcInRleHRcIix0aW1lb3V0Om51bGwsd2l0aENyZWRlbnRpYWxzOiExfSxvPWZ1bmN0aW9uKCl7cmV0dXJuXCJYTUxIdHRwUmVxdWVzdFwiaW4gdCYmXCJKU09OXCJpbiB0JiZcIlByb21pc2VcImluIHR9LHI9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9e30sZT0wO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspe3ZhciBuPWFyZ3VtZW50c1tlXTshKGZ1bmN0aW9uKGUpe2Zvcih2YXIgbiBpbiBlKWUuaGFzT3duUHJvcGVydHkobikmJihcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGVbbl0pP3Rbbl09cih0W25dLGVbbl0pOnRbbl09ZVtuXSl9KShuKX1yZXR1cm4gdH0scz1mdW5jdGlvbih0KXt2YXIgbjtpZihcInRleHRcIiE9PWUucmVzcG9uc2VUeXBlJiZcIlwiIT09ZS5yZXNwb25zZVR5cGUpcmV0dXJue2RhdGE6dC5yZXNwb25zZSx4aHI6dH07dHJ5e249SlNPTi5wYXJzZSh0LnJlc3BvbnNlVGV4dCl9Y2F0Y2goZSl7bj10LnJlc3BvbnNlVGV4dH1yZXR1cm57ZGF0YTpuLHhocjp0fX0saT1mdW5jdGlvbih0KXtpZihcInN0cmluZ1wiPT10eXBlb2YgdHx8XCJbb2JqZWN0IEZvcm1EYXRhXVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpKXJldHVybiB0O2lmKC9hcHBsaWNhdGlvblxcL2pzb24vaS50ZXN0KGUuaGVhZGVyc1tcIkNvbnRlbnQtdHlwZVwiXSl8fFwiW29iamVjdCBBcnJheV1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KSlyZXR1cm4gSlNPTi5zdHJpbmdpZnkodCk7dmFyIG49W107Zm9yKHZhciBvIGluIHQpdC5oYXNPd25Qcm9wZXJ0eShvKSYmbi5wdXNoKGVuY29kZVVSSUNvbXBvbmVudChvKStcIj1cIitlbmNvZGVVUklDb21wb25lbnQodFtvXSkpO3JldHVybiBuLmpvaW4oXCImXCIpfSxhPWZ1bmN0aW9uKHQpe3ZhciBuPW5ldyBYTUxIdHRwUmVxdWVzdCxvPW5ldyBQcm9taXNlKGZ1bmN0aW9uKG8scil7bi5vbnJlYWR5c3RhdGVjaGFuZ2U9ZnVuY3Rpb24oKXs0PT09bi5yZWFkeVN0YXRlJiYobi5zdGF0dXM+PTIwMCYmbi5zdGF0dXM8MzAwP28ocyhuKSk6cih7c3RhdHVzOm4uc3RhdHVzLHN0YXR1c1RleHQ6bi5zdGF0dXNUZXh0fSkpfSxuLm9wZW4oZS5tZXRob2QsdCwhMCxlLnVzZXJuYW1lLGUucGFzc3dvcmQpLG4ucmVzcG9uc2VUeXBlPWUucmVzcG9uc2VUeXBlO2Zvcih2YXIgYSBpbiBlLmhlYWRlcnMpZS5oZWFkZXJzLmhhc093blByb3BlcnR5KGEpJiZuLnNldFJlcXVlc3RIZWFkZXIoYSxlLmhlYWRlcnNbYV0pO2UudGltZW91dCYmKG4udGltZW91dD1lLnRpbWVvdXQsbi5vbnRpbWVvdXQ9ZnVuY3Rpb24odCl7cih7c3RhdHVzOjQwOCxzdGF0dXNUZXh0OlwiUmVxdWVzdCB0aW1lb3V0XCJ9KX0pLGUud2l0aENyZWRlbnRpYWxzJiYobi53aXRoQ3JlZGVudGlhbHM9ITApLG4uc2VuZChpKGUuZGF0YSkpfSk7cmV0dXJuIG8uY2FuY2VsPWZ1bmN0aW9uKCl7bi5hYm9ydCgpfSxvfTtyZXR1cm4gZnVuY3Rpb24odCxzKXtpZighbygpKXRocm93XCJBdG9taWM6IFRoaXMgYnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IHRoZSBtZXRob2RzIHVzZWQgaW4gdGhpcyBwbHVnaW4uXCI7cmV0dXJuIGU9cihuLHN8fHt9KSxhKHQpfX0pKTsiLCIhZnVuY3Rpb24oZSx0KXtcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cyYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIG1vZHVsZT9tb2R1bGUuZXhwb3J0cz10KCk6XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZSh0KTplLkRPTVB1cmlmeT10KCl9KHRoaXMsZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBlKGUsdCl7eSYmeShlLG51bGwpO2Zvcih2YXIgbj10Lmxlbmd0aDtuLS07KXt2YXIgcj10W25dO2lmKFwic3RyaW5nXCI9PXR5cGVvZiByKXt2YXIgbz1yLnRvTG93ZXJDYXNlKCk7byE9PXImJih0W25dPW8scj1vKX1lW3JdPSEwfXJldHVybiBlfWZ1bmN0aW9uIHQoZSl7dmFyIHQ9e30sbj12b2lkIDA7Zm9yKG4gaW4gZSlnKGgsZSxbbl0pJiYodFtuXT1lW25dKTtyZXR1cm4gdH1mdW5jdGlvbiBuKGUpe2lmKEFycmF5LmlzQXJyYXkoZSkpe2Zvcih2YXIgdD0wLG49QXJyYXkoZS5sZW5ndGgpO3Q8ZS5sZW5ndGg7dCsrKW5bdF09ZVt0XTtyZXR1cm4gbn1yZXR1cm4gQXJyYXkuZnJvbShlKX1mdW5jdGlvbiByKCl7dmFyIG89YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOk0oKSxkPWZ1bmN0aW9uKGUpe3JldHVybiByKGUpfTtpZihkLnZlcnNpb249XCIxLjAuOFwiLGQucmVtb3ZlZD1bXSwhb3x8IW8uZG9jdW1lbnR8fDkhPT1vLmRvY3VtZW50Lm5vZGVUeXBlKXJldHVybiBkLmlzU3VwcG9ydGVkPSExLGQ7dmFyIGg9by5kb2N1bWVudCx5PSExLGc9ITEsdj1vLmRvY3VtZW50LF89by5Eb2N1bWVudEZyYWdtZW50LEQ9by5IVE1MVGVtcGxhdGVFbGVtZW50LFI9by5Ob2RlLEM9by5Ob2RlRmlsdGVyLHo9by5OYW1lZE5vZGVNYXAsRj12b2lkIDA9PT16P28uTmFtZWROb2RlTWFwfHxvLk1vek5hbWVkQXR0ck1hcDp6LEg9by5UZXh0LEk9by5Db21tZW50LGo9by5ET01QYXJzZXI7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgRCl7dmFyIFA9di5jcmVhdGVFbGVtZW50KFwidGVtcGxhdGVcIik7UC5jb250ZW50JiZQLmNvbnRlbnQub3duZXJEb2N1bWVudCYmKHY9UC5jb250ZW50Lm93bmVyRG9jdW1lbnQpfXZhciBVPXYsVz1VLmltcGxlbWVudGF0aW9uLEI9VS5jcmVhdGVOb2RlSXRlcmF0b3IsRz1VLmdldEVsZW1lbnRzQnlUYWdOYW1lLHE9VS5jcmVhdGVEb2N1bWVudEZyYWdtZW50LFY9aC5pbXBvcnROb2RlLFk9e307ZC5pc1N1cHBvcnRlZD1XJiZ2b2lkIDAhPT1XLmNyZWF0ZUhUTUxEb2N1bWVudCYmOSE9PXYuZG9jdW1lbnRNb2RlO3ZhciBLPWIsWD1ULCQ9QSxKPXgsUT1MLFo9ayxlZT1TLHRlPW51bGwsbmU9ZSh7fSxbXS5jb25jYXQobihpKSxuKGEpLG4obCksbihzKSxuKGMpKSkscmU9bnVsbCxvZT1lKHt9LFtdLmNvbmNhdChuKHUpLG4oZiksbihtKSxuKHApKSksaWU9bnVsbCxhZT1udWxsLGxlPSEwLHNlPSEwLGNlPSExLGRlPSExLHVlPSExLGZlPSExLG1lPSExLHBlPSExLGhlPSExLHllPSExLGdlPSExLHZlPSEwLGJlPSEwLFRlPSExLEFlPXt9LHhlPWUoe30sW1wiYXVkaW9cIixcImhlYWRcIixcIm1hdGhcIixcInNjcmlwdFwiLFwic3R5bGVcIixcInRlbXBsYXRlXCIsXCJzdmdcIixcInZpZGVvXCJdKSxTZT1lKHt9LFtcImF1ZGlvXCIsXCJ2aWRlb1wiLFwiaW1nXCIsXCJzb3VyY2VcIixcImltYWdlXCJdKSxMZT1lKHt9LFtcImFsdFwiLFwiY2xhc3NcIixcImZvclwiLFwiaWRcIixcImxhYmVsXCIsXCJuYW1lXCIsXCJwYXR0ZXJuXCIsXCJwbGFjZWhvbGRlclwiLFwic3VtbWFyeVwiLFwidGl0bGVcIixcInZhbHVlXCIsXCJzdHlsZVwiLFwieG1sbnNcIl0pLGtlPW51bGwsd2U9di5jcmVhdGVFbGVtZW50KFwiZm9ybVwiKSxFZT1mdW5jdGlvbihyKXtyJiZcIm9iamVjdFwiPT09KHZvaWQgMD09PXI/XCJ1bmRlZmluZWRcIjp3KHIpKXx8KHI9e30pLHRlPVwiQUxMT1dFRF9UQUdTXCJpbiByP2Uoe30sci5BTExPV0VEX1RBR1MpOm5lLHJlPVwiQUxMT1dFRF9BVFRSXCJpbiByP2Uoe30sci5BTExPV0VEX0FUVFIpOm9lLGllPVwiRk9SQklEX1RBR1NcImluIHI/ZSh7fSxyLkZPUkJJRF9UQUdTKTp7fSxhZT1cIkZPUkJJRF9BVFRSXCJpbiByP2Uoe30sci5GT1JCSURfQVRUUik6e30sQWU9XCJVU0VfUFJPRklMRVNcImluIHImJnIuVVNFX1BST0ZJTEVTLGxlPSExIT09ci5BTExPV19BUklBX0FUVFIsc2U9ITEhPT1yLkFMTE9XX0RBVEFfQVRUUixjZT1yLkFMTE9XX1VOS05PV05fUFJPVE9DT0xTfHwhMSxkZT1yLlNBRkVfRk9SX0pRVUVSWXx8ITEsdWU9ci5TQUZFX0ZPUl9URU1QTEFURVN8fCExLGZlPXIuV0hPTEVfRE9DVU1FTlR8fCExLGhlPXIuUkVUVVJOX0RPTXx8ITEseWU9ci5SRVRVUk5fRE9NX0ZSQUdNRU5UfHwhMSxnZT1yLlJFVFVSTl9ET01fSU1QT1JUfHwhMSxwZT1yLkZPUkNFX0JPRFl8fCExLHZlPSExIT09ci5TQU5JVElaRV9ET00sYmU9ITEhPT1yLktFRVBfQ09OVEVOVCxUZT1yLklOX1BMQUNFfHwhMSxlZT1yLkFMTE9XRURfVVJJX1JFR0VYUHx8ZWUsdWUmJihzZT0hMSkseWUmJihoZT0hMCksQWUmJih0ZT1lKHt9LFtdLmNvbmNhdChuKGMpKSkscmU9W10sITA9PT1BZS5odG1sJiYoZSh0ZSxpKSxlKHJlLHUpKSwhMD09PUFlLnN2ZyYmKGUodGUsYSksZShyZSxmKSxlKHJlLHApKSwhMD09PUFlLnN2Z0ZpbHRlcnMmJihlKHRlLGwpLGUocmUsZiksZShyZSxwKSksITA9PT1BZS5tYXRoTWwmJihlKHRlLHMpLGUocmUsbSksZShyZSxwKSkpLHIuQUREX1RBR1MmJih0ZT09PW5lJiYodGU9dCh0ZSkpLGUodGUsci5BRERfVEFHUykpLHIuQUREX0FUVFImJihyZT09PW9lJiYocmU9dChyZSkpLGUocmUsci5BRERfQVRUUikpLHIuQUREX1VSSV9TQUZFX0FUVFImJmUoTGUsci5BRERfVVJJX1NBRkVfQVRUUiksYmUmJih0ZVtcIiN0ZXh0XCJdPSEwKSxmZSYmZSh0ZSxbXCJodG1sXCIsXCJoZWFkXCIsXCJib2R5XCJdKSx0ZS50YWJsZSYmZSh0ZSxbXCJ0Ym9keVwiXSksTiYmTihyKSxrZT1yfSxPZT1mdW5jdGlvbihlKXtkLnJlbW92ZWQucHVzaCh7ZWxlbWVudDplfSk7dHJ5e2UucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlKX1jYXRjaCh0KXtlLm91dGVySFRNTD1cIlwifX0sTmU9ZnVuY3Rpb24oZSx0KXt0cnl7ZC5yZW1vdmVkLnB1c2goe2F0dHJpYnV0ZTp0LmdldEF0dHJpYnV0ZU5vZGUoZSksZnJvbTp0fSl9Y2F0Y2goZSl7ZC5yZW1vdmVkLnB1c2goe2F0dHJpYnV0ZTpudWxsLGZyb206dH0pfXQucmVtb3ZlQXR0cmlidXRlKGUpfSxNZT1mdW5jdGlvbih0KXt2YXIgbj12b2lkIDAscj12b2lkIDA7aWYocGUpdD1cIjxyZW1vdmU+PC9yZW1vdmU+XCIrdDtlbHNle3ZhciBvPXQubWF0Y2goL15bXFxzXSsvKTsocj1vJiZvWzBdKSYmKHQ9dC5zbGljZShyLmxlbmd0aCkpfWlmKHkpdHJ5e249KG5ldyBqKS5wYXJzZUZyb21TdHJpbmcodCxcInRleHQvaHRtbFwiKX1jYXRjaChlKXt9aWYoZyYmZShpZSxbXCJ0aXRsZVwiXSksIW58fCFuLmRvY3VtZW50RWxlbWVudCl7dmFyIGk9KG49Vy5jcmVhdGVIVE1MRG9jdW1lbnQoXCJcIikpLmJvZHk7aS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGkucGFyZW50Tm9kZS5maXJzdEVsZW1lbnRDaGlsZCksaS5vdXRlckhUTUw9dH1yZXR1cm4gciYmbi5ib2R5Lmluc2VydEJlZm9yZSh2LmNyZWF0ZVRleHROb2RlKHIpLG4uYm9keS5jaGlsZE5vZGVzWzBdfHxudWxsKSxHLmNhbGwobixmZT9cImh0bWxcIjpcImJvZHlcIilbMF19O2QuaXNTdXBwb3J0ZWQmJihmdW5jdGlvbigpe3RyeXtNZSgnPHN2Zz48cD48c3R5bGU+PGltZyBzcmM9XCI8L3N0eWxlPjxpbWcgc3JjPXggb25lcnJvcj1hbGVydCgxKS8vXCI+JykucXVlcnlTZWxlY3RvcihcInN2ZyBpbWdcIikmJih5PSEwKX1jYXRjaChlKXt9fSgpLGZ1bmN0aW9uKCl7dHJ5e01lKFwiPHgvPjx0aXRsZT4mbHQ7L3RpdGxlJmd0OyZsdDtpbWcmZ3Q7XCIpLnF1ZXJ5U2VsZWN0b3IoXCJ0aXRsZVwiKS5pbm5lckhUTUwubWF0Y2goLzxcXC90aXRsZS8pJiYoZz0hMCl9Y2F0Y2goZSl7fX0oKSk7dmFyIF9lPWZ1bmN0aW9uKGUpe3JldHVybiBCLmNhbGwoZS5vd25lckRvY3VtZW50fHxlLGUsQy5TSE9XX0VMRU1FTlR8Qy5TSE9XX0NPTU1FTlR8Qy5TSE9XX1RFWFQsZnVuY3Rpb24oKXtyZXR1cm4gQy5GSUxURVJfQUNDRVBUfSwhMSl9LERlPWZ1bmN0aW9uKGUpe3JldHVybiEoZSBpbnN0YW5jZW9mIEh8fGUgaW5zdGFuY2VvZiBJKSYmIShcInN0cmluZ1wiPT10eXBlb2YgZS5ub2RlTmFtZSYmXCJzdHJpbmdcIj09dHlwZW9mIGUudGV4dENvbnRlbnQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGUucmVtb3ZlQ2hpbGQmJmUuYXR0cmlidXRlcyBpbnN0YW5jZW9mIEYmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGUucmVtb3ZlQXR0cmlidXRlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBlLnNldEF0dHJpYnV0ZSl9LFJlPWZ1bmN0aW9uKGUpe3JldHVyblwib2JqZWN0XCI9PT0odm9pZCAwPT09Uj9cInVuZGVmaW5lZFwiOncoUikpP2UgaW5zdGFuY2VvZiBSOmUmJlwib2JqZWN0XCI9PT0odm9pZCAwPT09ZT9cInVuZGVmaW5lZFwiOncoZSkpJiZcIm51bWJlclwiPT10eXBlb2YgZS5ub2RlVHlwZSYmXCJzdHJpbmdcIj09dHlwZW9mIGUubm9kZU5hbWV9LENlPWZ1bmN0aW9uKGUsdCxuKXtZW2VdJiZZW2VdLmZvckVhY2goZnVuY3Rpb24oZSl7ZS5jYWxsKGQsdCxuLGtlKX0pfSx6ZT1mdW5jdGlvbihlKXt2YXIgdD12b2lkIDA7aWYoQ2UoXCJiZWZvcmVTYW5pdGl6ZUVsZW1lbnRzXCIsZSxudWxsKSxEZShlKSlyZXR1cm4gT2UoZSksITA7dmFyIG49ZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO2lmKENlKFwidXBvblNhbml0aXplRWxlbWVudFwiLGUse3RhZ05hbWU6bixhbGxvd2VkVGFnczp0ZX0pLCF0ZVtuXXx8aWVbbl0pe2lmKGJlJiYheGVbbl0mJlwiZnVuY3Rpb25cIj09dHlwZW9mIGUuaW5zZXJ0QWRqYWNlbnRIVE1MKXRyeXtlLmluc2VydEFkamFjZW50SFRNTChcIkFmdGVyRW5kXCIsZS5pbm5lckhUTUwpfWNhdGNoKGUpe31yZXR1cm4gT2UoZSksITB9cmV0dXJuIWRlfHxlLmZpcnN0RWxlbWVudENoaWxkfHxlLmNvbnRlbnQmJmUuY29udGVudC5maXJzdEVsZW1lbnRDaGlsZHx8IS88L2cudGVzdChlLnRleHRDb250ZW50KXx8KGQucmVtb3ZlZC5wdXNoKHtlbGVtZW50OmUuY2xvbmVOb2RlKCl9KSxlLmlubmVySFRNTD9lLmlubmVySFRNTD1lLmlubmVySFRNTC5yZXBsYWNlKC88L2csXCImbHQ7XCIpOmUuaW5uZXJIVE1MPWUudGV4dENvbnRlbnQucmVwbGFjZSgvPC9nLFwiJmx0O1wiKSksdWUmJjM9PT1lLm5vZGVUeXBlJiYodD0odD0odD1lLnRleHRDb250ZW50KS5yZXBsYWNlKEssXCIgXCIpKS5yZXBsYWNlKFgsXCIgXCIpLGUudGV4dENvbnRlbnQhPT10JiYoZC5yZW1vdmVkLnB1c2goe2VsZW1lbnQ6ZS5jbG9uZU5vZGUoKX0pLGUudGV4dENvbnRlbnQ9dCkpLENlKFwiYWZ0ZXJTYW5pdGl6ZUVsZW1lbnRzXCIsZSxudWxsKSwhMX0sRmU9ZnVuY3Rpb24oZSx0LG4pe2lmKHZlJiYoXCJpZFwiPT09dHx8XCJuYW1lXCI9PT10KSYmKG4gaW4gdnx8biBpbiB3ZSkpcmV0dXJuITE7aWYodWUmJihuPShuPW4ucmVwbGFjZShLLFwiIFwiKSkucmVwbGFjZShYLFwiIFwiKSksc2UmJiQudGVzdCh0KSk7ZWxzZSBpZihsZSYmSi50ZXN0KHQpKTtlbHNle2lmKCFyZVt0XXx8YWVbdF0pcmV0dXJuITE7aWYoTGVbdF0pO2Vsc2UgaWYoZWUudGVzdChuLnJlcGxhY2UoWixcIlwiKSkpO2Vsc2UgaWYoXCJzcmNcIiE9PXQmJlwieGxpbms6aHJlZlwiIT09dHx8XCJzY3JpcHRcIj09PWV8fDAhPT1uLmluZGV4T2YoXCJkYXRhOlwiKXx8IVNlW2VdKXtpZihjZSYmIVEudGVzdChuLnJlcGxhY2UoWixcIlwiKSkpO2Vsc2UgaWYobilyZXR1cm4hMX1lbHNlO31yZXR1cm4hMH0sSGU9ZnVuY3Rpb24oZSl7dmFyIHQ9dm9pZCAwLG49dm9pZCAwLHI9dm9pZCAwLG89dm9pZCAwLGk9dm9pZCAwO0NlKFwiYmVmb3JlU2FuaXRpemVBdHRyaWJ1dGVzXCIsZSxudWxsKTt2YXIgYT1lLmF0dHJpYnV0ZXM7aWYoYSl7dmFyIGw9e2F0dHJOYW1lOlwiXCIsYXR0clZhbHVlOlwiXCIsa2VlcEF0dHI6ITAsYWxsb3dlZEF0dHJpYnV0ZXM6cmV9O2ZvcihpPWEubGVuZ3RoO2ktLTspe3ZhciBzPXQ9YVtpXSxjPXMubmFtZSx1PXMubmFtZXNwYWNlVVJJO2lmKG49dC52YWx1ZS50cmltKCkscj1jLnRvTG93ZXJDYXNlKCksbC5hdHRyTmFtZT1yLGwuYXR0clZhbHVlPW4sbC5rZWVwQXR0cj0hMCxDZShcInVwb25TYW5pdGl6ZUF0dHJpYnV0ZVwiLGUsbCksbj1sLmF0dHJWYWx1ZSxcIm5hbWVcIj09PXImJlwiSU1HXCI9PT1lLm5vZGVOYW1lJiZhLmlkKW89YS5pZCxhPUUoTyxhLFtdKSxOZShcImlkXCIsZSksTmUoYyxlKSxhLmluZGV4T2Yobyk+aSYmZS5zZXRBdHRyaWJ1dGUoXCJpZFwiLG8udmFsdWUpO2Vsc2V7aWYoXCJJTlBVVFwiPT09ZS5ub2RlTmFtZSYmXCJ0eXBlXCI9PT1yJiZcImZpbGVcIj09PW4mJihyZVtyXXx8IWFlW3JdKSljb250aW51ZTtcImlkXCI9PT1jJiZlLnNldEF0dHJpYnV0ZShjLFwiXCIpLE5lKGMsZSl9aWYobC5rZWVwQXR0cil7dmFyIGY9ZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO2lmKEZlKGYscixuKSl0cnl7dT9lLnNldEF0dHJpYnV0ZU5TKHUsYyxuKTplLnNldEF0dHJpYnV0ZShjLG4pLGQucmVtb3ZlZC5wb3AoKX1jYXRjaChlKXt9fX1DZShcImFmdGVyU2FuaXRpemVBdHRyaWJ1dGVzXCIsZSxudWxsKX19LEllPWZ1bmN0aW9uIGUodCl7dmFyIG49dm9pZCAwLHI9X2UodCk7Zm9yKENlKFwiYmVmb3JlU2FuaXRpemVTaGFkb3dET01cIix0LG51bGwpO249ci5uZXh0Tm9kZSgpOylDZShcInVwb25TYW5pdGl6ZVNoYWRvd05vZGVcIixuLG51bGwpLHplKG4pfHwobi5jb250ZW50IGluc3RhbmNlb2YgXyYmZShuLmNvbnRlbnQpLEhlKG4pKTtDZShcImFmdGVyU2FuaXRpemVTaGFkb3dET01cIix0LG51bGwpfTtyZXR1cm4gZC5zYW5pdGl6ZT1mdW5jdGlvbihlLHQpe3ZhciBuPXZvaWQgMCxyPXZvaWQgMCxpPXZvaWQgMCxhPXZvaWQgMCxsPXZvaWQgMDtpZihlfHwoZT1cIlxceDNjIS0tXFx4M2VcIiksXCJzdHJpbmdcIiE9dHlwZW9mIGUmJiFSZShlKSl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgZS50b1N0cmluZyl0aHJvdyBuZXcgVHlwZUVycm9yKFwidG9TdHJpbmcgaXMgbm90IGEgZnVuY3Rpb25cIik7aWYoXCJzdHJpbmdcIiE9dHlwZW9mKGU9ZS50b1N0cmluZygpKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiZGlydHkgaXMgbm90IGEgc3RyaW5nLCBhYm9ydGluZ1wiKX1pZighZC5pc1N1cHBvcnRlZCl7aWYoXCJvYmplY3RcIj09PXcoby50b1N0YXRpY0hUTUwpfHxcImZ1bmN0aW9uXCI9PXR5cGVvZiBvLnRvU3RhdGljSFRNTCl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpcmV0dXJuIG8udG9TdGF0aWNIVE1MKGUpO2lmKFJlKGUpKXJldHVybiBvLnRvU3RhdGljSFRNTChlLm91dGVySFRNTCl9cmV0dXJuIGV9aWYobWV8fEVlKHQpLGQucmVtb3ZlZD1bXSxUZSk7ZWxzZSBpZihlIGluc3RhbmNlb2YgUikxPT09KHI9KG49TWUoXCJcXHgzYyEtLVxceDNlXCIpKS5vd25lckRvY3VtZW50LmltcG9ydE5vZGUoZSwhMCkpLm5vZGVUeXBlJiZcIkJPRFlcIj09PXIubm9kZU5hbWU/bj1yOm4uYXBwZW5kQ2hpbGQocik7ZWxzZXtpZighaGUmJiFmZSYmLTE9PT1lLmluZGV4T2YoXCI8XCIpKXJldHVybiBlO2lmKCEobj1NZShlKSkpcmV0dXJuIGhlP251bGw6XCJcIn1uJiZwZSYmT2Uobi5maXJzdENoaWxkKTtmb3IodmFyIHM9X2UoVGU/ZTpuKTtpPXMubmV4dE5vZGUoKTspMz09PWkubm9kZVR5cGUmJmk9PT1hfHx6ZShpKXx8KGkuY29udGVudCBpbnN0YW5jZW9mIF8mJkllKGkuY29udGVudCksSGUoaSksYT1pKTtpZihUZSlyZXR1cm4gZTtpZihoZSl7aWYoeWUpZm9yKGw9cS5jYWxsKG4ub3duZXJEb2N1bWVudCk7bi5maXJzdENoaWxkOylsLmFwcGVuZENoaWxkKG4uZmlyc3RDaGlsZCk7ZWxzZSBsPW47cmV0dXJuIGdlJiYobD1WLmNhbGwoaCxsLCEwKSksbH1yZXR1cm4gZmU/bi5vdXRlckhUTUw6bi5pbm5lckhUTUx9LGQuc2V0Q29uZmlnPWZ1bmN0aW9uKGUpe0VlKGUpLG1lPSEwfSxkLmNsZWFyQ29uZmlnPWZ1bmN0aW9uKCl7a2U9bnVsbCxtZT0hMX0sZC5pc1ZhbGlkQXR0cmlidXRlPWZ1bmN0aW9uKGUsdCxuKXtrZXx8RWUoe30pO3ZhciByPWUudG9Mb3dlckNhc2UoKSxvPXQudG9Mb3dlckNhc2UoKTtyZXR1cm4gRmUocixvLG4pfSxkLmFkZEhvb2s9ZnVuY3Rpb24oZSx0KXtcImZ1bmN0aW9uXCI9PXR5cGVvZiB0JiYoWVtlXT1ZW2VdfHxbXSxZW2VdLnB1c2godCkpfSxkLnJlbW92ZUhvb2s9ZnVuY3Rpb24oZSl7WVtlXSYmWVtlXS5wb3AoKX0sZC5yZW1vdmVIb29rcz1mdW5jdGlvbihlKXtZW2VdJiYoWVtlXT1bXSl9LGQucmVtb3ZlQWxsSG9va3M9ZnVuY3Rpb24oKXtZPXt9fSxkfXZhciBvPU9iamVjdC5mcmVlemV8fGZ1bmN0aW9uKGUpe3JldHVybiBlfSxpPW8oW1wiYVwiLFwiYWJiclwiLFwiYWNyb255bVwiLFwiYWRkcmVzc1wiLFwiYXJlYVwiLFwiYXJ0aWNsZVwiLFwiYXNpZGVcIixcImF1ZGlvXCIsXCJiXCIsXCJiZGlcIixcImJkb1wiLFwiYmlnXCIsXCJibGlua1wiLFwiYmxvY2txdW90ZVwiLFwiYm9keVwiLFwiYnJcIixcImJ1dHRvblwiLFwiY2FudmFzXCIsXCJjYXB0aW9uXCIsXCJjZW50ZXJcIixcImNpdGVcIixcImNvZGVcIixcImNvbFwiLFwiY29sZ3JvdXBcIixcImNvbnRlbnRcIixcImRhdGFcIixcImRhdGFsaXN0XCIsXCJkZFwiLFwiZGVjb3JhdG9yXCIsXCJkZWxcIixcImRldGFpbHNcIixcImRmblwiLFwiZGlyXCIsXCJkaXZcIixcImRsXCIsXCJkdFwiLFwiZWxlbWVudFwiLFwiZW1cIixcImZpZWxkc2V0XCIsXCJmaWdjYXB0aW9uXCIsXCJmaWd1cmVcIixcImZvbnRcIixcImZvb3RlclwiLFwiZm9ybVwiLFwiaDFcIixcImgyXCIsXCJoM1wiLFwiaDRcIixcImg1XCIsXCJoNlwiLFwiaGVhZFwiLFwiaGVhZGVyXCIsXCJoZ3JvdXBcIixcImhyXCIsXCJodG1sXCIsXCJpXCIsXCJpbWdcIixcImlucHV0XCIsXCJpbnNcIixcImtiZFwiLFwibGFiZWxcIixcImxlZ2VuZFwiLFwibGlcIixcIm1haW5cIixcIm1hcFwiLFwibWFya1wiLFwibWFycXVlZVwiLFwibWVudVwiLFwibWVudWl0ZW1cIixcIm1ldGVyXCIsXCJuYXZcIixcIm5vYnJcIixcIm9sXCIsXCJvcHRncm91cFwiLFwib3B0aW9uXCIsXCJvdXRwdXRcIixcInBcIixcInByZVwiLFwicHJvZ3Jlc3NcIixcInFcIixcInJwXCIsXCJydFwiLFwicnVieVwiLFwic1wiLFwic2FtcFwiLFwic2VjdGlvblwiLFwic2VsZWN0XCIsXCJzaGFkb3dcIixcInNtYWxsXCIsXCJzb3VyY2VcIixcInNwYWNlclwiLFwic3BhblwiLFwic3RyaWtlXCIsXCJzdHJvbmdcIixcInN0eWxlXCIsXCJzdWJcIixcInN1bW1hcnlcIixcInN1cFwiLFwidGFibGVcIixcInRib2R5XCIsXCJ0ZFwiLFwidGVtcGxhdGVcIixcInRleHRhcmVhXCIsXCJ0Zm9vdFwiLFwidGhcIixcInRoZWFkXCIsXCJ0aW1lXCIsXCJ0clwiLFwidHJhY2tcIixcInR0XCIsXCJ1XCIsXCJ1bFwiLFwidmFyXCIsXCJ2aWRlb1wiLFwid2JyXCJdKSxhPW8oW1wic3ZnXCIsXCJhXCIsXCJhbHRnbHlwaFwiLFwiYWx0Z2x5cGhkZWZcIixcImFsdGdseXBoaXRlbVwiLFwiYW5pbWF0ZWNvbG9yXCIsXCJhbmltYXRlbW90aW9uXCIsXCJhbmltYXRldHJhbnNmb3JtXCIsXCJhdWRpb1wiLFwiY2FudmFzXCIsXCJjaXJjbGVcIixcImNsaXBwYXRoXCIsXCJkZWZzXCIsXCJkZXNjXCIsXCJlbGxpcHNlXCIsXCJmaWx0ZXJcIixcImZvbnRcIixcImdcIixcImdseXBoXCIsXCJnbHlwaHJlZlwiLFwiaGtlcm5cIixcImltYWdlXCIsXCJsaW5lXCIsXCJsaW5lYXJncmFkaWVudFwiLFwibWFya2VyXCIsXCJtYXNrXCIsXCJtZXRhZGF0YVwiLFwibXBhdGhcIixcInBhdGhcIixcInBhdHRlcm5cIixcInBvbHlnb25cIixcInBvbHlsaW5lXCIsXCJyYWRpYWxncmFkaWVudFwiLFwicmVjdFwiLFwic3RvcFwiLFwic3R5bGVcIixcInN3aXRjaFwiLFwic3ltYm9sXCIsXCJ0ZXh0XCIsXCJ0ZXh0cGF0aFwiLFwidGl0bGVcIixcInRyZWZcIixcInRzcGFuXCIsXCJ2aWRlb1wiLFwidmlld1wiLFwidmtlcm5cIl0pLGw9byhbXCJmZUJsZW5kXCIsXCJmZUNvbG9yTWF0cml4XCIsXCJmZUNvbXBvbmVudFRyYW5zZmVyXCIsXCJmZUNvbXBvc2l0ZVwiLFwiZmVDb252b2x2ZU1hdHJpeFwiLFwiZmVEaWZmdXNlTGlnaHRpbmdcIixcImZlRGlzcGxhY2VtZW50TWFwXCIsXCJmZURpc3RhbnRMaWdodFwiLFwiZmVGbG9vZFwiLFwiZmVGdW5jQVwiLFwiZmVGdW5jQlwiLFwiZmVGdW5jR1wiLFwiZmVGdW5jUlwiLFwiZmVHYXVzc2lhbkJsdXJcIixcImZlTWVyZ2VcIixcImZlTWVyZ2VOb2RlXCIsXCJmZU1vcnBob2xvZ3lcIixcImZlT2Zmc2V0XCIsXCJmZVBvaW50TGlnaHRcIixcImZlU3BlY3VsYXJMaWdodGluZ1wiLFwiZmVTcG90TGlnaHRcIixcImZlVGlsZVwiLFwiZmVUdXJidWxlbmNlXCJdKSxzPW8oW1wibWF0aFwiLFwibWVuY2xvc2VcIixcIm1lcnJvclwiLFwibWZlbmNlZFwiLFwibWZyYWNcIixcIm1nbHlwaFwiLFwibWlcIixcIm1sYWJlbGVkdHJcIixcIm1tdWxpc2NyaXB0c1wiLFwibW5cIixcIm1vXCIsXCJtb3ZlclwiLFwibXBhZGRlZFwiLFwibXBoYW50b21cIixcIm1yb290XCIsXCJtcm93XCIsXCJtc1wiLFwibXBzcGFjZVwiLFwibXNxcnRcIixcIm15c3R5bGVcIixcIm1zdWJcIixcIm1zdXBcIixcIm1zdWJzdXBcIixcIm10YWJsZVwiLFwibXRkXCIsXCJtdGV4dFwiLFwibXRyXCIsXCJtdW5kZXJcIixcIm11bmRlcm92ZXJcIl0pLGM9byhbXCIjdGV4dFwiXSksZD1PYmplY3QuZnJlZXplfHxmdW5jdGlvbihlKXtyZXR1cm4gZX0sdT1kKFtcImFjY2VwdFwiLFwiYWN0aW9uXCIsXCJhbGlnblwiLFwiYWx0XCIsXCJhdXRvY29tcGxldGVcIixcImJhY2tncm91bmRcIixcImJnY29sb3JcIixcImJvcmRlclwiLFwiY2VsbHBhZGRpbmdcIixcImNlbGxzcGFjaW5nXCIsXCJjaGVja2VkXCIsXCJjaXRlXCIsXCJjbGFzc1wiLFwiY2xlYXJcIixcImNvbG9yXCIsXCJjb2xzXCIsXCJjb2xzcGFuXCIsXCJjb29yZHNcIixcImNyb3Nzb3JpZ2luXCIsXCJkYXRldGltZVwiLFwiZGVmYXVsdFwiLFwiZGlyXCIsXCJkaXNhYmxlZFwiLFwiZG93bmxvYWRcIixcImVuY3R5cGVcIixcImZhY2VcIixcImZvclwiLFwiaGVhZGVyc1wiLFwiaGVpZ2h0XCIsXCJoaWRkZW5cIixcImhpZ2hcIixcImhyZWZcIixcImhyZWZsYW5nXCIsXCJpZFwiLFwiaW50ZWdyaXR5XCIsXCJpc21hcFwiLFwibGFiZWxcIixcImxhbmdcIixcImxpc3RcIixcImxvb3BcIixcImxvd1wiLFwibWF4XCIsXCJtYXhsZW5ndGhcIixcIm1lZGlhXCIsXCJtZXRob2RcIixcIm1pblwiLFwibXVsdGlwbGVcIixcIm5hbWVcIixcIm5vc2hhZGVcIixcIm5vdmFsaWRhdGVcIixcIm5vd3JhcFwiLFwib3BlblwiLFwib3B0aW11bVwiLFwicGF0dGVyblwiLFwicGxhY2Vob2xkZXJcIixcInBvc3RlclwiLFwicHJlbG9hZFwiLFwicHViZGF0ZVwiLFwicmFkaW9ncm91cFwiLFwicmVhZG9ubHlcIixcInJlbFwiLFwicmVxdWlyZWRcIixcInJldlwiLFwicmV2ZXJzZWRcIixcInJvbGVcIixcInJvd3NcIixcInJvd3NwYW5cIixcInNwZWxsY2hlY2tcIixcInNjb3BlXCIsXCJzZWxlY3RlZFwiLFwic2hhcGVcIixcInNpemVcIixcInNpemVzXCIsXCJzcGFuXCIsXCJzcmNsYW5nXCIsXCJzdGFydFwiLFwic3JjXCIsXCJzcmNzZXRcIixcInN0ZXBcIixcInN0eWxlXCIsXCJzdW1tYXJ5XCIsXCJ0YWJpbmRleFwiLFwidGl0bGVcIixcInR5cGVcIixcInVzZW1hcFwiLFwidmFsaWduXCIsXCJ2YWx1ZVwiLFwid2lkdGhcIixcInhtbG5zXCJdKSxmPWQoW1wiYWNjZW50LWhlaWdodFwiLFwiYWNjdW11bGF0ZVwiLFwiYWRkaXRpdml2ZVwiLFwiYWxpZ25tZW50LWJhc2VsaW5lXCIsXCJhc2NlbnRcIixcImF0dHJpYnV0ZW5hbWVcIixcImF0dHJpYnV0ZXR5cGVcIixcImF6aW11dGhcIixcImJhc2VmcmVxdWVuY3lcIixcImJhc2VsaW5lLXNoaWZ0XCIsXCJiZWdpblwiLFwiYmlhc1wiLFwiYnlcIixcImNsYXNzXCIsXCJjbGlwXCIsXCJjbGlwLXBhdGhcIixcImNsaXAtcnVsZVwiLFwiY29sb3JcIixcImNvbG9yLWludGVycG9sYXRpb25cIixcImNvbG9yLWludGVycG9sYXRpb24tZmlsdGVyc1wiLFwiY29sb3ItcHJvZmlsZVwiLFwiY29sb3ItcmVuZGVyaW5nXCIsXCJjeFwiLFwiY3lcIixcImRcIixcImR4XCIsXCJkeVwiLFwiZGlmZnVzZWNvbnN0YW50XCIsXCJkaXJlY3Rpb25cIixcImRpc3BsYXlcIixcImRpdmlzb3JcIixcImR1clwiLFwiZWRnZW1vZGVcIixcImVsZXZhdGlvblwiLFwiZW5kXCIsXCJmaWxsXCIsXCJmaWxsLW9wYWNpdHlcIixcImZpbGwtcnVsZVwiLFwiZmlsdGVyXCIsXCJmbG9vZC1jb2xvclwiLFwiZmxvb2Qtb3BhY2l0eVwiLFwiZm9udC1mYW1pbHlcIixcImZvbnQtc2l6ZVwiLFwiZm9udC1zaXplLWFkanVzdFwiLFwiZm9udC1zdHJldGNoXCIsXCJmb250LXN0eWxlXCIsXCJmb250LXZhcmlhbnRcIixcImZvbnQtd2VpZ2h0XCIsXCJmeFwiLFwiZnlcIixcImcxXCIsXCJnMlwiLFwiZ2x5cGgtbmFtZVwiLFwiZ2x5cGhyZWZcIixcImdyYWRpZW50dW5pdHNcIixcImdyYWRpZW50dHJhbnNmb3JtXCIsXCJoZWlnaHRcIixcImhyZWZcIixcImlkXCIsXCJpbWFnZS1yZW5kZXJpbmdcIixcImluXCIsXCJpbjJcIixcImtcIixcImsxXCIsXCJrMlwiLFwiazNcIixcIms0XCIsXCJrZXJuaW5nXCIsXCJrZXlwb2ludHNcIixcImtleXNwbGluZXNcIixcImtleXRpbWVzXCIsXCJsYW5nXCIsXCJsZW5ndGhhZGp1c3RcIixcImxldHRlci1zcGFjaW5nXCIsXCJrZXJuZWxtYXRyaXhcIixcImtlcm5lbHVuaXRsZW5ndGhcIixcImxpZ2h0aW5nLWNvbG9yXCIsXCJsb2NhbFwiLFwibWFya2VyLWVuZFwiLFwibWFya2VyLW1pZFwiLFwibWFya2VyLXN0YXJ0XCIsXCJtYXJrZXJoZWlnaHRcIixcIm1hcmtlcnVuaXRzXCIsXCJtYXJrZXJ3aWR0aFwiLFwibWFza2NvbnRlbnR1bml0c1wiLFwibWFza3VuaXRzXCIsXCJtYXhcIixcIm1hc2tcIixcIm1lZGlhXCIsXCJtZXRob2RcIixcIm1vZGVcIixcIm1pblwiLFwibmFtZVwiLFwibnVtb2N0YXZlc1wiLFwib2Zmc2V0XCIsXCJvcGVyYXRvclwiLFwib3BhY2l0eVwiLFwib3JkZXJcIixcIm9yaWVudFwiLFwib3JpZW50YXRpb25cIixcIm9yaWdpblwiLFwib3ZlcmZsb3dcIixcInBhaW50LW9yZGVyXCIsXCJwYXRoXCIsXCJwYXRobGVuZ3RoXCIsXCJwYXR0ZXJuY29udGVudHVuaXRzXCIsXCJwYXR0ZXJudHJhbnNmb3JtXCIsXCJwYXR0ZXJudW5pdHNcIixcInBvaW50c1wiLFwicHJlc2VydmVhbHBoYVwiLFwicHJlc2VydmVhc3BlY3RyYXRpb1wiLFwiclwiLFwicnhcIixcInJ5XCIsXCJyYWRpdXNcIixcInJlZnhcIixcInJlZnlcIixcInJlcGVhdGNvdW50XCIsXCJyZXBlYXRkdXJcIixcInJlc3RhcnRcIixcInJlc3VsdFwiLFwicm90YXRlXCIsXCJzY2FsZVwiLFwic2VlZFwiLFwic2hhcGUtcmVuZGVyaW5nXCIsXCJzcGVjdWxhcmNvbnN0YW50XCIsXCJzcGVjdWxhcmV4cG9uZW50XCIsXCJzcHJlYWRtZXRob2RcIixcInN0ZGRldmlhdGlvblwiLFwic3RpdGNodGlsZXNcIixcInN0b3AtY29sb3JcIixcInN0b3Atb3BhY2l0eVwiLFwic3Ryb2tlLWRhc2hhcnJheVwiLFwic3Ryb2tlLWRhc2hvZmZzZXRcIixcInN0cm9rZS1saW5lY2FwXCIsXCJzdHJva2UtbGluZWpvaW5cIixcInN0cm9rZS1taXRlcmxpbWl0XCIsXCJzdHJva2Utb3BhY2l0eVwiLFwic3Ryb2tlXCIsXCJzdHJva2Utd2lkdGhcIixcInN0eWxlXCIsXCJzdXJmYWNlc2NhbGVcIixcInRhYmluZGV4XCIsXCJ0YXJnZXR4XCIsXCJ0YXJnZXR5XCIsXCJ0cmFuc2Zvcm1cIixcInRleHQtYW5jaG9yXCIsXCJ0ZXh0LWRlY29yYXRpb25cIixcInRleHQtcmVuZGVyaW5nXCIsXCJ0ZXh0bGVuZ3RoXCIsXCJ0eXBlXCIsXCJ1MVwiLFwidTJcIixcInVuaWNvZGVcIixcInZhbHVlc1wiLFwidmlld2JveFwiLFwidmlzaWJpbGl0eVwiLFwidmVydC1hZHYteVwiLFwidmVydC1vcmlnaW4teFwiLFwidmVydC1vcmlnaW4teVwiLFwid2lkdGhcIixcIndvcmQtc3BhY2luZ1wiLFwid3JhcFwiLFwid3JpdGluZy1tb2RlXCIsXCJ4Y2hhbm5lbHNlbGVjdG9yXCIsXCJ5Y2hhbm5lbHNlbGVjdG9yXCIsXCJ4XCIsXCJ4MVwiLFwieDJcIixcInhtbG5zXCIsXCJ5XCIsXCJ5MVwiLFwieTJcIixcInpcIixcInpvb21hbmRwYW5cIl0pLG09ZChbXCJhY2NlbnRcIixcImFjY2VudHVuZGVyXCIsXCJhbGlnblwiLFwiYmV2ZWxsZWRcIixcImNsb3NlXCIsXCJjb2x1bW5zYWxpZ25cIixcImNvbHVtbmxpbmVzXCIsXCJjb2x1bW5zcGFuXCIsXCJkZW5vbWFsaWduXCIsXCJkZXB0aFwiLFwiZGlyXCIsXCJkaXNwbGF5XCIsXCJkaXNwbGF5c3R5bGVcIixcImZlbmNlXCIsXCJmcmFtZVwiLFwiaGVpZ2h0XCIsXCJocmVmXCIsXCJpZFwiLFwibGFyZ2VvcFwiLFwibGVuZ3RoXCIsXCJsaW5ldGhpY2tuZXNzXCIsXCJsc3BhY2VcIixcImxxdW90ZVwiLFwibWF0aGJhY2tncm91bmRcIixcIm1hdGhjb2xvclwiLFwibWF0aHNpemVcIixcIm1hdGh2YXJpYW50XCIsXCJtYXhzaXplXCIsXCJtaW5zaXplXCIsXCJtb3ZhYmxlbGltaXRzXCIsXCJub3RhdGlvblwiLFwibnVtYWxpZ25cIixcIm9wZW5cIixcInJvd2FsaWduXCIsXCJyb3dsaW5lc1wiLFwicm93c3BhY2luZ1wiLFwicm93c3BhblwiLFwicnNwYWNlXCIsXCJycXVvdGVcIixcInNjcmlwdGxldmVsXCIsXCJzY3JpcHRtaW5zaXplXCIsXCJzY3JpcHRzaXplbXVsdGlwbGllclwiLFwic2VsZWN0aW9uXCIsXCJzZXBhcmF0b3JcIixcInNlcGFyYXRvcnNcIixcInN0cmV0Y2h5XCIsXCJzdWJzY3JpcHRzaGlmdFwiLFwic3Vwc2NyaXB0c2hpZnRcIixcInN5bW1ldHJpY1wiLFwidm9mZnNldFwiLFwid2lkdGhcIixcInhtbG5zXCJdKSxwPWQoW1wieGxpbms6aHJlZlwiLFwieG1sOmlkXCIsXCJ4bGluazp0aXRsZVwiLFwieG1sOnNwYWNlXCIsXCJ4bWxuczp4bGlua1wiXSksaD1PYmplY3QuaGFzT3duUHJvcGVydHkseT1PYmplY3Quc2V0UHJvdG90eXBlT2YsZz0oXCJ1bmRlZmluZWRcIiE9dHlwZW9mIFJlZmxlY3QmJlJlZmxlY3QpLmFwcGx5O2d8fChnPWZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gZS5hcHBseSh0LG4pfSk7dmFyIHY9T2JqZWN0LnNlYWx8fGZ1bmN0aW9uKGUpe3JldHVybiBlfSxiPXYoL1xce1xce1tcXHNcXFNdKnxbXFxzXFxTXSpcXH1cXH0vZ20pLFQ9digvPCVbXFxzXFxTXSp8W1xcc1xcU10qJT4vZ20pLEE9digvXmRhdGEtW1xcLVxcdy5cXHUwMEI3LVxcdUZGRkZdLykseD12KC9eYXJpYS1bXFwtXFx3XSskLyksUz12KC9eKD86KD86KD86ZnxodCl0cHM/fG1haWx0b3x0ZWx8Y2FsbHRvfGNpZHx4bXBwKTp8W15hLXpdfFthLXorLlxcLV0rKD86W15hLXorLlxcLTpdfCQpKS9pKSxMPXYoL14oPzpcXHcrc2NyaXB0fGRhdGEpOi9pKSxrPXYoL1tcXHUwMDAwLVxcdTAwMjBcXHUwMEEwXFx1MTY4MFxcdTE4MEVcXHUyMDAwLVxcdTIwMjlcXHUyMDVmXFx1MzAwMF0vZyksdz1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBlfSxFPShcInVuZGVmaW5lZFwiIT10eXBlb2YgUmVmbGVjdCYmUmVmbGVjdCkuYXBwbHksTz1BcnJheS5wcm90b3R5cGUuc2xpY2UsTj1PYmplY3QuZnJlZXplLE09ZnVuY3Rpb24oKXtyZXR1cm5cInVuZGVmaW5lZFwiPT10eXBlb2Ygd2luZG93P251bGw6d2luZG93fTtyZXR1cm4gRXx8KEU9ZnVuY3Rpb24oZSx0LG4pe3JldHVybiBlLmFwcGx5KHQsbil9KSxyKCl9KTsiLCIhZnVuY3Rpb24oZSx0KXtcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cyYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIG1vZHVsZT9tb2R1bGUuZXhwb3J0cz10KCk6XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZSh0KTplLm1vbWVudD10KCl9KHRoaXMsZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjt2YXIgZSxpO2Z1bmN0aW9uIGMoKXtyZXR1cm4gZS5hcHBseShudWxsLGFyZ3VtZW50cyl9ZnVuY3Rpb24gbyhlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIEFycmF5fHxcIltvYmplY3QgQXJyYXldXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSl9ZnVuY3Rpb24gdShlKXtyZXR1cm4gbnVsbCE9ZSYmXCJbb2JqZWN0IE9iamVjdF1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKX1mdW5jdGlvbiBsKGUpe3JldHVybiB2b2lkIDA9PT1lfWZ1bmN0aW9uIGgoZSl7cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIGV8fFwiW29iamVjdCBOdW1iZXJdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSl9ZnVuY3Rpb24gZChlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIERhdGV8fFwiW29iamVjdCBEYXRlXVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpfWZ1bmN0aW9uIGYoZSx0KXt2YXIgbixzPVtdO2ZvcihuPTA7bjxlLmxlbmd0aDsrK24pcy5wdXNoKHQoZVtuXSxuKSk7cmV0dXJuIHN9ZnVuY3Rpb24gbShlLHQpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSx0KX1mdW5jdGlvbiBfKGUsdCl7Zm9yKHZhciBuIGluIHQpbSh0LG4pJiYoZVtuXT10W25dKTtyZXR1cm4gbSh0LFwidG9TdHJpbmdcIikmJihlLnRvU3RyaW5nPXQudG9TdHJpbmcpLG0odCxcInZhbHVlT2ZcIikmJihlLnZhbHVlT2Y9dC52YWx1ZU9mKSxlfWZ1bmN0aW9uIHkoZSx0LG4scyl7cmV0dXJuIFR0KGUsdCxuLHMsITApLnV0YygpfWZ1bmN0aW9uIGcoZSl7cmV0dXJuIG51bGw9PWUuX3BmJiYoZS5fcGY9e2VtcHR5OiExLHVudXNlZFRva2VuczpbXSx1bnVzZWRJbnB1dDpbXSxvdmVyZmxvdzotMixjaGFyc0xlZnRPdmVyOjAsbnVsbElucHV0OiExLGludmFsaWRNb250aDpudWxsLGludmFsaWRGb3JtYXQ6ITEsdXNlckludmFsaWRhdGVkOiExLGlzbzohMSxwYXJzZWREYXRlUGFydHM6W10sbWVyaWRpZW06bnVsbCxyZmMyODIyOiExLHdlZWtkYXlNaXNtYXRjaDohMX0pLGUuX3BmfWZ1bmN0aW9uIHYoZSl7aWYobnVsbD09ZS5faXNWYWxpZCl7dmFyIHQ9ZyhlKSxuPWkuY2FsbCh0LnBhcnNlZERhdGVQYXJ0cyxmdW5jdGlvbihlKXtyZXR1cm4gbnVsbCE9ZX0pLHM9IWlzTmFOKGUuX2QuZ2V0VGltZSgpKSYmdC5vdmVyZmxvdzwwJiYhdC5lbXB0eSYmIXQuaW52YWxpZE1vbnRoJiYhdC5pbnZhbGlkV2Vla2RheSYmIXQud2Vla2RheU1pc21hdGNoJiYhdC5udWxsSW5wdXQmJiF0LmludmFsaWRGb3JtYXQmJiF0LnVzZXJJbnZhbGlkYXRlZCYmKCF0Lm1lcmlkaWVtfHx0Lm1lcmlkaWVtJiZuKTtpZihlLl9zdHJpY3QmJihzPXMmJjA9PT10LmNoYXJzTGVmdE92ZXImJjA9PT10LnVudXNlZFRva2Vucy5sZW5ndGgmJnZvaWQgMD09PXQuYmlnSG91ciksbnVsbCE9T2JqZWN0LmlzRnJvemVuJiZPYmplY3QuaXNGcm96ZW4oZSkpcmV0dXJuIHM7ZS5faXNWYWxpZD1zfXJldHVybiBlLl9pc1ZhbGlkfWZ1bmN0aW9uIHAoZSl7dmFyIHQ9eShOYU4pO3JldHVybiBudWxsIT1lP18oZyh0KSxlKTpnKHQpLnVzZXJJbnZhbGlkYXRlZD0hMCx0fWk9QXJyYXkucHJvdG90eXBlLnNvbWU/QXJyYXkucHJvdG90eXBlLnNvbWU6ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PU9iamVjdCh0aGlzKSxuPXQubGVuZ3RoPj4+MCxzPTA7czxuO3MrKylpZihzIGluIHQmJmUuY2FsbCh0aGlzLHRbc10scyx0KSlyZXR1cm4hMDtyZXR1cm4hMX07dmFyIHI9Yy5tb21lbnRQcm9wZXJ0aWVzPVtdO2Z1bmN0aW9uIHcoZSx0KXt2YXIgbixzLGk7aWYobCh0Ll9pc0FNb21lbnRPYmplY3QpfHwoZS5faXNBTW9tZW50T2JqZWN0PXQuX2lzQU1vbWVudE9iamVjdCksbCh0Ll9pKXx8KGUuX2k9dC5faSksbCh0Ll9mKXx8KGUuX2Y9dC5fZiksbCh0Ll9sKXx8KGUuX2w9dC5fbCksbCh0Ll9zdHJpY3QpfHwoZS5fc3RyaWN0PXQuX3N0cmljdCksbCh0Ll90em0pfHwoZS5fdHptPXQuX3R6bSksbCh0Ll9pc1VUQyl8fChlLl9pc1VUQz10Ll9pc1VUQyksbCh0Ll9vZmZzZXQpfHwoZS5fb2Zmc2V0PXQuX29mZnNldCksbCh0Ll9wZil8fChlLl9wZj1nKHQpKSxsKHQuX2xvY2FsZSl8fChlLl9sb2NhbGU9dC5fbG9jYWxlKSwwPHIubGVuZ3RoKWZvcihuPTA7bjxyLmxlbmd0aDtuKyspbChpPXRbcz1yW25dXSl8fChlW3NdPWkpO3JldHVybiBlfXZhciB0PSExO2Z1bmN0aW9uIE0oZSl7dyh0aGlzLGUpLHRoaXMuX2Q9bmV3IERhdGUobnVsbCE9ZS5fZD9lLl9kLmdldFRpbWUoKTpOYU4pLHRoaXMuaXNWYWxpZCgpfHwodGhpcy5fZD1uZXcgRGF0ZShOYU4pKSwhMT09PXQmJih0PSEwLGMudXBkYXRlT2Zmc2V0KHRoaXMpLHQ9ITEpfWZ1bmN0aW9uIGsoZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBNfHxudWxsIT1lJiZudWxsIT1lLl9pc0FNb21lbnRPYmplY3R9ZnVuY3Rpb24gUyhlKXtyZXR1cm4gZTwwP01hdGguY2VpbChlKXx8MDpNYXRoLmZsb29yKGUpfWZ1bmN0aW9uIEQoZSl7dmFyIHQ9K2Usbj0wO3JldHVybiAwIT09dCYmaXNGaW5pdGUodCkmJihuPVModCkpLG59ZnVuY3Rpb24gYShlLHQsbil7dmFyIHMsaT1NYXRoLm1pbihlLmxlbmd0aCx0Lmxlbmd0aCkscj1NYXRoLmFicyhlLmxlbmd0aC10Lmxlbmd0aCksYT0wO2ZvcihzPTA7czxpO3MrKykobiYmZVtzXSE9PXRbc118fCFuJiZEKGVbc10pIT09RCh0W3NdKSkmJmErKztyZXR1cm4gYStyfWZ1bmN0aW9uIFkoZSl7ITE9PT1jLnN1cHByZXNzRGVwcmVjYXRpb25XYXJuaW5ncyYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIGNvbnNvbGUmJmNvbnNvbGUud2FybiYmY29uc29sZS53YXJuKFwiRGVwcmVjYXRpb24gd2FybmluZzogXCIrZSl9ZnVuY3Rpb24gbihpLHIpe3ZhciBhPSEwO3JldHVybiBfKGZ1bmN0aW9uKCl7aWYobnVsbCE9Yy5kZXByZWNhdGlvbkhhbmRsZXImJmMuZGVwcmVjYXRpb25IYW5kbGVyKG51bGwsaSksYSl7Zm9yKHZhciBlLHQ9W10sbj0wO248YXJndW1lbnRzLmxlbmd0aDtuKyspe2lmKGU9XCJcIixcIm9iamVjdFwiPT10eXBlb2YgYXJndW1lbnRzW25dKXtmb3IodmFyIHMgaW4gZSs9XCJcXG5bXCIrbitcIl0gXCIsYXJndW1lbnRzWzBdKWUrPXMrXCI6IFwiK2FyZ3VtZW50c1swXVtzXStcIiwgXCI7ZT1lLnNsaWNlKDAsLTIpfWVsc2UgZT1hcmd1bWVudHNbbl07dC5wdXNoKGUpfVkoaStcIlxcbkFyZ3VtZW50czogXCIrQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwodCkuam9pbihcIlwiKStcIlxcblwiKyhuZXcgRXJyb3IpLnN0YWNrKSxhPSExfXJldHVybiByLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0scil9dmFyIHMsTz17fTtmdW5jdGlvbiBUKGUsdCl7bnVsbCE9Yy5kZXByZWNhdGlvbkhhbmRsZXImJmMuZGVwcmVjYXRpb25IYW5kbGVyKGUsdCksT1tlXXx8KFkodCksT1tlXT0hMCl9ZnVuY3Rpb24gYihlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIEZ1bmN0aW9ufHxcIltvYmplY3QgRnVuY3Rpb25dXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSl9ZnVuY3Rpb24geChlLHQpe3ZhciBuLHM9Xyh7fSxlKTtmb3IobiBpbiB0KW0odCxuKSYmKHUoZVtuXSkmJnUodFtuXSk/KHNbbl09e30sXyhzW25dLGVbbl0pLF8oc1tuXSx0W25dKSk6bnVsbCE9dFtuXT9zW25dPXRbbl06ZGVsZXRlIHNbbl0pO2ZvcihuIGluIGUpbShlLG4pJiYhbSh0LG4pJiZ1KGVbbl0pJiYoc1tuXT1fKHt9LHNbbl0pKTtyZXR1cm4gc31mdW5jdGlvbiBQKGUpe251bGwhPWUmJnRoaXMuc2V0KGUpfWMuc3VwcHJlc3NEZXByZWNhdGlvbldhcm5pbmdzPSExLGMuZGVwcmVjYXRpb25IYW5kbGVyPW51bGwscz1PYmplY3Qua2V5cz9PYmplY3Qua2V5czpmdW5jdGlvbihlKXt2YXIgdCxuPVtdO2Zvcih0IGluIGUpbShlLHQpJiZuLnB1c2godCk7cmV0dXJuIG59O3ZhciBXPXt9O2Z1bmN0aW9uIEMoZSx0KXt2YXIgbj1lLnRvTG93ZXJDYXNlKCk7V1tuXT1XW24rXCJzXCJdPVdbdF09ZX1mdW5jdGlvbiBIKGUpe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiBlP1dbZV18fFdbZS50b0xvd2VyQ2FzZSgpXTp2b2lkIDB9ZnVuY3Rpb24gUihlKXt2YXIgdCxuLHM9e307Zm9yKG4gaW4gZSltKGUsbikmJih0PUgobikpJiYoc1t0XT1lW25dKTtyZXR1cm4gc312YXIgVT17fTtmdW5jdGlvbiBGKGUsdCl7VVtlXT10fWZ1bmN0aW9uIEwoZSx0LG4pe3ZhciBzPVwiXCIrTWF0aC5hYnMoZSksaT10LXMubGVuZ3RoO3JldHVybigwPD1lP24/XCIrXCI6XCJcIjpcIi1cIikrTWF0aC5wb3coMTAsTWF0aC5tYXgoMCxpKSkudG9TdHJpbmcoKS5zdWJzdHIoMSkrc312YXIgTj0vKFxcW1teXFxbXSpcXF0pfChcXFxcKT8oW0hoXW1tKHNzKT98TW98TU0/TT9NP3xEb3xERERvfEREP0Q/RD98ZGRkP2Q/fGRvP3x3W298d10/fFdbb3xXXT98UW8/fFlZWVlZWXxZWVlZWXxZWVlZfFlZfGdnKGdnZz8pP3xHRyhHR0c/KT98ZXxFfGF8QXxoaD98SEg/fGtrP3xtbT98c3M/fFN7MSw5fXx4fFh8eno/fFpaP3wuKS9nLEc9LyhcXFtbXlxcW10qXFxdKXwoXFxcXCk/KExUU3xMVHxMTD9MP0w/fGx7MSw0fSkvZyxWPXt9LEU9e307ZnVuY3Rpb24gSShlLHQsbixzKXt2YXIgaT1zO1wic3RyaW5nXCI9PXR5cGVvZiBzJiYoaT1mdW5jdGlvbigpe3JldHVybiB0aGlzW3NdKCl9KSxlJiYoRVtlXT1pKSx0JiYoRVt0WzBdXT1mdW5jdGlvbigpe3JldHVybiBMKGkuYXBwbHkodGhpcyxhcmd1bWVudHMpLHRbMV0sdFsyXSl9KSxuJiYoRVtuXT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmxvY2FsZURhdGEoKS5vcmRpbmFsKGkuYXBwbHkodGhpcyxhcmd1bWVudHMpLGUpfSl9ZnVuY3Rpb24gQShlLHQpe3JldHVybiBlLmlzVmFsaWQoKT8odD1qKHQsZS5sb2NhbGVEYXRhKCkpLFZbdF09Vlt0XXx8ZnVuY3Rpb24ocyl7dmFyIGUsaSx0LHI9cy5tYXRjaChOKTtmb3IoZT0wLGk9ci5sZW5ndGg7ZTxpO2UrKylFW3JbZV1dP3JbZV09RVtyW2VdXTpyW2VdPSh0PXJbZV0pLm1hdGNoKC9cXFtbXFxzXFxTXS8pP3QucmVwbGFjZSgvXlxcW3xcXF0kL2csXCJcIik6dC5yZXBsYWNlKC9cXFxcL2csXCJcIik7cmV0dXJuIGZ1bmN0aW9uKGUpe3ZhciB0LG49XCJcIjtmb3IodD0wO3Q8aTt0Kyspbis9YihyW3RdKT9yW3RdLmNhbGwoZSxzKTpyW3RdO3JldHVybiBufX0odCksVlt0XShlKSk6ZS5sb2NhbGVEYXRhKCkuaW52YWxpZERhdGUoKX1mdW5jdGlvbiBqKGUsdCl7dmFyIG49NTtmdW5jdGlvbiBzKGUpe3JldHVybiB0LmxvbmdEYXRlRm9ybWF0KGUpfHxlfWZvcihHLmxhc3RJbmRleD0wOzA8PW4mJkcudGVzdChlKTspZT1lLnJlcGxhY2UoRyxzKSxHLmxhc3RJbmRleD0wLG4tPTE7cmV0dXJuIGV9dmFyIFo9L1xcZC8sej0vXFxkXFxkLywkPS9cXGR7M30vLHE9L1xcZHs0fS8sSj0vWystXT9cXGR7Nn0vLEI9L1xcZFxcZD8vLFE9L1xcZFxcZFxcZFxcZD8vLFg9L1xcZFxcZFxcZFxcZFxcZFxcZD8vLEs9L1xcZHsxLDN9LyxlZT0vXFxkezEsNH0vLHRlPS9bKy1dP1xcZHsxLDZ9LyxuZT0vXFxkKy8sc2U9L1srLV0/XFxkKy8saWU9L1p8WystXVxcZFxcZDo/XFxkXFxkL2dpLHJlPS9afFsrLV1cXGRcXGQoPzo6P1xcZFxcZCk/L2dpLGFlPS9bMC05XXswLDI1Nn1bJ2EtelxcdTAwQTAtXFx1MDVGRlxcdTA3MDAtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkYwN1xcdUZGMTAtXFx1RkZFRl17MSwyNTZ9fFtcXHUwNjAwLVxcdTA2RkZcXC9dezEsMjU2fShcXHMqP1tcXHUwNjAwLVxcdTA2RkZdezEsMjU2fSl7MSwyfS9pLG9lPXt9O2Z1bmN0aW9uIHVlKGUsbixzKXtvZVtlXT1iKG4pP246ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZSYmcz9zOm59fWZ1bmN0aW9uIGxlKGUsdCl7cmV0dXJuIG0ob2UsZSk/b2VbZV0odC5fc3RyaWN0LHQuX2xvY2FsZSk6bmV3IFJlZ0V4cChoZShlLnJlcGxhY2UoXCJcXFxcXCIsXCJcIikucmVwbGFjZSgvXFxcXChcXFspfFxcXFwoXFxdKXxcXFsoW15cXF1cXFtdKilcXF18XFxcXCguKS9nLGZ1bmN0aW9uKGUsdCxuLHMsaSl7cmV0dXJuIHR8fG58fHN8fGl9KSkpfWZ1bmN0aW9uIGhlKGUpe3JldHVybiBlLnJlcGxhY2UoL1stXFwvXFxcXF4kKis/LigpfFtcXF17fV0vZyxcIlxcXFwkJlwiKX12YXIgZGU9e307ZnVuY3Rpb24gY2UoZSxuKXt2YXIgdCxzPW47Zm9yKFwic3RyaW5nXCI9PXR5cGVvZiBlJiYoZT1bZV0pLGgobikmJihzPWZ1bmN0aW9uKGUsdCl7dFtuXT1EKGUpfSksdD0wO3Q8ZS5sZW5ndGg7dCsrKWRlW2VbdF1dPXN9ZnVuY3Rpb24gZmUoZSxpKXtjZShlLGZ1bmN0aW9uKGUsdCxuLHMpe24uX3c9bi5fd3x8e30saShlLG4uX3csbixzKX0pfXZhciBtZT0wLF9lPTEseWU9MixnZT0zLHZlPTQscGU9NSx3ZT02LE1lPTcsa2U9ODtmdW5jdGlvbiBTZShlKXtyZXR1cm4gRGUoZSk/MzY2OjM2NX1mdW5jdGlvbiBEZShlKXtyZXR1cm4gZSU0PT0wJiZlJTEwMCE9MHx8ZSU0MDA9PTB9SShcIllcIiwwLDAsZnVuY3Rpb24oKXt2YXIgZT10aGlzLnllYXIoKTtyZXR1cm4gZTw9OTk5OT9cIlwiK2U6XCIrXCIrZX0pLEkoMCxbXCJZWVwiLDJdLDAsZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy55ZWFyKCklMTAwfSksSSgwLFtcIllZWVlcIiw0XSwwLFwieWVhclwiKSxJKDAsW1wiWVlZWVlcIiw1XSwwLFwieWVhclwiKSxJKDAsW1wiWVlZWVlZXCIsNiwhMF0sMCxcInllYXJcIiksQyhcInllYXJcIixcInlcIiksRihcInllYXJcIiwxKSx1ZShcIllcIixzZSksdWUoXCJZWVwiLEIseiksdWUoXCJZWVlZXCIsZWUscSksdWUoXCJZWVlZWVwiLHRlLEopLHVlKFwiWVlZWVlZXCIsdGUsSiksY2UoW1wiWVlZWVlcIixcIllZWVlZWVwiXSxtZSksY2UoXCJZWVlZXCIsZnVuY3Rpb24oZSx0KXt0W21lXT0yPT09ZS5sZW5ndGg/Yy5wYXJzZVR3b0RpZ2l0WWVhcihlKTpEKGUpfSksY2UoXCJZWVwiLGZ1bmN0aW9uKGUsdCl7dFttZV09Yy5wYXJzZVR3b0RpZ2l0WWVhcihlKX0pLGNlKFwiWVwiLGZ1bmN0aW9uKGUsdCl7dFttZV09cGFyc2VJbnQoZSwxMCl9KSxjLnBhcnNlVHdvRGlnaXRZZWFyPWZ1bmN0aW9uKGUpe3JldHVybiBEKGUpKyg2ODxEKGUpPzE5MDA6MmUzKX07dmFyIFllLE9lPVRlKFwiRnVsbFllYXJcIiwhMCk7ZnVuY3Rpb24gVGUodCxuKXtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIG51bGwhPWU/KHhlKHRoaXMsdCxlKSxjLnVwZGF0ZU9mZnNldCh0aGlzLG4pLHRoaXMpOmJlKHRoaXMsdCl9fWZ1bmN0aW9uIGJlKGUsdCl7cmV0dXJuIGUuaXNWYWxpZCgpP2UuX2RbXCJnZXRcIisoZS5faXNVVEM/XCJVVENcIjpcIlwiKSt0XSgpOk5hTn1mdW5jdGlvbiB4ZShlLHQsbil7ZS5pc1ZhbGlkKCkmJiFpc05hTihuKSYmKFwiRnVsbFllYXJcIj09PXQmJkRlKGUueWVhcigpKSYmMT09PWUubW9udGgoKSYmMjk9PT1lLmRhdGUoKT9lLl9kW1wic2V0XCIrKGUuX2lzVVRDP1wiVVRDXCI6XCJcIikrdF0obixlLm1vbnRoKCksUGUobixlLm1vbnRoKCkpKTplLl9kW1wic2V0XCIrKGUuX2lzVVRDP1wiVVRDXCI6XCJcIikrdF0obikpfWZ1bmN0aW9uIFBlKGUsdCl7aWYoaXNOYU4oZSl8fGlzTmFOKHQpKXJldHVybiBOYU47dmFyIG4scz0odCUobj0xMikrbiklbjtyZXR1cm4gZSs9KHQtcykvMTIsMT09PXM/RGUoZSk/Mjk6Mjg6MzEtcyU3JTJ9WWU9QXJyYXkucHJvdG90eXBlLmluZGV4T2Y/QXJyYXkucHJvdG90eXBlLmluZGV4T2Y6ZnVuY3Rpb24oZSl7dmFyIHQ7Zm9yKHQ9MDt0PHRoaXMubGVuZ3RoOysrdClpZih0aGlzW3RdPT09ZSlyZXR1cm4gdDtyZXR1cm4tMX0sSShcIk1cIixbXCJNTVwiLDJdLFwiTW9cIixmdW5jdGlvbigpe3JldHVybiB0aGlzLm1vbnRoKCkrMX0pLEkoXCJNTU1cIiwwLDAsZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMubG9jYWxlRGF0YSgpLm1vbnRoc1Nob3J0KHRoaXMsZSl9KSxJKFwiTU1NTVwiLDAsMCxmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5sb2NhbGVEYXRhKCkubW9udGhzKHRoaXMsZSl9KSxDKFwibW9udGhcIixcIk1cIiksRihcIm1vbnRoXCIsOCksdWUoXCJNXCIsQiksdWUoXCJNTVwiLEIseiksdWUoXCJNTU1cIixmdW5jdGlvbihlLHQpe3JldHVybiB0Lm1vbnRoc1Nob3J0UmVnZXgoZSl9KSx1ZShcIk1NTU1cIixmdW5jdGlvbihlLHQpe3JldHVybiB0Lm1vbnRoc1JlZ2V4KGUpfSksY2UoW1wiTVwiLFwiTU1cIl0sZnVuY3Rpb24oZSx0KXt0W19lXT1EKGUpLTF9KSxjZShbXCJNTU1cIixcIk1NTU1cIl0sZnVuY3Rpb24oZSx0LG4scyl7dmFyIGk9bi5fbG9jYWxlLm1vbnRoc1BhcnNlKGUscyxuLl9zdHJpY3QpO251bGwhPWk/dFtfZV09aTpnKG4pLmludmFsaWRNb250aD1lfSk7dmFyIFdlPS9EW29EXT8oXFxbW15cXFtcXF1dKlxcXXxcXHMpK01NTU0/LyxDZT1cIkphbnVhcnlfRmVicnVhcnlfTWFyY2hfQXByaWxfTWF5X0p1bmVfSnVseV9BdWd1c3RfU2VwdGVtYmVyX09jdG9iZXJfTm92ZW1iZXJfRGVjZW1iZXJcIi5zcGxpdChcIl9cIik7dmFyIEhlPVwiSmFuX0ZlYl9NYXJfQXByX01heV9KdW5fSnVsX0F1Z19TZXBfT2N0X05vdl9EZWNcIi5zcGxpdChcIl9cIik7ZnVuY3Rpb24gUmUoZSx0KXt2YXIgbjtpZighZS5pc1ZhbGlkKCkpcmV0dXJuIGU7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQpaWYoL15cXGQrJC8udGVzdCh0KSl0PUQodCk7ZWxzZSBpZighaCh0PWUubG9jYWxlRGF0YSgpLm1vbnRoc1BhcnNlKHQpKSlyZXR1cm4gZTtyZXR1cm4gbj1NYXRoLm1pbihlLmRhdGUoKSxQZShlLnllYXIoKSx0KSksZS5fZFtcInNldFwiKyhlLl9pc1VUQz9cIlVUQ1wiOlwiXCIpK1wiTW9udGhcIl0odCxuKSxlfWZ1bmN0aW9uIFVlKGUpe3JldHVybiBudWxsIT1lPyhSZSh0aGlzLGUpLGMudXBkYXRlT2Zmc2V0KHRoaXMsITApLHRoaXMpOmJlKHRoaXMsXCJNb250aFwiKX12YXIgRmU9YWU7dmFyIExlPWFlO2Z1bmN0aW9uIE5lKCl7ZnVuY3Rpb24gZShlLHQpe3JldHVybiB0Lmxlbmd0aC1lLmxlbmd0aH12YXIgdCxuLHM9W10saT1bXSxyPVtdO2Zvcih0PTA7dDwxMjt0Kyspbj15KFsyZTMsdF0pLHMucHVzaCh0aGlzLm1vbnRoc1Nob3J0KG4sXCJcIikpLGkucHVzaCh0aGlzLm1vbnRocyhuLFwiXCIpKSxyLnB1c2godGhpcy5tb250aHMobixcIlwiKSksci5wdXNoKHRoaXMubW9udGhzU2hvcnQobixcIlwiKSk7Zm9yKHMuc29ydChlKSxpLnNvcnQoZSksci5zb3J0KGUpLHQ9MDt0PDEyO3QrKylzW3RdPWhlKHNbdF0pLGlbdF09aGUoaVt0XSk7Zm9yKHQ9MDt0PDI0O3QrKylyW3RdPWhlKHJbdF0pO3RoaXMuX21vbnRoc1JlZ2V4PW5ldyBSZWdFeHAoXCJeKFwiK3Iuam9pbihcInxcIikrXCIpXCIsXCJpXCIpLHRoaXMuX21vbnRoc1Nob3J0UmVnZXg9dGhpcy5fbW9udGhzUmVnZXgsdGhpcy5fbW9udGhzU3RyaWN0UmVnZXg9bmV3IFJlZ0V4cChcIl4oXCIraS5qb2luKFwifFwiKStcIilcIixcImlcIiksdGhpcy5fbW9udGhzU2hvcnRTdHJpY3RSZWdleD1uZXcgUmVnRXhwKFwiXihcIitzLmpvaW4oXCJ8XCIpK1wiKVwiLFwiaVwiKX1mdW5jdGlvbiBHZShlKXt2YXIgdDtpZihlPDEwMCYmMDw9ZSl7dmFyIG49QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKTtuWzBdPWUrNDAwLHQ9bmV3IERhdGUoRGF0ZS5VVEMuYXBwbHkobnVsbCxuKSksaXNGaW5pdGUodC5nZXRVVENGdWxsWWVhcigpKSYmdC5zZXRVVENGdWxsWWVhcihlKX1lbHNlIHQ9bmV3IERhdGUoRGF0ZS5VVEMuYXBwbHkobnVsbCxhcmd1bWVudHMpKTtyZXR1cm4gdH1mdW5jdGlvbiBWZShlLHQsbil7dmFyIHM9Nyt0LW47cmV0dXJuLSgoNytHZShlLDAscykuZ2V0VVRDRGF5KCktdCklNykrcy0xfWZ1bmN0aW9uIEVlKGUsdCxuLHMsaSl7dmFyIHIsYSxvPTErNyoodC0xKSsoNytuLXMpJTcrVmUoZSxzLGkpO3JldHVybiBhPW88PTA/U2Uocj1lLTEpK286bz5TZShlKT8ocj1lKzEsby1TZShlKSk6KHI9ZSxvKSx7eWVhcjpyLGRheU9mWWVhcjphfX1mdW5jdGlvbiBJZShlLHQsbil7dmFyIHMsaSxyPVZlKGUueWVhcigpLHQsbiksYT1NYXRoLmZsb29yKChlLmRheU9mWWVhcigpLXItMSkvNykrMTtyZXR1cm4gYTwxP3M9YStBZShpPWUueWVhcigpLTEsdCxuKTphPkFlKGUueWVhcigpLHQsbik/KHM9YS1BZShlLnllYXIoKSx0LG4pLGk9ZS55ZWFyKCkrMSk6KGk9ZS55ZWFyKCkscz1hKSx7d2VlazpzLHllYXI6aX19ZnVuY3Rpb24gQWUoZSx0LG4pe3ZhciBzPVZlKGUsdCxuKSxpPVZlKGUrMSx0LG4pO3JldHVybihTZShlKS1zK2kpLzd9SShcIndcIixbXCJ3d1wiLDJdLFwid29cIixcIndlZWtcIiksSShcIldcIixbXCJXV1wiLDJdLFwiV29cIixcImlzb1dlZWtcIiksQyhcIndlZWtcIixcIndcIiksQyhcImlzb1dlZWtcIixcIldcIiksRihcIndlZWtcIiw1KSxGKFwiaXNvV2Vla1wiLDUpLHVlKFwid1wiLEIpLHVlKFwid3dcIixCLHopLHVlKFwiV1wiLEIpLHVlKFwiV1dcIixCLHopLGZlKFtcIndcIixcInd3XCIsXCJXXCIsXCJXV1wiXSxmdW5jdGlvbihlLHQsbixzKXt0W3Muc3Vic3RyKDAsMSldPUQoZSl9KTtmdW5jdGlvbiBqZShlLHQpe3JldHVybiBlLnNsaWNlKHQsNykuY29uY2F0KGUuc2xpY2UoMCx0KSl9SShcImRcIiwwLFwiZG9cIixcImRheVwiKSxJKFwiZGRcIiwwLDAsZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMubG9jYWxlRGF0YSgpLndlZWtkYXlzTWluKHRoaXMsZSl9KSxJKFwiZGRkXCIsMCwwLGZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmxvY2FsZURhdGEoKS53ZWVrZGF5c1Nob3J0KHRoaXMsZSl9KSxJKFwiZGRkZFwiLDAsMCxmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5sb2NhbGVEYXRhKCkud2Vla2RheXModGhpcyxlKX0pLEkoXCJlXCIsMCwwLFwid2Vla2RheVwiKSxJKFwiRVwiLDAsMCxcImlzb1dlZWtkYXlcIiksQyhcImRheVwiLFwiZFwiKSxDKFwid2Vla2RheVwiLFwiZVwiKSxDKFwiaXNvV2Vla2RheVwiLFwiRVwiKSxGKFwiZGF5XCIsMTEpLEYoXCJ3ZWVrZGF5XCIsMTEpLEYoXCJpc29XZWVrZGF5XCIsMTEpLHVlKFwiZFwiLEIpLHVlKFwiZVwiLEIpLHVlKFwiRVwiLEIpLHVlKFwiZGRcIixmdW5jdGlvbihlLHQpe3JldHVybiB0LndlZWtkYXlzTWluUmVnZXgoZSl9KSx1ZShcImRkZFwiLGZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQud2Vla2RheXNTaG9ydFJlZ2V4KGUpfSksdWUoXCJkZGRkXCIsZnVuY3Rpb24oZSx0KXtyZXR1cm4gdC53ZWVrZGF5c1JlZ2V4KGUpfSksZmUoW1wiZGRcIixcImRkZFwiLFwiZGRkZFwiXSxmdW5jdGlvbihlLHQsbixzKXt2YXIgaT1uLl9sb2NhbGUud2Vla2RheXNQYXJzZShlLHMsbi5fc3RyaWN0KTtudWxsIT1pP3QuZD1pOmcobikuaW52YWxpZFdlZWtkYXk9ZX0pLGZlKFtcImRcIixcImVcIixcIkVcIl0sZnVuY3Rpb24oZSx0LG4scyl7dFtzXT1EKGUpfSk7dmFyIFplPVwiU3VuZGF5X01vbmRheV9UdWVzZGF5X1dlZG5lc2RheV9UaHVyc2RheV9GcmlkYXlfU2F0dXJkYXlcIi5zcGxpdChcIl9cIik7dmFyIHplPVwiU3VuX01vbl9UdWVfV2VkX1RodV9GcmlfU2F0XCIuc3BsaXQoXCJfXCIpO3ZhciAkZT1cIlN1X01vX1R1X1dlX1RoX0ZyX1NhXCIuc3BsaXQoXCJfXCIpO3ZhciBxZT1hZTt2YXIgSmU9YWU7dmFyIEJlPWFlO2Z1bmN0aW9uIFFlKCl7ZnVuY3Rpb24gZShlLHQpe3JldHVybiB0Lmxlbmd0aC1lLmxlbmd0aH12YXIgdCxuLHMsaSxyLGE9W10sbz1bXSx1PVtdLGw9W107Zm9yKHQ9MDt0PDc7dCsrKW49eShbMmUzLDFdKS5kYXkodCkscz10aGlzLndlZWtkYXlzTWluKG4sXCJcIiksaT10aGlzLndlZWtkYXlzU2hvcnQobixcIlwiKSxyPXRoaXMud2Vla2RheXMobixcIlwiKSxhLnB1c2gocyksby5wdXNoKGkpLHUucHVzaChyKSxsLnB1c2gocyksbC5wdXNoKGkpLGwucHVzaChyKTtmb3IoYS5zb3J0KGUpLG8uc29ydChlKSx1LnNvcnQoZSksbC5zb3J0KGUpLHQ9MDt0PDc7dCsrKW9bdF09aGUob1t0XSksdVt0XT1oZSh1W3RdKSxsW3RdPWhlKGxbdF0pO3RoaXMuX3dlZWtkYXlzUmVnZXg9bmV3IFJlZ0V4cChcIl4oXCIrbC5qb2luKFwifFwiKStcIilcIixcImlcIiksdGhpcy5fd2Vla2RheXNTaG9ydFJlZ2V4PXRoaXMuX3dlZWtkYXlzUmVnZXgsdGhpcy5fd2Vla2RheXNNaW5SZWdleD10aGlzLl93ZWVrZGF5c1JlZ2V4LHRoaXMuX3dlZWtkYXlzU3RyaWN0UmVnZXg9bmV3IFJlZ0V4cChcIl4oXCIrdS5qb2luKFwifFwiKStcIilcIixcImlcIiksdGhpcy5fd2Vla2RheXNTaG9ydFN0cmljdFJlZ2V4PW5ldyBSZWdFeHAoXCJeKFwiK28uam9pbihcInxcIikrXCIpXCIsXCJpXCIpLHRoaXMuX3dlZWtkYXlzTWluU3RyaWN0UmVnZXg9bmV3IFJlZ0V4cChcIl4oXCIrYS5qb2luKFwifFwiKStcIilcIixcImlcIil9ZnVuY3Rpb24gWGUoKXtyZXR1cm4gdGhpcy5ob3VycygpJTEyfHwxMn1mdW5jdGlvbiBLZShlLHQpe0koZSwwLDAsZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5sb2NhbGVEYXRhKCkubWVyaWRpZW0odGhpcy5ob3VycygpLHRoaXMubWludXRlcygpLHQpfSl9ZnVuY3Rpb24gZXQoZSx0KXtyZXR1cm4gdC5fbWVyaWRpZW1QYXJzZX1JKFwiSFwiLFtcIkhIXCIsMl0sMCxcImhvdXJcIiksSShcImhcIixbXCJoaFwiLDJdLDAsWGUpLEkoXCJrXCIsW1wia2tcIiwyXSwwLGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaG91cnMoKXx8MjR9KSxJKFwiaG1tXCIsMCwwLGZ1bmN0aW9uKCl7cmV0dXJuXCJcIitYZS5hcHBseSh0aGlzKStMKHRoaXMubWludXRlcygpLDIpfSksSShcImhtbXNzXCIsMCwwLGZ1bmN0aW9uKCl7cmV0dXJuXCJcIitYZS5hcHBseSh0aGlzKStMKHRoaXMubWludXRlcygpLDIpK0wodGhpcy5zZWNvbmRzKCksMil9KSxJKFwiSG1tXCIsMCwwLGZ1bmN0aW9uKCl7cmV0dXJuXCJcIit0aGlzLmhvdXJzKCkrTCh0aGlzLm1pbnV0ZXMoKSwyKX0pLEkoXCJIbW1zc1wiLDAsMCxmdW5jdGlvbigpe3JldHVyblwiXCIrdGhpcy5ob3VycygpK0wodGhpcy5taW51dGVzKCksMikrTCh0aGlzLnNlY29uZHMoKSwyKX0pLEtlKFwiYVwiLCEwKSxLZShcIkFcIiwhMSksQyhcImhvdXJcIixcImhcIiksRihcImhvdXJcIiwxMyksdWUoXCJhXCIsZXQpLHVlKFwiQVwiLGV0KSx1ZShcIkhcIixCKSx1ZShcImhcIixCKSx1ZShcImtcIixCKSx1ZShcIkhIXCIsQix6KSx1ZShcImhoXCIsQix6KSx1ZShcImtrXCIsQix6KSx1ZShcImhtbVwiLFEpLHVlKFwiaG1tc3NcIixYKSx1ZShcIkhtbVwiLFEpLHVlKFwiSG1tc3NcIixYKSxjZShbXCJIXCIsXCJISFwiXSxnZSksY2UoW1wia1wiLFwia2tcIl0sZnVuY3Rpb24oZSx0LG4pe3ZhciBzPUQoZSk7dFtnZV09MjQ9PT1zPzA6c30pLGNlKFtcImFcIixcIkFcIl0sZnVuY3Rpb24oZSx0LG4pe24uX2lzUG09bi5fbG9jYWxlLmlzUE0oZSksbi5fbWVyaWRpZW09ZX0pLGNlKFtcImhcIixcImhoXCJdLGZ1bmN0aW9uKGUsdCxuKXt0W2dlXT1EKGUpLGcobikuYmlnSG91cj0hMH0pLGNlKFwiaG1tXCIsZnVuY3Rpb24oZSx0LG4pe3ZhciBzPWUubGVuZ3RoLTI7dFtnZV09RChlLnN1YnN0cigwLHMpKSx0W3ZlXT1EKGUuc3Vic3RyKHMpKSxnKG4pLmJpZ0hvdXI9ITB9KSxjZShcImhtbXNzXCIsZnVuY3Rpb24oZSx0LG4pe3ZhciBzPWUubGVuZ3RoLTQsaT1lLmxlbmd0aC0yO3RbZ2VdPUQoZS5zdWJzdHIoMCxzKSksdFt2ZV09RChlLnN1YnN0cihzLDIpKSx0W3BlXT1EKGUuc3Vic3RyKGkpKSxnKG4pLmJpZ0hvdXI9ITB9KSxjZShcIkhtbVwiLGZ1bmN0aW9uKGUsdCxuKXt2YXIgcz1lLmxlbmd0aC0yO3RbZ2VdPUQoZS5zdWJzdHIoMCxzKSksdFt2ZV09RChlLnN1YnN0cihzKSl9KSxjZShcIkhtbXNzXCIsZnVuY3Rpb24oZSx0LG4pe3ZhciBzPWUubGVuZ3RoLTQsaT1lLmxlbmd0aC0yO3RbZ2VdPUQoZS5zdWJzdHIoMCxzKSksdFt2ZV09RChlLnN1YnN0cihzLDIpKSx0W3BlXT1EKGUuc3Vic3RyKGkpKX0pO3ZhciB0dCxudD1UZShcIkhvdXJzXCIsITApLHN0PXtjYWxlbmRhcjp7c2FtZURheTpcIltUb2RheSBhdF0gTFRcIixuZXh0RGF5OlwiW1RvbW9ycm93IGF0XSBMVFwiLG5leHRXZWVrOlwiZGRkZCBbYXRdIExUXCIsbGFzdERheTpcIltZZXN0ZXJkYXkgYXRdIExUXCIsbGFzdFdlZWs6XCJbTGFzdF0gZGRkZCBbYXRdIExUXCIsc2FtZUVsc2U6XCJMXCJ9LGxvbmdEYXRlRm9ybWF0OntMVFM6XCJoOm1tOnNzIEFcIixMVDpcImg6bW0gQVwiLEw6XCJNTS9ERC9ZWVlZXCIsTEw6XCJNTU1NIEQsIFlZWVlcIixMTEw6XCJNTU1NIEQsIFlZWVkgaDptbSBBXCIsTExMTDpcImRkZGQsIE1NTU0gRCwgWVlZWSBoOm1tIEFcIn0saW52YWxpZERhdGU6XCJJbnZhbGlkIGRhdGVcIixvcmRpbmFsOlwiJWRcIixkYXlPZk1vbnRoT3JkaW5hbFBhcnNlOi9cXGR7MSwyfS8scmVsYXRpdmVUaW1lOntmdXR1cmU6XCJpbiAlc1wiLHBhc3Q6XCIlcyBhZ29cIixzOlwiYSBmZXcgc2Vjb25kc1wiLHNzOlwiJWQgc2Vjb25kc1wiLG06XCJhIG1pbnV0ZVwiLG1tOlwiJWQgbWludXRlc1wiLGg6XCJhbiBob3VyXCIsaGg6XCIlZCBob3Vyc1wiLGQ6XCJhIGRheVwiLGRkOlwiJWQgZGF5c1wiLE06XCJhIG1vbnRoXCIsTU06XCIlZCBtb250aHNcIix5OlwiYSB5ZWFyXCIseXk6XCIlZCB5ZWFyc1wifSxtb250aHM6Q2UsbW9udGhzU2hvcnQ6SGUsd2Vlazp7ZG93OjAsZG95OjZ9LHdlZWtkYXlzOlplLHdlZWtkYXlzTWluOiRlLHdlZWtkYXlzU2hvcnQ6emUsbWVyaWRpZW1QYXJzZTovW2FwXVxcLj9tP1xcLj8vaX0saXQ9e30scnQ9e307ZnVuY3Rpb24gYXQoZSl7cmV0dXJuIGU/ZS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoXCJfXCIsXCItXCIpOmV9ZnVuY3Rpb24gb3QoZSl7dmFyIHQ9bnVsbDtpZighaXRbZV0mJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBtb2R1bGUmJm1vZHVsZSYmbW9kdWxlLmV4cG9ydHMpdHJ5e3Q9dHQuX2FiYnIscmVxdWlyZShcIi4vbG9jYWxlL1wiK2UpLHV0KHQpfWNhdGNoKGUpe31yZXR1cm4gaXRbZV19ZnVuY3Rpb24gdXQoZSx0KXt2YXIgbjtyZXR1cm4gZSYmKChuPWwodCk/aHQoZSk6bHQoZSx0KSk/dHQ9bjpcInVuZGVmaW5lZFwiIT10eXBlb2YgY29uc29sZSYmY29uc29sZS53YXJuJiZjb25zb2xlLndhcm4oXCJMb2NhbGUgXCIrZStcIiBub3QgZm91bmQuIERpZCB5b3UgZm9yZ2V0IHRvIGxvYWQgaXQ/XCIpKSx0dC5fYWJicn1mdW5jdGlvbiBsdChlLHQpe2lmKG51bGw9PT10KXJldHVybiBkZWxldGUgaXRbZV0sbnVsbDt2YXIgbixzPXN0O2lmKHQuYWJicj1lLG51bGwhPWl0W2VdKVQoXCJkZWZpbmVMb2NhbGVPdmVycmlkZVwiLFwidXNlIG1vbWVudC51cGRhdGVMb2NhbGUobG9jYWxlTmFtZSwgY29uZmlnKSB0byBjaGFuZ2UgYW4gZXhpc3RpbmcgbG9jYWxlLiBtb21lbnQuZGVmaW5lTG9jYWxlKGxvY2FsZU5hbWUsIGNvbmZpZykgc2hvdWxkIG9ubHkgYmUgdXNlZCBmb3IgY3JlYXRpbmcgYSBuZXcgbG9jYWxlIFNlZSBodHRwOi8vbW9tZW50anMuY29tL2d1aWRlcy8jL3dhcm5pbmdzL2RlZmluZS1sb2NhbGUvIGZvciBtb3JlIGluZm8uXCIpLHM9aXRbZV0uX2NvbmZpZztlbHNlIGlmKG51bGwhPXQucGFyZW50TG9jYWxlKWlmKG51bGwhPWl0W3QucGFyZW50TG9jYWxlXSlzPWl0W3QucGFyZW50TG9jYWxlXS5fY29uZmlnO2Vsc2V7aWYobnVsbD09KG49b3QodC5wYXJlbnRMb2NhbGUpKSlyZXR1cm4gcnRbdC5wYXJlbnRMb2NhbGVdfHwocnRbdC5wYXJlbnRMb2NhbGVdPVtdKSxydFt0LnBhcmVudExvY2FsZV0ucHVzaCh7bmFtZTplLGNvbmZpZzp0fSksbnVsbDtzPW4uX2NvbmZpZ31yZXR1cm4gaXRbZV09bmV3IFAoeChzLHQpKSxydFtlXSYmcnRbZV0uZm9yRWFjaChmdW5jdGlvbihlKXtsdChlLm5hbWUsZS5jb25maWcpfSksdXQoZSksaXRbZV19ZnVuY3Rpb24gaHQoZSl7dmFyIHQ7aWYoZSYmZS5fbG9jYWxlJiZlLl9sb2NhbGUuX2FiYnImJihlPWUuX2xvY2FsZS5fYWJiciksIWUpcmV0dXJuIHR0O2lmKCFvKGUpKXtpZih0PW90KGUpKXJldHVybiB0O2U9W2VdfXJldHVybiBmdW5jdGlvbihlKXtmb3IodmFyIHQsbixzLGkscj0wO3I8ZS5sZW5ndGg7KXtmb3IodD0oaT1hdChlW3JdKS5zcGxpdChcIi1cIikpLmxlbmd0aCxuPShuPWF0KGVbcisxXSkpP24uc3BsaXQoXCItXCIpOm51bGw7MDx0Oyl7aWYocz1vdChpLnNsaWNlKDAsdCkuam9pbihcIi1cIikpKXJldHVybiBzO2lmKG4mJm4ubGVuZ3RoPj10JiZhKGksbiwhMCk+PXQtMSlicmVhazt0LS19cisrfXJldHVybiB0dH0oZSl9ZnVuY3Rpb24gZHQoZSl7dmFyIHQsbj1lLl9hO3JldHVybiBuJiYtMj09PWcoZSkub3ZlcmZsb3cmJih0PW5bX2VdPDB8fDExPG5bX2VdP19lOm5beWVdPDF8fG5beWVdPlBlKG5bbWVdLG5bX2VdKT95ZTpuW2dlXTwwfHwyNDxuW2dlXXx8MjQ9PT1uW2dlXSYmKDAhPT1uW3ZlXXx8MCE9PW5bcGVdfHwwIT09blt3ZV0pP2dlOm5bdmVdPDB8fDU5PG5bdmVdP3ZlOm5bcGVdPDB8fDU5PG5bcGVdP3BlOm5bd2VdPDB8fDk5OTxuW3dlXT93ZTotMSxnKGUpLl9vdmVyZmxvd0RheU9mWWVhciYmKHQ8bWV8fHllPHQpJiYodD15ZSksZyhlKS5fb3ZlcmZsb3dXZWVrcyYmLTE9PT10JiYodD1NZSksZyhlKS5fb3ZlcmZsb3dXZWVrZGF5JiYtMT09PXQmJih0PWtlKSxnKGUpLm92ZXJmbG93PXQpLGV9ZnVuY3Rpb24gY3QoZSx0LG4pe3JldHVybiBudWxsIT1lP2U6bnVsbCE9dD90Om59ZnVuY3Rpb24gZnQoZSl7dmFyIHQsbixzLGkscixhPVtdO2lmKCFlLl9kKXt2YXIgbyx1O2ZvcihvPWUsdT1uZXcgRGF0ZShjLm5vdygpKSxzPW8uX3VzZVVUQz9bdS5nZXRVVENGdWxsWWVhcigpLHUuZ2V0VVRDTW9udGgoKSx1LmdldFVUQ0RhdGUoKV06W3UuZ2V0RnVsbFllYXIoKSx1LmdldE1vbnRoKCksdS5nZXREYXRlKCldLGUuX3cmJm51bGw9PWUuX2FbeWVdJiZudWxsPT1lLl9hW19lXSYmZnVuY3Rpb24oZSl7dmFyIHQsbixzLGkscixhLG8sdTtpZihudWxsIT0odD1lLl93KS5HR3x8bnVsbCE9dC5XfHxudWxsIT10LkUpcj0xLGE9NCxuPWN0KHQuR0csZS5fYVttZV0sSWUoYnQoKSwxLDQpLnllYXIpLHM9Y3QodC5XLDEpLCgoaT1jdCh0LkUsMSkpPDF8fDc8aSkmJih1PSEwKTtlbHNle3I9ZS5fbG9jYWxlLl93ZWVrLmRvdyxhPWUuX2xvY2FsZS5fd2Vlay5kb3k7dmFyIGw9SWUoYnQoKSxyLGEpO249Y3QodC5nZyxlLl9hW21lXSxsLnllYXIpLHM9Y3QodC53LGwud2VlayksbnVsbCE9dC5kPygoaT10LmQpPDB8fDY8aSkmJih1PSEwKTpudWxsIT10LmU/KGk9dC5lK3IsKHQuZTwwfHw2PHQuZSkmJih1PSEwKSk6aT1yfXM8MXx8cz5BZShuLHIsYSk/ZyhlKS5fb3ZlcmZsb3dXZWVrcz0hMDpudWxsIT11P2coZSkuX292ZXJmbG93V2Vla2RheT0hMDoobz1FZShuLHMsaSxyLGEpLGUuX2FbbWVdPW8ueWVhcixlLl9kYXlPZlllYXI9by5kYXlPZlllYXIpfShlKSxudWxsIT1lLl9kYXlPZlllYXImJihyPWN0KGUuX2FbbWVdLHNbbWVdKSwoZS5fZGF5T2ZZZWFyPlNlKHIpfHwwPT09ZS5fZGF5T2ZZZWFyKSYmKGcoZSkuX292ZXJmbG93RGF5T2ZZZWFyPSEwKSxuPUdlKHIsMCxlLl9kYXlPZlllYXIpLGUuX2FbX2VdPW4uZ2V0VVRDTW9udGgoKSxlLl9hW3llXT1uLmdldFVUQ0RhdGUoKSksdD0wO3Q8MyYmbnVsbD09ZS5fYVt0XTsrK3QpZS5fYVt0XT1hW3RdPXNbdF07Zm9yKDt0PDc7dCsrKWUuX2FbdF09YVt0XT1udWxsPT1lLl9hW3RdPzI9PT10PzE6MDplLl9hW3RdOzI0PT09ZS5fYVtnZV0mJjA9PT1lLl9hW3ZlXSYmMD09PWUuX2FbcGVdJiYwPT09ZS5fYVt3ZV0mJihlLl9uZXh0RGF5PSEwLGUuX2FbZ2VdPTApLGUuX2Q9KGUuX3VzZVVUQz9HZTpmdW5jdGlvbihlLHQsbixzLGkscixhKXt2YXIgbztyZXR1cm4gZTwxMDAmJjA8PWU/KG89bmV3IERhdGUoZSs0MDAsdCxuLHMsaSxyLGEpLGlzRmluaXRlKG8uZ2V0RnVsbFllYXIoKSkmJm8uc2V0RnVsbFllYXIoZSkpOm89bmV3IERhdGUoZSx0LG4scyxpLHIsYSksb30pLmFwcGx5KG51bGwsYSksaT1lLl91c2VVVEM/ZS5fZC5nZXRVVENEYXkoKTplLl9kLmdldERheSgpLG51bGwhPWUuX3R6bSYmZS5fZC5zZXRVVENNaW51dGVzKGUuX2QuZ2V0VVRDTWludXRlcygpLWUuX3R6bSksZS5fbmV4dERheSYmKGUuX2FbZ2VdPTI0KSxlLl93JiZ2b2lkIDAhPT1lLl93LmQmJmUuX3cuZCE9PWkmJihnKGUpLndlZWtkYXlNaXNtYXRjaD0hMCl9fXZhciBtdD0vXlxccyooKD86WystXVxcZHs2fXxcXGR7NH0pLSg/OlxcZFxcZC1cXGRcXGR8V1xcZFxcZC1cXGR8V1xcZFxcZHxcXGRcXGRcXGR8XFxkXFxkKSkoPzooVHwgKShcXGRcXGQoPzo6XFxkXFxkKD86OlxcZFxcZCg/OlsuLF1cXGQrKT8pPyk/KShbXFwrXFwtXVxcZFxcZCg/Ojo/XFxkXFxkKT98XFxzKlopPyk/JC8sX3Q9L15cXHMqKCg/OlsrLV1cXGR7Nn18XFxkezR9KSg/OlxcZFxcZFxcZFxcZHxXXFxkXFxkXFxkfFdcXGRcXGR8XFxkXFxkXFxkfFxcZFxcZCkpKD86KFR8ICkoXFxkXFxkKD86XFxkXFxkKD86XFxkXFxkKD86Wy4sXVxcZCspPyk/KT8pKFtcXCtcXC1dXFxkXFxkKD86Oj9cXGRcXGQpP3xcXHMqWik/KT8kLyx5dD0vWnxbKy1dXFxkXFxkKD86Oj9cXGRcXGQpPy8sZ3Q9W1tcIllZWVlZWS1NTS1ERFwiLC9bKy1dXFxkezZ9LVxcZFxcZC1cXGRcXGQvXSxbXCJZWVlZLU1NLUREXCIsL1xcZHs0fS1cXGRcXGQtXFxkXFxkL10sW1wiR0dHRy1bV11XVy1FXCIsL1xcZHs0fS1XXFxkXFxkLVxcZC9dLFtcIkdHR0ctW1ddV1dcIiwvXFxkezR9LVdcXGRcXGQvLCExXSxbXCJZWVlZLURERFwiLC9cXGR7NH0tXFxkezN9L10sW1wiWVlZWS1NTVwiLC9cXGR7NH0tXFxkXFxkLywhMV0sW1wiWVlZWVlZTU1ERFwiLC9bKy1dXFxkezEwfS9dLFtcIllZWVlNTUREXCIsL1xcZHs4fS9dLFtcIkdHR0dbV11XV0VcIiwvXFxkezR9V1xcZHszfS9dLFtcIkdHR0dbV11XV1wiLC9cXGR7NH1XXFxkezJ9LywhMV0sW1wiWVlZWURERFwiLC9cXGR7N30vXV0sdnQ9W1tcIkhIOm1tOnNzLlNTU1NcIiwvXFxkXFxkOlxcZFxcZDpcXGRcXGRcXC5cXGQrL10sW1wiSEg6bW06c3MsU1NTU1wiLC9cXGRcXGQ6XFxkXFxkOlxcZFxcZCxcXGQrL10sW1wiSEg6bW06c3NcIiwvXFxkXFxkOlxcZFxcZDpcXGRcXGQvXSxbXCJISDptbVwiLC9cXGRcXGQ6XFxkXFxkL10sW1wiSEhtbXNzLlNTU1NcIiwvXFxkXFxkXFxkXFxkXFxkXFxkXFwuXFxkKy9dLFtcIkhIbW1zcyxTU1NTXCIsL1xcZFxcZFxcZFxcZFxcZFxcZCxcXGQrL10sW1wiSEhtbXNzXCIsL1xcZFxcZFxcZFxcZFxcZFxcZC9dLFtcIkhIbW1cIiwvXFxkXFxkXFxkXFxkL10sW1wiSEhcIiwvXFxkXFxkL11dLHB0PS9eXFwvP0RhdGVcXCgoXFwtP1xcZCspL2k7ZnVuY3Rpb24gd3QoZSl7dmFyIHQsbixzLGkscixhLG89ZS5faSx1PW10LmV4ZWMobyl8fF90LmV4ZWMobyk7aWYodSl7Zm9yKGcoZSkuaXNvPSEwLHQ9MCxuPWd0Lmxlbmd0aDt0PG47dCsrKWlmKGd0W3RdWzFdLmV4ZWModVsxXSkpe2k9Z3RbdF1bMF0scz0hMSE9PWd0W3RdWzJdO2JyZWFrfWlmKG51bGw9PWkpcmV0dXJuIHZvaWQoZS5faXNWYWxpZD0hMSk7aWYodVszXSl7Zm9yKHQ9MCxuPXZ0Lmxlbmd0aDt0PG47dCsrKWlmKHZ0W3RdWzFdLmV4ZWModVszXSkpe3I9KHVbMl18fFwiIFwiKSt2dFt0XVswXTticmVha31pZihudWxsPT1yKXJldHVybiB2b2lkKGUuX2lzVmFsaWQ9ITEpfWlmKCFzJiZudWxsIT1yKXJldHVybiB2b2lkKGUuX2lzVmFsaWQ9ITEpO2lmKHVbNF0pe2lmKCF5dC5leGVjKHVbNF0pKXJldHVybiB2b2lkKGUuX2lzVmFsaWQ9ITEpO2E9XCJaXCJ9ZS5fZj1pKyhyfHxcIlwiKSsoYXx8XCJcIiksWXQoZSl9ZWxzZSBlLl9pc1ZhbGlkPSExfXZhciBNdD0vXig/OihNb258VHVlfFdlZHxUaHV8RnJpfFNhdHxTdW4pLD9cXHMpPyhcXGR7MSwyfSlcXHMoSmFufEZlYnxNYXJ8QXByfE1heXxKdW58SnVsfEF1Z3xTZXB8T2N0fE5vdnxEZWMpXFxzKFxcZHsyLDR9KVxccyhcXGRcXGQpOihcXGRcXGQpKD86OihcXGRcXGQpKT9cXHMoPzooVVR8R01UfFtFQ01QXVtTRF1UKXwoW1p6XSl8KFsrLV1cXGR7NH0pKSQvO2Z1bmN0aW9uIGt0KGUsdCxuLHMsaSxyKXt2YXIgYT1bZnVuY3Rpb24oZSl7dmFyIHQ9cGFyc2VJbnQoZSwxMCk7e2lmKHQ8PTQ5KXJldHVybiAyZTMrdDtpZih0PD05OTkpcmV0dXJuIDE5MDArdH1yZXR1cm4gdH0oZSksSGUuaW5kZXhPZih0KSxwYXJzZUludChuLDEwKSxwYXJzZUludChzLDEwKSxwYXJzZUludChpLDEwKV07cmV0dXJuIHImJmEucHVzaChwYXJzZUludChyLDEwKSksYX12YXIgU3Q9e1VUOjAsR01UOjAsRURUOi0yNDAsRVNUOi0zMDAsQ0RUOi0zMDAsQ1NUOi0zNjAsTURUOi0zNjAsTVNUOi00MjAsUERUOi00MjAsUFNUOi00ODB9O2Z1bmN0aW9uIER0KGUpe3ZhciB0LG4scyxpPU10LmV4ZWMoZS5faS5yZXBsYWNlKC9cXChbXildKlxcKXxbXFxuXFx0XS9nLFwiIFwiKS5yZXBsYWNlKC8oXFxzXFxzKykvZyxcIiBcIikucmVwbGFjZSgvXlxcc1xccyovLFwiXCIpLnJlcGxhY2UoL1xcc1xccyokLyxcIlwiKSk7aWYoaSl7dmFyIHI9a3QoaVs0XSxpWzNdLGlbMl0saVs1XSxpWzZdLGlbN10pO2lmKHQ9aVsxXSxuPXIscz1lLHQmJnplLmluZGV4T2YodCkhPT1uZXcgRGF0ZShuWzBdLG5bMV0sblsyXSkuZ2V0RGF5KCkmJihnKHMpLndlZWtkYXlNaXNtYXRjaD0hMCwhKHMuX2lzVmFsaWQ9ITEpKSlyZXR1cm47ZS5fYT1yLGUuX3R6bT1mdW5jdGlvbihlLHQsbil7aWYoZSlyZXR1cm4gU3RbZV07aWYodClyZXR1cm4gMDt2YXIgcz1wYXJzZUludChuLDEwKSxpPXMlMTAwO3JldHVybihzLWkpLzEwMCo2MCtpfShpWzhdLGlbOV0saVsxMF0pLGUuX2Q9R2UuYXBwbHkobnVsbCxlLl9hKSxlLl9kLnNldFVUQ01pbnV0ZXMoZS5fZC5nZXRVVENNaW51dGVzKCktZS5fdHptKSxnKGUpLnJmYzI4MjI9ITB9ZWxzZSBlLl9pc1ZhbGlkPSExfWZ1bmN0aW9uIFl0KGUpe2lmKGUuX2YhPT1jLklTT184NjAxKWlmKGUuX2YhPT1jLlJGQ18yODIyKXtlLl9hPVtdLGcoZSkuZW1wdHk9ITA7dmFyIHQsbixzLGkscixhLG8sdSxsPVwiXCIrZS5faSxoPWwubGVuZ3RoLGQ9MDtmb3Iocz1qKGUuX2YsZS5fbG9jYWxlKS5tYXRjaChOKXx8W10sdD0wO3Q8cy5sZW5ndGg7dCsrKWk9c1t0XSwobj0obC5tYXRjaChsZShpLGUpKXx8W10pWzBdKSYmKDA8KHI9bC5zdWJzdHIoMCxsLmluZGV4T2YobikpKS5sZW5ndGgmJmcoZSkudW51c2VkSW5wdXQucHVzaChyKSxsPWwuc2xpY2UobC5pbmRleE9mKG4pK24ubGVuZ3RoKSxkKz1uLmxlbmd0aCksRVtpXT8obj9nKGUpLmVtcHR5PSExOmcoZSkudW51c2VkVG9rZW5zLnB1c2goaSksYT1pLHU9ZSxudWxsIT0obz1uKSYmbShkZSxhKSYmZGVbYV0obyx1Ll9hLHUsYSkpOmUuX3N0cmljdCYmIW4mJmcoZSkudW51c2VkVG9rZW5zLnB1c2goaSk7ZyhlKS5jaGFyc0xlZnRPdmVyPWgtZCwwPGwubGVuZ3RoJiZnKGUpLnVudXNlZElucHV0LnB1c2gobCksZS5fYVtnZV08PTEyJiYhMD09PWcoZSkuYmlnSG91ciYmMDxlLl9hW2dlXSYmKGcoZSkuYmlnSG91cj12b2lkIDApLGcoZSkucGFyc2VkRGF0ZVBhcnRzPWUuX2Euc2xpY2UoMCksZyhlKS5tZXJpZGllbT1lLl9tZXJpZGllbSxlLl9hW2dlXT1mdW5jdGlvbihlLHQsbil7dmFyIHM7aWYobnVsbD09bilyZXR1cm4gdDtyZXR1cm4gbnVsbCE9ZS5tZXJpZGllbUhvdXI/ZS5tZXJpZGllbUhvdXIodCxuKToobnVsbCE9ZS5pc1BNJiYoKHM9ZS5pc1BNKG4pKSYmdDwxMiYmKHQrPTEyKSxzfHwxMiE9PXR8fCh0PTApKSx0KX0oZS5fbG9jYWxlLGUuX2FbZ2VdLGUuX21lcmlkaWVtKSxmdChlKSxkdChlKX1lbHNlIER0KGUpO2Vsc2Ugd3QoZSl9ZnVuY3Rpb24gT3QoZSl7dmFyIHQsbixzLGkscj1lLl9pLGE9ZS5fZjtyZXR1cm4gZS5fbG9jYWxlPWUuX2xvY2FsZXx8aHQoZS5fbCksbnVsbD09PXJ8fHZvaWQgMD09PWEmJlwiXCI9PT1yP3Aoe251bGxJbnB1dDohMH0pOihcInN0cmluZ1wiPT10eXBlb2YgciYmKGUuX2k9cj1lLl9sb2NhbGUucHJlcGFyc2UocikpLGsocik/bmV3IE0oZHQocikpOihkKHIpP2UuX2Q9cjpvKGEpP2Z1bmN0aW9uKGUpe3ZhciB0LG4scyxpLHI7aWYoMD09PWUuX2YubGVuZ3RoKXJldHVybiBnKGUpLmludmFsaWRGb3JtYXQ9ITAsZS5fZD1uZXcgRGF0ZShOYU4pO2ZvcihpPTA7aTxlLl9mLmxlbmd0aDtpKyspcj0wLHQ9dyh7fSxlKSxudWxsIT1lLl91c2VVVEMmJih0Ll91c2VVVEM9ZS5fdXNlVVRDKSx0Ll9mPWUuX2ZbaV0sWXQodCksdih0KSYmKHIrPWcodCkuY2hhcnNMZWZ0T3ZlcixyKz0xMCpnKHQpLnVudXNlZFRva2Vucy5sZW5ndGgsZyh0KS5zY29yZT1yLChudWxsPT1zfHxyPHMpJiYocz1yLG49dCkpO18oZSxufHx0KX0oZSk6YT9ZdChlKTpsKG49KHQ9ZSkuX2kpP3QuX2Q9bmV3IERhdGUoYy5ub3coKSk6ZChuKT90Ll9kPW5ldyBEYXRlKG4udmFsdWVPZigpKTpcInN0cmluZ1wiPT10eXBlb2Ygbj8ocz10LG51bGw9PT0oaT1wdC5leGVjKHMuX2kpKT8od3QocyksITE9PT1zLl9pc1ZhbGlkJiYoZGVsZXRlIHMuX2lzVmFsaWQsRHQocyksITE9PT1zLl9pc1ZhbGlkJiYoZGVsZXRlIHMuX2lzVmFsaWQsYy5jcmVhdGVGcm9tSW5wdXRGYWxsYmFjayhzKSkpKTpzLl9kPW5ldyBEYXRlKCtpWzFdKSk6byhuKT8odC5fYT1mKG4uc2xpY2UoMCksZnVuY3Rpb24oZSl7cmV0dXJuIHBhcnNlSW50KGUsMTApfSksZnQodCkpOnUobik/ZnVuY3Rpb24oZSl7aWYoIWUuX2Qpe3ZhciB0PVIoZS5faSk7ZS5fYT1mKFt0LnllYXIsdC5tb250aCx0LmRheXx8dC5kYXRlLHQuaG91cix0Lm1pbnV0ZSx0LnNlY29uZCx0Lm1pbGxpc2Vjb25kXSxmdW5jdGlvbihlKXtyZXR1cm4gZSYmcGFyc2VJbnQoZSwxMCl9KSxmdChlKX19KHQpOmgobik/dC5fZD1uZXcgRGF0ZShuKTpjLmNyZWF0ZUZyb21JbnB1dEZhbGxiYWNrKHQpLHYoZSl8fChlLl9kPW51bGwpLGUpKX1mdW5jdGlvbiBUdChlLHQsbixzLGkpe3ZhciByLGE9e307cmV0dXJuITAhPT1uJiYhMSE9PW58fChzPW4sbj12b2lkIDApLCh1KGUpJiZmdW5jdGlvbihlKXtpZihPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcylyZXR1cm4gMD09PU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGUpLmxlbmd0aDt2YXIgdDtmb3IodCBpbiBlKWlmKGUuaGFzT3duUHJvcGVydHkodCkpcmV0dXJuITE7cmV0dXJuITB9KGUpfHxvKGUpJiYwPT09ZS5sZW5ndGgpJiYoZT12b2lkIDApLGEuX2lzQU1vbWVudE9iamVjdD0hMCxhLl91c2VVVEM9YS5faXNVVEM9aSxhLl9sPW4sYS5faT1lLGEuX2Y9dCxhLl9zdHJpY3Q9cywocj1uZXcgTShkdChPdChhKSkpKS5fbmV4dERheSYmKHIuYWRkKDEsXCJkXCIpLHIuX25leHREYXk9dm9pZCAwKSxyfWZ1bmN0aW9uIGJ0KGUsdCxuLHMpe3JldHVybiBUdChlLHQsbixzLCExKX1jLmNyZWF0ZUZyb21JbnB1dEZhbGxiYWNrPW4oXCJ2YWx1ZSBwcm92aWRlZCBpcyBub3QgaW4gYSByZWNvZ25pemVkIFJGQzI4MjIgb3IgSVNPIGZvcm1hdC4gbW9tZW50IGNvbnN0cnVjdGlvbiBmYWxscyBiYWNrIHRvIGpzIERhdGUoKSwgd2hpY2ggaXMgbm90IHJlbGlhYmxlIGFjcm9zcyBhbGwgYnJvd3NlcnMgYW5kIHZlcnNpb25zLiBOb24gUkZDMjgyMi9JU08gZGF0ZSBmb3JtYXRzIGFyZSBkaXNjb3VyYWdlZCBhbmQgd2lsbCBiZSByZW1vdmVkIGluIGFuIHVwY29taW5nIG1ham9yIHJlbGVhc2UuIFBsZWFzZSByZWZlciB0byBodHRwOi8vbW9tZW50anMuY29tL2d1aWRlcy8jL3dhcm5pbmdzL2pzLWRhdGUvIGZvciBtb3JlIGluZm8uXCIsZnVuY3Rpb24oZSl7ZS5fZD1uZXcgRGF0ZShlLl9pKyhlLl91c2VVVEM/XCIgVVRDXCI6XCJcIikpfSksYy5JU09fODYwMT1mdW5jdGlvbigpe30sYy5SRkNfMjgyMj1mdW5jdGlvbigpe307dmFyIHh0PW4oXCJtb21lbnQoKS5taW4gaXMgZGVwcmVjYXRlZCwgdXNlIG1vbWVudC5tYXggaW5zdGVhZC4gaHR0cDovL21vbWVudGpzLmNvbS9ndWlkZXMvIy93YXJuaW5ncy9taW4tbWF4L1wiLGZ1bmN0aW9uKCl7dmFyIGU9YnQuYXBwbHkobnVsbCxhcmd1bWVudHMpO3JldHVybiB0aGlzLmlzVmFsaWQoKSYmZS5pc1ZhbGlkKCk/ZTx0aGlzP3RoaXM6ZTpwKCl9KSxQdD1uKFwibW9tZW50KCkubWF4IGlzIGRlcHJlY2F0ZWQsIHVzZSBtb21lbnQubWluIGluc3RlYWQuIGh0dHA6Ly9tb21lbnRqcy5jb20vZ3VpZGVzLyMvd2FybmluZ3MvbWluLW1heC9cIixmdW5jdGlvbigpe3ZhciBlPWJ0LmFwcGx5KG51bGwsYXJndW1lbnRzKTtyZXR1cm4gdGhpcy5pc1ZhbGlkKCkmJmUuaXNWYWxpZCgpP3RoaXM8ZT90aGlzOmU6cCgpfSk7ZnVuY3Rpb24gV3QoZSx0KXt2YXIgbixzO2lmKDE9PT10Lmxlbmd0aCYmbyh0WzBdKSYmKHQ9dFswXSksIXQubGVuZ3RoKXJldHVybiBidCgpO2ZvcihuPXRbMF0scz0xO3M8dC5sZW5ndGg7KytzKXRbc10uaXNWYWxpZCgpJiYhdFtzXVtlXShuKXx8KG49dFtzXSk7cmV0dXJuIG59dmFyIEN0PVtcInllYXJcIixcInF1YXJ0ZXJcIixcIm1vbnRoXCIsXCJ3ZWVrXCIsXCJkYXlcIixcImhvdXJcIixcIm1pbnV0ZVwiLFwic2Vjb25kXCIsXCJtaWxsaXNlY29uZFwiXTtmdW5jdGlvbiBIdChlKXt2YXIgdD1SKGUpLG49dC55ZWFyfHwwLHM9dC5xdWFydGVyfHwwLGk9dC5tb250aHx8MCxyPXQud2Vla3x8dC5pc29XZWVrfHwwLGE9dC5kYXl8fDAsbz10LmhvdXJ8fDAsdT10Lm1pbnV0ZXx8MCxsPXQuc2Vjb25kfHwwLGg9dC5taWxsaXNlY29uZHx8MDt0aGlzLl9pc1ZhbGlkPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdCBpbiBlKWlmKC0xPT09WWUuY2FsbChDdCx0KXx8bnVsbCE9ZVt0XSYmaXNOYU4oZVt0XSkpcmV0dXJuITE7Zm9yKHZhciBuPSExLHM9MDtzPEN0Lmxlbmd0aDsrK3MpaWYoZVtDdFtzXV0pe2lmKG4pcmV0dXJuITE7cGFyc2VGbG9hdChlW0N0W3NdXSkhPT1EKGVbQ3Rbc11dKSYmKG49ITApfXJldHVybiEwfSh0KSx0aGlzLl9taWxsaXNlY29uZHM9K2grMWUzKmwrNmU0KnUrMWUzKm8qNjAqNjAsdGhpcy5fZGF5cz0rYSs3KnIsdGhpcy5fbW9udGhzPStpKzMqcysxMipuLHRoaXMuX2RhdGE9e30sdGhpcy5fbG9jYWxlPWh0KCksdGhpcy5fYnViYmxlKCl9ZnVuY3Rpb24gUnQoZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBIdH1mdW5jdGlvbiBVdChlKXtyZXR1cm4gZTwwPy0xKk1hdGgucm91bmQoLTEqZSk6TWF0aC5yb3VuZChlKX1mdW5jdGlvbiBGdChlLG4pe0koZSwwLDAsZnVuY3Rpb24oKXt2YXIgZT10aGlzLnV0Y09mZnNldCgpLHQ9XCIrXCI7cmV0dXJuIGU8MCYmKGU9LWUsdD1cIi1cIiksdCtMKH5+KGUvNjApLDIpK24rTCh+fmUlNjAsMil9KX1GdChcIlpcIixcIjpcIiksRnQoXCJaWlwiLFwiXCIpLHVlKFwiWlwiLHJlKSx1ZShcIlpaXCIscmUpLGNlKFtcIlpcIixcIlpaXCJdLGZ1bmN0aW9uKGUsdCxuKXtuLl91c2VVVEM9ITAsbi5fdHptPU50KHJlLGUpfSk7dmFyIEx0PS8oW1xcK1xcLV18XFxkXFxkKS9naTtmdW5jdGlvbiBOdChlLHQpe3ZhciBuPSh0fHxcIlwiKS5tYXRjaChlKTtpZihudWxsPT09bilyZXR1cm4gbnVsbDt2YXIgcz0oKG5bbi5sZW5ndGgtMV18fFtdKStcIlwiKS5tYXRjaChMdCl8fFtcIi1cIiwwLDBdLGk9NjAqc1sxXStEKHNbMl0pO3JldHVybiAwPT09aT8wOlwiK1wiPT09c1swXT9pOi1pfWZ1bmN0aW9uIEd0KGUsdCl7dmFyIG4scztyZXR1cm4gdC5faXNVVEM/KG49dC5jbG9uZSgpLHM9KGsoZSl8fGQoZSk/ZS52YWx1ZU9mKCk6YnQoZSkudmFsdWVPZigpKS1uLnZhbHVlT2YoKSxuLl9kLnNldFRpbWUobi5fZC52YWx1ZU9mKCkrcyksYy51cGRhdGVPZmZzZXQobiwhMSksbik6YnQoZSkubG9jYWwoKX1mdW5jdGlvbiBWdChlKXtyZXR1cm4gMTUqLU1hdGgucm91bmQoZS5fZC5nZXRUaW1lem9uZU9mZnNldCgpLzE1KX1mdW5jdGlvbiBFdCgpe3JldHVybiEhdGhpcy5pc1ZhbGlkKCkmJih0aGlzLl9pc1VUQyYmMD09PXRoaXMuX29mZnNldCl9Yy51cGRhdGVPZmZzZXQ9ZnVuY3Rpb24oKXt9O3ZhciBJdD0vXihcXC18XFwrKT8oPzooXFxkKilbLiBdKT8oXFxkKylcXDooXFxkKykoPzpcXDooXFxkKykoXFwuXFxkKik/KT8kLyxBdD0vXigtfFxcKyk/UCg/OihbLStdP1swLTksLl0qKVkpPyg/OihbLStdP1swLTksLl0qKU0pPyg/OihbLStdP1swLTksLl0qKVcpPyg/OihbLStdP1swLTksLl0qKUQpPyg/OlQoPzooWy0rXT9bMC05LC5dKilIKT8oPzooWy0rXT9bMC05LC5dKilNKT8oPzooWy0rXT9bMC05LC5dKilTKT8pPyQvO2Z1bmN0aW9uIGp0KGUsdCl7dmFyIG4scyxpLHI9ZSxhPW51bGw7cmV0dXJuIFJ0KGUpP3I9e21zOmUuX21pbGxpc2Vjb25kcyxkOmUuX2RheXMsTTplLl9tb250aHN9OmgoZSk/KHI9e30sdD9yW3RdPWU6ci5taWxsaXNlY29uZHM9ZSk6KGE9SXQuZXhlYyhlKSk/KG49XCItXCI9PT1hWzFdPy0xOjEscj17eTowLGQ6RChhW3llXSkqbixoOkQoYVtnZV0pKm4sbTpEKGFbdmVdKSpuLHM6RChhW3BlXSkqbixtczpEKFV0KDFlMyphW3dlXSkpKm59KTooYT1BdC5leGVjKGUpKT8obj1cIi1cIj09PWFbMV0/LTE6MSxyPXt5Olp0KGFbMl0sbiksTTpadChhWzNdLG4pLHc6WnQoYVs0XSxuKSxkOlp0KGFbNV0sbiksaDpadChhWzZdLG4pLG06WnQoYVs3XSxuKSxzOlp0KGFbOF0sbil9KTpudWxsPT1yP3I9e306XCJvYmplY3RcIj09dHlwZW9mIHImJihcImZyb21cImluIHJ8fFwidG9cImluIHIpJiYoaT1mdW5jdGlvbihlLHQpe3ZhciBuO2lmKCFlLmlzVmFsaWQoKXx8IXQuaXNWYWxpZCgpKXJldHVybnttaWxsaXNlY29uZHM6MCxtb250aHM6MH07dD1HdCh0LGUpLGUuaXNCZWZvcmUodCk/bj16dChlLHQpOigobj16dCh0LGUpKS5taWxsaXNlY29uZHM9LW4ubWlsbGlzZWNvbmRzLG4ubW9udGhzPS1uLm1vbnRocyk7cmV0dXJuIG59KGJ0KHIuZnJvbSksYnQoci50bykpLChyPXt9KS5tcz1pLm1pbGxpc2Vjb25kcyxyLk09aS5tb250aHMpLHM9bmV3IEh0KHIpLFJ0KGUpJiZtKGUsXCJfbG9jYWxlXCIpJiYocy5fbG9jYWxlPWUuX2xvY2FsZSksc31mdW5jdGlvbiBadChlLHQpe3ZhciBuPWUmJnBhcnNlRmxvYXQoZS5yZXBsYWNlKFwiLFwiLFwiLlwiKSk7cmV0dXJuKGlzTmFOKG4pPzA6bikqdH1mdW5jdGlvbiB6dChlLHQpe3ZhciBuPXt9O3JldHVybiBuLm1vbnRocz10Lm1vbnRoKCktZS5tb250aCgpKzEyKih0LnllYXIoKS1lLnllYXIoKSksZS5jbG9uZSgpLmFkZChuLm1vbnRocyxcIk1cIikuaXNBZnRlcih0KSYmLS1uLm1vbnRocyxuLm1pbGxpc2Vjb25kcz0rdC0rZS5jbG9uZSgpLmFkZChuLm1vbnRocyxcIk1cIiksbn1mdW5jdGlvbiAkdChzLGkpe3JldHVybiBmdW5jdGlvbihlLHQpe3ZhciBuO3JldHVybiBudWxsPT09dHx8aXNOYU4oK3QpfHwoVChpLFwibW9tZW50KCkuXCIraStcIihwZXJpb2QsIG51bWJlcikgaXMgZGVwcmVjYXRlZC4gUGxlYXNlIHVzZSBtb21lbnQoKS5cIitpK1wiKG51bWJlciwgcGVyaW9kKS4gU2VlIGh0dHA6Ly9tb21lbnRqcy5jb20vZ3VpZGVzLyMvd2FybmluZ3MvYWRkLWludmVydGVkLXBhcmFtLyBmb3IgbW9yZSBpbmZvLlwiKSxuPWUsZT10LHQ9bikscXQodGhpcyxqdChlPVwic3RyaW5nXCI9PXR5cGVvZiBlPytlOmUsdCkscyksdGhpc319ZnVuY3Rpb24gcXQoZSx0LG4scyl7dmFyIGk9dC5fbWlsbGlzZWNvbmRzLHI9VXQodC5fZGF5cyksYT1VdCh0Ll9tb250aHMpO2UuaXNWYWxpZCgpJiYocz1udWxsPT1zfHxzLGEmJlJlKGUsYmUoZSxcIk1vbnRoXCIpK2EqbiksciYmeGUoZSxcIkRhdGVcIixiZShlLFwiRGF0ZVwiKStyKm4pLGkmJmUuX2Quc2V0VGltZShlLl9kLnZhbHVlT2YoKStpKm4pLHMmJmMudXBkYXRlT2Zmc2V0KGUscnx8YSkpfWp0LmZuPUh0LnByb3RvdHlwZSxqdC5pbnZhbGlkPWZ1bmN0aW9uKCl7cmV0dXJuIGp0KE5hTil9O3ZhciBKdD0kdCgxLFwiYWRkXCIpLEJ0PSR0KC0xLFwic3VidHJhY3RcIik7ZnVuY3Rpb24gUXQoZSx0KXt2YXIgbj0xMioodC55ZWFyKCktZS55ZWFyKCkpKyh0Lm1vbnRoKCktZS5tb250aCgpKSxzPWUuY2xvbmUoKS5hZGQobixcIm1vbnRoc1wiKTtyZXR1cm4tKG4rKHQtczwwPyh0LXMpLyhzLWUuY2xvbmUoKS5hZGQobi0xLFwibW9udGhzXCIpKToodC1zKS8oZS5jbG9uZSgpLmFkZChuKzEsXCJtb250aHNcIiktcykpKXx8MH1mdW5jdGlvbiBYdChlKXt2YXIgdDtyZXR1cm4gdm9pZCAwPT09ZT90aGlzLl9sb2NhbGUuX2FiYnI6KG51bGwhPSh0PWh0KGUpKSYmKHRoaXMuX2xvY2FsZT10KSx0aGlzKX1jLmRlZmF1bHRGb3JtYXQ9XCJZWVlZLU1NLUREVEhIOm1tOnNzWlwiLGMuZGVmYXVsdEZvcm1hdFV0Yz1cIllZWVktTU0tRERUSEg6bW06c3NbWl1cIjt2YXIgS3Q9bihcIm1vbWVudCgpLmxhbmcoKSBpcyBkZXByZWNhdGVkLiBJbnN0ZWFkLCB1c2UgbW9tZW50KCkubG9jYWxlRGF0YSgpIHRvIGdldCB0aGUgbGFuZ3VhZ2UgY29uZmlndXJhdGlvbi4gVXNlIG1vbWVudCgpLmxvY2FsZSgpIHRvIGNoYW5nZSBsYW5ndWFnZXMuXCIsZnVuY3Rpb24oZSl7cmV0dXJuIHZvaWQgMD09PWU/dGhpcy5sb2NhbGVEYXRhKCk6dGhpcy5sb2NhbGUoZSl9KTtmdW5jdGlvbiBlbigpe3JldHVybiB0aGlzLl9sb2NhbGV9dmFyIHRuPTEyNjIyNzgwOGU1O2Z1bmN0aW9uIG5uKGUsdCl7cmV0dXJuKGUldCt0KSV0fWZ1bmN0aW9uIHNuKGUsdCxuKXtyZXR1cm4gZTwxMDAmJjA8PWU/bmV3IERhdGUoZSs0MDAsdCxuKS10bjpuZXcgRGF0ZShlLHQsbikudmFsdWVPZigpfWZ1bmN0aW9uIHJuKGUsdCxuKXtyZXR1cm4gZTwxMDAmJjA8PWU/RGF0ZS5VVEMoZSs0MDAsdCxuKS10bjpEYXRlLlVUQyhlLHQsbil9ZnVuY3Rpb24gYW4oZSx0KXtJKDAsW2UsZS5sZW5ndGhdLDAsdCl9ZnVuY3Rpb24gb24oZSx0LG4scyxpKXt2YXIgcjtyZXR1cm4gbnVsbD09ZT9JZSh0aGlzLHMsaSkueWVhcjooKHI9QWUoZSxzLGkpKTx0JiYodD1yKSxmdW5jdGlvbihlLHQsbixzLGkpe3ZhciByPUVlKGUsdCxuLHMsaSksYT1HZShyLnllYXIsMCxyLmRheU9mWWVhcik7cmV0dXJuIHRoaXMueWVhcihhLmdldFVUQ0Z1bGxZZWFyKCkpLHRoaXMubW9udGgoYS5nZXRVVENNb250aCgpKSx0aGlzLmRhdGUoYS5nZXRVVENEYXRlKCkpLHRoaXN9LmNhbGwodGhpcyxlLHQsbixzLGkpKX1JKDAsW1wiZ2dcIiwyXSwwLGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMud2Vla1llYXIoKSUxMDB9KSxJKDAsW1wiR0dcIiwyXSwwLGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaXNvV2Vla1llYXIoKSUxMDB9KSxhbihcImdnZ2dcIixcIndlZWtZZWFyXCIpLGFuKFwiZ2dnZ2dcIixcIndlZWtZZWFyXCIpLGFuKFwiR0dHR1wiLFwiaXNvV2Vla1llYXJcIiksYW4oXCJHR0dHR1wiLFwiaXNvV2Vla1llYXJcIiksQyhcIndlZWtZZWFyXCIsXCJnZ1wiKSxDKFwiaXNvV2Vla1llYXJcIixcIkdHXCIpLEYoXCJ3ZWVrWWVhclwiLDEpLEYoXCJpc29XZWVrWWVhclwiLDEpLHVlKFwiR1wiLHNlKSx1ZShcImdcIixzZSksdWUoXCJHR1wiLEIseiksdWUoXCJnZ1wiLEIseiksdWUoXCJHR0dHXCIsZWUscSksdWUoXCJnZ2dnXCIsZWUscSksdWUoXCJHR0dHR1wiLHRlLEopLHVlKFwiZ2dnZ2dcIix0ZSxKKSxmZShbXCJnZ2dnXCIsXCJnZ2dnZ1wiLFwiR0dHR1wiLFwiR0dHR0dcIl0sZnVuY3Rpb24oZSx0LG4scyl7dFtzLnN1YnN0cigwLDIpXT1EKGUpfSksZmUoW1wiZ2dcIixcIkdHXCJdLGZ1bmN0aW9uKGUsdCxuLHMpe3Rbc109Yy5wYXJzZVR3b0RpZ2l0WWVhcihlKX0pLEkoXCJRXCIsMCxcIlFvXCIsXCJxdWFydGVyXCIpLEMoXCJxdWFydGVyXCIsXCJRXCIpLEYoXCJxdWFydGVyXCIsNyksdWUoXCJRXCIsWiksY2UoXCJRXCIsZnVuY3Rpb24oZSx0KXt0W19lXT0zKihEKGUpLTEpfSksSShcIkRcIixbXCJERFwiLDJdLFwiRG9cIixcImRhdGVcIiksQyhcImRhdGVcIixcIkRcIiksRihcImRhdGVcIiw5KSx1ZShcIkRcIixCKSx1ZShcIkREXCIsQix6KSx1ZShcIkRvXCIsZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT90Ll9kYXlPZk1vbnRoT3JkaW5hbFBhcnNlfHx0Ll9vcmRpbmFsUGFyc2U6dC5fZGF5T2ZNb250aE9yZGluYWxQYXJzZUxlbmllbnR9KSxjZShbXCJEXCIsXCJERFwiXSx5ZSksY2UoXCJEb1wiLGZ1bmN0aW9uKGUsdCl7dFt5ZV09RChlLm1hdGNoKEIpWzBdKX0pO3ZhciB1bj1UZShcIkRhdGVcIiwhMCk7SShcIkRERFwiLFtcIkRERERcIiwzXSxcIkRERG9cIixcImRheU9mWWVhclwiKSxDKFwiZGF5T2ZZZWFyXCIsXCJERERcIiksRihcImRheU9mWWVhclwiLDQpLHVlKFwiREREXCIsSyksdWUoXCJEREREXCIsJCksY2UoW1wiREREXCIsXCJEREREXCJdLGZ1bmN0aW9uKGUsdCxuKXtuLl9kYXlPZlllYXI9RChlKX0pLEkoXCJtXCIsW1wibW1cIiwyXSwwLFwibWludXRlXCIpLEMoXCJtaW51dGVcIixcIm1cIiksRihcIm1pbnV0ZVwiLDE0KSx1ZShcIm1cIixCKSx1ZShcIm1tXCIsQix6KSxjZShbXCJtXCIsXCJtbVwiXSx2ZSk7dmFyIGxuPVRlKFwiTWludXRlc1wiLCExKTtJKFwic1wiLFtcInNzXCIsMl0sMCxcInNlY29uZFwiKSxDKFwic2Vjb25kXCIsXCJzXCIpLEYoXCJzZWNvbmRcIiwxNSksdWUoXCJzXCIsQiksdWUoXCJzc1wiLEIseiksY2UoW1wic1wiLFwic3NcIl0scGUpO3ZhciBobixkbj1UZShcIlNlY29uZHNcIiwhMSk7Zm9yKEkoXCJTXCIsMCwwLGZ1bmN0aW9uKCl7cmV0dXJufn4odGhpcy5taWxsaXNlY29uZCgpLzEwMCl9KSxJKDAsW1wiU1NcIiwyXSwwLGZ1bmN0aW9uKCl7cmV0dXJufn4odGhpcy5taWxsaXNlY29uZCgpLzEwKX0pLEkoMCxbXCJTU1NcIiwzXSwwLFwibWlsbGlzZWNvbmRcIiksSSgwLFtcIlNTU1NcIiw0XSwwLGZ1bmN0aW9uKCl7cmV0dXJuIDEwKnRoaXMubWlsbGlzZWNvbmQoKX0pLEkoMCxbXCJTU1NTU1wiLDVdLDAsZnVuY3Rpb24oKXtyZXR1cm4gMTAwKnRoaXMubWlsbGlzZWNvbmQoKX0pLEkoMCxbXCJTU1NTU1NcIiw2XSwwLGZ1bmN0aW9uKCl7cmV0dXJuIDFlMyp0aGlzLm1pbGxpc2Vjb25kKCl9KSxJKDAsW1wiU1NTU1NTU1wiLDddLDAsZnVuY3Rpb24oKXtyZXR1cm4gMWU0KnRoaXMubWlsbGlzZWNvbmQoKX0pLEkoMCxbXCJTU1NTU1NTU1wiLDhdLDAsZnVuY3Rpb24oKXtyZXR1cm4gMWU1KnRoaXMubWlsbGlzZWNvbmQoKX0pLEkoMCxbXCJTU1NTU1NTU1NcIiw5XSwwLGZ1bmN0aW9uKCl7cmV0dXJuIDFlNip0aGlzLm1pbGxpc2Vjb25kKCl9KSxDKFwibWlsbGlzZWNvbmRcIixcIm1zXCIpLEYoXCJtaWxsaXNlY29uZFwiLDE2KSx1ZShcIlNcIixLLFopLHVlKFwiU1NcIixLLHopLHVlKFwiU1NTXCIsSywkKSxobj1cIlNTU1NcIjtobi5sZW5ndGg8PTk7aG4rPVwiU1wiKXVlKGhuLG5lKTtmdW5jdGlvbiBjbihlLHQpe3Rbd2VdPUQoMWUzKihcIjAuXCIrZSkpfWZvcihobj1cIlNcIjtobi5sZW5ndGg8PTk7aG4rPVwiU1wiKWNlKGhuLGNuKTt2YXIgZm49VGUoXCJNaWxsaXNlY29uZHNcIiwhMSk7SShcInpcIiwwLDAsXCJ6b25lQWJiclwiKSxJKFwienpcIiwwLDAsXCJ6b25lTmFtZVwiKTt2YXIgbW49TS5wcm90b3R5cGU7ZnVuY3Rpb24gX24oZSl7cmV0dXJuIGV9bW4uYWRkPUp0LG1uLmNhbGVuZGFyPWZ1bmN0aW9uKGUsdCl7dmFyIG49ZXx8YnQoKSxzPUd0KG4sdGhpcykuc3RhcnRPZihcImRheVwiKSxpPWMuY2FsZW5kYXJGb3JtYXQodGhpcyxzKXx8XCJzYW1lRWxzZVwiLHI9dCYmKGIodFtpXSk/dFtpXS5jYWxsKHRoaXMsbik6dFtpXSk7cmV0dXJuIHRoaXMuZm9ybWF0KHJ8fHRoaXMubG9jYWxlRGF0YSgpLmNhbGVuZGFyKGksdGhpcyxidChuKSkpfSxtbi5jbG9uZT1mdW5jdGlvbigpe3JldHVybiBuZXcgTSh0aGlzKX0sbW4uZGlmZj1mdW5jdGlvbihlLHQsbil7dmFyIHMsaSxyO2lmKCF0aGlzLmlzVmFsaWQoKSlyZXR1cm4gTmFOO2lmKCEocz1HdChlLHRoaXMpKS5pc1ZhbGlkKCkpcmV0dXJuIE5hTjtzd2l0Y2goaT02ZTQqKHMudXRjT2Zmc2V0KCktdGhpcy51dGNPZmZzZXQoKSksdD1IKHQpKXtjYXNlXCJ5ZWFyXCI6cj1RdCh0aGlzLHMpLzEyO2JyZWFrO2Nhc2VcIm1vbnRoXCI6cj1RdCh0aGlzLHMpO2JyZWFrO2Nhc2VcInF1YXJ0ZXJcIjpyPVF0KHRoaXMscykvMzticmVhaztjYXNlXCJzZWNvbmRcIjpyPSh0aGlzLXMpLzFlMzticmVhaztjYXNlXCJtaW51dGVcIjpyPSh0aGlzLXMpLzZlNDticmVhaztjYXNlXCJob3VyXCI6cj0odGhpcy1zKS8zNmU1O2JyZWFrO2Nhc2VcImRheVwiOnI9KHRoaXMtcy1pKS84NjRlNTticmVhaztjYXNlXCJ3ZWVrXCI6cj0odGhpcy1zLWkpLzYwNDhlNTticmVhaztkZWZhdWx0OnI9dGhpcy1zfXJldHVybiBuP3I6UyhyKX0sbW4uZW5kT2Y9ZnVuY3Rpb24oZSl7dmFyIHQ7aWYodm9pZCAwPT09KGU9SChlKSl8fFwibWlsbGlzZWNvbmRcIj09PWV8fCF0aGlzLmlzVmFsaWQoKSlyZXR1cm4gdGhpczt2YXIgbj10aGlzLl9pc1VUQz9ybjpzbjtzd2l0Y2goZSl7Y2FzZVwieWVhclwiOnQ9bih0aGlzLnllYXIoKSsxLDAsMSktMTticmVhaztjYXNlXCJxdWFydGVyXCI6dD1uKHRoaXMueWVhcigpLHRoaXMubW9udGgoKS10aGlzLm1vbnRoKCklMyszLDEpLTE7YnJlYWs7Y2FzZVwibW9udGhcIjp0PW4odGhpcy55ZWFyKCksdGhpcy5tb250aCgpKzEsMSktMTticmVhaztjYXNlXCJ3ZWVrXCI6dD1uKHRoaXMueWVhcigpLHRoaXMubW9udGgoKSx0aGlzLmRhdGUoKS10aGlzLndlZWtkYXkoKSs3KS0xO2JyZWFrO2Nhc2VcImlzb1dlZWtcIjp0PW4odGhpcy55ZWFyKCksdGhpcy5tb250aCgpLHRoaXMuZGF0ZSgpLSh0aGlzLmlzb1dlZWtkYXkoKS0xKSs3KS0xO2JyZWFrO2Nhc2VcImRheVwiOmNhc2VcImRhdGVcIjp0PW4odGhpcy55ZWFyKCksdGhpcy5tb250aCgpLHRoaXMuZGF0ZSgpKzEpLTE7YnJlYWs7Y2FzZVwiaG91clwiOnQ9dGhpcy5fZC52YWx1ZU9mKCksdCs9MzZlNS1ubih0Kyh0aGlzLl9pc1VUQz8wOjZlNCp0aGlzLnV0Y09mZnNldCgpKSwzNmU1KS0xO2JyZWFrO2Nhc2VcIm1pbnV0ZVwiOnQ9dGhpcy5fZC52YWx1ZU9mKCksdCs9NmU0LW5uKHQsNmU0KS0xO2JyZWFrO2Nhc2VcInNlY29uZFwiOnQ9dGhpcy5fZC52YWx1ZU9mKCksdCs9MWUzLW5uKHQsMWUzKS0xO2JyZWFrfXJldHVybiB0aGlzLl9kLnNldFRpbWUodCksYy51cGRhdGVPZmZzZXQodGhpcywhMCksdGhpc30sbW4uZm9ybWF0PWZ1bmN0aW9uKGUpe2V8fChlPXRoaXMuaXNVdGMoKT9jLmRlZmF1bHRGb3JtYXRVdGM6Yy5kZWZhdWx0Rm9ybWF0KTt2YXIgdD1BKHRoaXMsZSk7cmV0dXJuIHRoaXMubG9jYWxlRGF0YSgpLnBvc3Rmb3JtYXQodCl9LG1uLmZyb209ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdGhpcy5pc1ZhbGlkKCkmJihrKGUpJiZlLmlzVmFsaWQoKXx8YnQoZSkuaXNWYWxpZCgpKT9qdCh7dG86dGhpcyxmcm9tOmV9KS5sb2NhbGUodGhpcy5sb2NhbGUoKSkuaHVtYW5pemUoIXQpOnRoaXMubG9jYWxlRGF0YSgpLmludmFsaWREYXRlKCl9LG1uLmZyb21Ob3c9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuZnJvbShidCgpLGUpfSxtbi50bz1mdW5jdGlvbihlLHQpe3JldHVybiB0aGlzLmlzVmFsaWQoKSYmKGsoZSkmJmUuaXNWYWxpZCgpfHxidChlKS5pc1ZhbGlkKCkpP2p0KHtmcm9tOnRoaXMsdG86ZX0pLmxvY2FsZSh0aGlzLmxvY2FsZSgpKS5odW1hbml6ZSghdCk6dGhpcy5sb2NhbGVEYXRhKCkuaW52YWxpZERhdGUoKX0sbW4udG9Ob3c9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMudG8oYnQoKSxlKX0sbW4uZ2V0PWZ1bmN0aW9uKGUpe3JldHVybiBiKHRoaXNbZT1IKGUpXSk/dGhpc1tlXSgpOnRoaXN9LG1uLmludmFsaWRBdD1mdW5jdGlvbigpe3JldHVybiBnKHRoaXMpLm92ZXJmbG93fSxtbi5pc0FmdGVyPWZ1bmN0aW9uKGUsdCl7dmFyIG49ayhlKT9lOmJ0KGUpO3JldHVybiEoIXRoaXMuaXNWYWxpZCgpfHwhbi5pc1ZhbGlkKCkpJiYoXCJtaWxsaXNlY29uZFwiPT09KHQ9SCh0KXx8XCJtaWxsaXNlY29uZFwiKT90aGlzLnZhbHVlT2YoKT5uLnZhbHVlT2YoKTpuLnZhbHVlT2YoKTx0aGlzLmNsb25lKCkuc3RhcnRPZih0KS52YWx1ZU9mKCkpfSxtbi5pc0JlZm9yZT1mdW5jdGlvbihlLHQpe3ZhciBuPWsoZSk/ZTpidChlKTtyZXR1cm4hKCF0aGlzLmlzVmFsaWQoKXx8IW4uaXNWYWxpZCgpKSYmKFwibWlsbGlzZWNvbmRcIj09PSh0PUgodCl8fFwibWlsbGlzZWNvbmRcIik/dGhpcy52YWx1ZU9mKCk8bi52YWx1ZU9mKCk6dGhpcy5jbG9uZSgpLmVuZE9mKHQpLnZhbHVlT2YoKTxuLnZhbHVlT2YoKSl9LG1uLmlzQmV0d2Vlbj1mdW5jdGlvbihlLHQsbixzKXt2YXIgaT1rKGUpP2U6YnQoZSkscj1rKHQpP3Q6YnQodCk7cmV0dXJuISEodGhpcy5pc1ZhbGlkKCkmJmkuaXNWYWxpZCgpJiZyLmlzVmFsaWQoKSkmJihcIihcIj09PShzPXN8fFwiKClcIilbMF0/dGhpcy5pc0FmdGVyKGksbik6IXRoaXMuaXNCZWZvcmUoaSxuKSkmJihcIilcIj09PXNbMV0/dGhpcy5pc0JlZm9yZShyLG4pOiF0aGlzLmlzQWZ0ZXIocixuKSl9LG1uLmlzU2FtZT1mdW5jdGlvbihlLHQpe3ZhciBuLHM9ayhlKT9lOmJ0KGUpO3JldHVybiEoIXRoaXMuaXNWYWxpZCgpfHwhcy5pc1ZhbGlkKCkpJiYoXCJtaWxsaXNlY29uZFwiPT09KHQ9SCh0KXx8XCJtaWxsaXNlY29uZFwiKT90aGlzLnZhbHVlT2YoKT09PXMudmFsdWVPZigpOihuPXMudmFsdWVPZigpLHRoaXMuY2xvbmUoKS5zdGFydE9mKHQpLnZhbHVlT2YoKTw9biYmbjw9dGhpcy5jbG9uZSgpLmVuZE9mKHQpLnZhbHVlT2YoKSkpfSxtbi5pc1NhbWVPckFmdGVyPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRoaXMuaXNTYW1lKGUsdCl8fHRoaXMuaXNBZnRlcihlLHQpfSxtbi5pc1NhbWVPckJlZm9yZT1mdW5jdGlvbihlLHQpe3JldHVybiB0aGlzLmlzU2FtZShlLHQpfHx0aGlzLmlzQmVmb3JlKGUsdCl9LG1uLmlzVmFsaWQ9ZnVuY3Rpb24oKXtyZXR1cm4gdih0aGlzKX0sbW4ubGFuZz1LdCxtbi5sb2NhbGU9WHQsbW4ubG9jYWxlRGF0YT1lbixtbi5tYXg9UHQsbW4ubWluPXh0LG1uLnBhcnNpbmdGbGFncz1mdW5jdGlvbigpe3JldHVybiBfKHt9LGcodGhpcykpfSxtbi5zZXQ9ZnVuY3Rpb24oZSx0KXtpZihcIm9iamVjdFwiPT10eXBlb2YgZSlmb3IodmFyIG49ZnVuY3Rpb24oZSl7dmFyIHQ9W107Zm9yKHZhciBuIGluIGUpdC5wdXNoKHt1bml0Om4scHJpb3JpdHk6VVtuXX0pO3JldHVybiB0LnNvcnQoZnVuY3Rpb24oZSx0KXtyZXR1cm4gZS5wcmlvcml0eS10LnByaW9yaXR5fSksdH0oZT1SKGUpKSxzPTA7czxuLmxlbmd0aDtzKyspdGhpc1tuW3NdLnVuaXRdKGVbbltzXS51bml0XSk7ZWxzZSBpZihiKHRoaXNbZT1IKGUpXSkpcmV0dXJuIHRoaXNbZV0odCk7cmV0dXJuIHRoaXN9LG1uLnN0YXJ0T2Y9ZnVuY3Rpb24oZSl7dmFyIHQ7aWYodm9pZCAwPT09KGU9SChlKSl8fFwibWlsbGlzZWNvbmRcIj09PWV8fCF0aGlzLmlzVmFsaWQoKSlyZXR1cm4gdGhpczt2YXIgbj10aGlzLl9pc1VUQz9ybjpzbjtzd2l0Y2goZSl7Y2FzZVwieWVhclwiOnQ9bih0aGlzLnllYXIoKSwwLDEpO2JyZWFrO2Nhc2VcInF1YXJ0ZXJcIjp0PW4odGhpcy55ZWFyKCksdGhpcy5tb250aCgpLXRoaXMubW9udGgoKSUzLDEpO2JyZWFrO2Nhc2VcIm1vbnRoXCI6dD1uKHRoaXMueWVhcigpLHRoaXMubW9udGgoKSwxKTticmVhaztjYXNlXCJ3ZWVrXCI6dD1uKHRoaXMueWVhcigpLHRoaXMubW9udGgoKSx0aGlzLmRhdGUoKS10aGlzLndlZWtkYXkoKSk7YnJlYWs7Y2FzZVwiaXNvV2Vla1wiOnQ9bih0aGlzLnllYXIoKSx0aGlzLm1vbnRoKCksdGhpcy5kYXRlKCktKHRoaXMuaXNvV2Vla2RheSgpLTEpKTticmVhaztjYXNlXCJkYXlcIjpjYXNlXCJkYXRlXCI6dD1uKHRoaXMueWVhcigpLHRoaXMubW9udGgoKSx0aGlzLmRhdGUoKSk7YnJlYWs7Y2FzZVwiaG91clwiOnQ9dGhpcy5fZC52YWx1ZU9mKCksdC09bm4odCsodGhpcy5faXNVVEM/MDo2ZTQqdGhpcy51dGNPZmZzZXQoKSksMzZlNSk7YnJlYWs7Y2FzZVwibWludXRlXCI6dD10aGlzLl9kLnZhbHVlT2YoKSx0LT1ubih0LDZlNCk7YnJlYWs7Y2FzZVwic2Vjb25kXCI6dD10aGlzLl9kLnZhbHVlT2YoKSx0LT1ubih0LDFlMyk7YnJlYWt9cmV0dXJuIHRoaXMuX2Quc2V0VGltZSh0KSxjLnVwZGF0ZU9mZnNldCh0aGlzLCEwKSx0aGlzfSxtbi5zdWJ0cmFjdD1CdCxtbi50b0FycmF5PWZ1bmN0aW9uKCl7dmFyIGU9dGhpcztyZXR1cm5bZS55ZWFyKCksZS5tb250aCgpLGUuZGF0ZSgpLGUuaG91cigpLGUubWludXRlKCksZS5zZWNvbmQoKSxlLm1pbGxpc2Vjb25kKCldfSxtbi50b09iamVjdD1mdW5jdGlvbigpe3ZhciBlPXRoaXM7cmV0dXJue3llYXJzOmUueWVhcigpLG1vbnRoczplLm1vbnRoKCksZGF0ZTplLmRhdGUoKSxob3VyczplLmhvdXJzKCksbWludXRlczplLm1pbnV0ZXMoKSxzZWNvbmRzOmUuc2Vjb25kcygpLG1pbGxpc2Vjb25kczplLm1pbGxpc2Vjb25kcygpfX0sbW4udG9EYXRlPWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBEYXRlKHRoaXMudmFsdWVPZigpKX0sbW4udG9JU09TdHJpbmc9ZnVuY3Rpb24oZSl7aWYoIXRoaXMuaXNWYWxpZCgpKXJldHVybiBudWxsO3ZhciB0PSEwIT09ZSxuPXQ/dGhpcy5jbG9uZSgpLnV0YygpOnRoaXM7cmV0dXJuIG4ueWVhcigpPDB8fDk5OTk8bi55ZWFyKCk/QShuLHQ/XCJZWVlZWVktTU0tRERbVF1ISDptbTpzcy5TU1NbWl1cIjpcIllZWVlZWS1NTS1ERFtUXUhIOm1tOnNzLlNTU1pcIik6YihEYXRlLnByb3RvdHlwZS50b0lTT1N0cmluZyk/dD90aGlzLnRvRGF0ZSgpLnRvSVNPU3RyaW5nKCk6bmV3IERhdGUodGhpcy52YWx1ZU9mKCkrNjAqdGhpcy51dGNPZmZzZXQoKSoxZTMpLnRvSVNPU3RyaW5nKCkucmVwbGFjZShcIlpcIixBKG4sXCJaXCIpKTpBKG4sdD9cIllZWVktTU0tRERbVF1ISDptbTpzcy5TU1NbWl1cIjpcIllZWVktTU0tRERbVF1ISDptbTpzcy5TU1NaXCIpfSxtbi5pbnNwZWN0PWZ1bmN0aW9uKCl7aWYoIXRoaXMuaXNWYWxpZCgpKXJldHVyblwibW9tZW50LmludmFsaWQoLyogXCIrdGhpcy5faStcIiAqLylcIjt2YXIgZT1cIm1vbWVudFwiLHQ9XCJcIjt0aGlzLmlzTG9jYWwoKXx8KGU9MD09PXRoaXMudXRjT2Zmc2V0KCk/XCJtb21lbnQudXRjXCI6XCJtb21lbnQucGFyc2Vab25lXCIsdD1cIlpcIik7dmFyIG49XCJbXCIrZSsnKFwiXScscz0wPD10aGlzLnllYXIoKSYmdGhpcy55ZWFyKCk8PTk5OTk/XCJZWVlZXCI6XCJZWVlZWVlcIixpPXQrJ1tcIildJztyZXR1cm4gdGhpcy5mb3JtYXQobitzK1wiLU1NLUREW1RdSEg6bW06c3MuU1NTXCIraSl9LG1uLnRvSlNPTj1mdW5jdGlvbigpe3JldHVybiB0aGlzLmlzVmFsaWQoKT90aGlzLnRvSVNPU3RyaW5nKCk6bnVsbH0sbW4udG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jbG9uZSgpLmxvY2FsZShcImVuXCIpLmZvcm1hdChcImRkZCBNTU0gREQgWVlZWSBISDptbTpzcyBbR01UXVpaXCIpfSxtbi51bml4PWZ1bmN0aW9uKCl7cmV0dXJuIE1hdGguZmxvb3IodGhpcy52YWx1ZU9mKCkvMWUzKX0sbW4udmFsdWVPZj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9kLnZhbHVlT2YoKS02ZTQqKHRoaXMuX29mZnNldHx8MCl9LG1uLmNyZWF0aW9uRGF0YT1mdW5jdGlvbigpe3JldHVybntpbnB1dDp0aGlzLl9pLGZvcm1hdDp0aGlzLl9mLGxvY2FsZTp0aGlzLl9sb2NhbGUsaXNVVEM6dGhpcy5faXNVVEMsc3RyaWN0OnRoaXMuX3N0cmljdH19LG1uLnllYXI9T2UsbW4uaXNMZWFwWWVhcj1mdW5jdGlvbigpe3JldHVybiBEZSh0aGlzLnllYXIoKSl9LG1uLndlZWtZZWFyPWZ1bmN0aW9uKGUpe3JldHVybiBvbi5jYWxsKHRoaXMsZSx0aGlzLndlZWsoKSx0aGlzLndlZWtkYXkoKSx0aGlzLmxvY2FsZURhdGEoKS5fd2Vlay5kb3csdGhpcy5sb2NhbGVEYXRhKCkuX3dlZWsuZG95KX0sbW4uaXNvV2Vla1llYXI9ZnVuY3Rpb24oZSl7cmV0dXJuIG9uLmNhbGwodGhpcyxlLHRoaXMuaXNvV2VlaygpLHRoaXMuaXNvV2Vla2RheSgpLDEsNCl9LG1uLnF1YXJ0ZXI9bW4ucXVhcnRlcnM9ZnVuY3Rpb24oZSl7cmV0dXJuIG51bGw9PWU/TWF0aC5jZWlsKCh0aGlzLm1vbnRoKCkrMSkvMyk6dGhpcy5tb250aCgzKihlLTEpK3RoaXMubW9udGgoKSUzKX0sbW4ubW9udGg9VWUsbW4uZGF5c0luTW9udGg9ZnVuY3Rpb24oKXtyZXR1cm4gUGUodGhpcy55ZWFyKCksdGhpcy5tb250aCgpKX0sbW4ud2Vlaz1tbi53ZWVrcz1mdW5jdGlvbihlKXt2YXIgdD10aGlzLmxvY2FsZURhdGEoKS53ZWVrKHRoaXMpO3JldHVybiBudWxsPT1lP3Q6dGhpcy5hZGQoNyooZS10KSxcImRcIil9LG1uLmlzb1dlZWs9bW4uaXNvV2Vla3M9ZnVuY3Rpb24oZSl7dmFyIHQ9SWUodGhpcywxLDQpLndlZWs7cmV0dXJuIG51bGw9PWU/dDp0aGlzLmFkZCg3KihlLXQpLFwiZFwiKX0sbW4ud2Vla3NJblllYXI9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLmxvY2FsZURhdGEoKS5fd2VlaztyZXR1cm4gQWUodGhpcy55ZWFyKCksZS5kb3csZS5kb3kpfSxtbi5pc29XZWVrc0luWWVhcj1mdW5jdGlvbigpe3JldHVybiBBZSh0aGlzLnllYXIoKSwxLDQpfSxtbi5kYXRlPXVuLG1uLmRheT1tbi5kYXlzPWZ1bmN0aW9uKGUpe2lmKCF0aGlzLmlzVmFsaWQoKSlyZXR1cm4gbnVsbCE9ZT90aGlzOk5hTjt2YXIgdCxuLHM9dGhpcy5faXNVVEM/dGhpcy5fZC5nZXRVVENEYXkoKTp0aGlzLl9kLmdldERheSgpO3JldHVybiBudWxsIT1lPyh0PWUsbj10aGlzLmxvY2FsZURhdGEoKSxlPVwic3RyaW5nXCIhPXR5cGVvZiB0P3Q6aXNOYU4odCk/XCJudW1iZXJcIj09dHlwZW9mKHQ9bi53ZWVrZGF5c1BhcnNlKHQpKT90Om51bGw6cGFyc2VJbnQodCwxMCksdGhpcy5hZGQoZS1zLFwiZFwiKSk6c30sbW4ud2Vla2RheT1mdW5jdGlvbihlKXtpZighdGhpcy5pc1ZhbGlkKCkpcmV0dXJuIG51bGwhPWU/dGhpczpOYU47dmFyIHQ9KHRoaXMuZGF5KCkrNy10aGlzLmxvY2FsZURhdGEoKS5fd2Vlay5kb3cpJTc7cmV0dXJuIG51bGw9PWU/dDp0aGlzLmFkZChlLXQsXCJkXCIpfSxtbi5pc29XZWVrZGF5PWZ1bmN0aW9uKGUpe2lmKCF0aGlzLmlzVmFsaWQoKSlyZXR1cm4gbnVsbCE9ZT90aGlzOk5hTjtpZihudWxsPT1lKXJldHVybiB0aGlzLmRheSgpfHw3O3ZhciB0LG4scz0odD1lLG49dGhpcy5sb2NhbGVEYXRhKCksXCJzdHJpbmdcIj09dHlwZW9mIHQ/bi53ZWVrZGF5c1BhcnNlKHQpJTd8fDc6aXNOYU4odCk/bnVsbDp0KTtyZXR1cm4gdGhpcy5kYXkodGhpcy5kYXkoKSU3P3M6cy03KX0sbW4uZGF5T2ZZZWFyPWZ1bmN0aW9uKGUpe3ZhciB0PU1hdGgucm91bmQoKHRoaXMuY2xvbmUoKS5zdGFydE9mKFwiZGF5XCIpLXRoaXMuY2xvbmUoKS5zdGFydE9mKFwieWVhclwiKSkvODY0ZTUpKzE7cmV0dXJuIG51bGw9PWU/dDp0aGlzLmFkZChlLXQsXCJkXCIpfSxtbi5ob3VyPW1uLmhvdXJzPW50LG1uLm1pbnV0ZT1tbi5taW51dGVzPWxuLG1uLnNlY29uZD1tbi5zZWNvbmRzPWRuLG1uLm1pbGxpc2Vjb25kPW1uLm1pbGxpc2Vjb25kcz1mbixtbi51dGNPZmZzZXQ9ZnVuY3Rpb24oZSx0LG4pe3ZhciBzLGk9dGhpcy5fb2Zmc2V0fHwwO2lmKCF0aGlzLmlzVmFsaWQoKSlyZXR1cm4gbnVsbCE9ZT90aGlzOk5hTjtpZihudWxsPT1lKXJldHVybiB0aGlzLl9pc1VUQz9pOlZ0KHRoaXMpO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlKXtpZihudWxsPT09KGU9TnQocmUsZSkpKXJldHVybiB0aGlzfWVsc2UgTWF0aC5hYnMoZSk8MTYmJiFuJiYoZSo9NjApO3JldHVybiF0aGlzLl9pc1VUQyYmdCYmKHM9VnQodGhpcykpLHRoaXMuX29mZnNldD1lLHRoaXMuX2lzVVRDPSEwLG51bGwhPXMmJnRoaXMuYWRkKHMsXCJtXCIpLGkhPT1lJiYoIXR8fHRoaXMuX2NoYW5nZUluUHJvZ3Jlc3M/cXQodGhpcyxqdChlLWksXCJtXCIpLDEsITEpOnRoaXMuX2NoYW5nZUluUHJvZ3Jlc3N8fCh0aGlzLl9jaGFuZ2VJblByb2dyZXNzPSEwLGMudXBkYXRlT2Zmc2V0KHRoaXMsITApLHRoaXMuX2NoYW5nZUluUHJvZ3Jlc3M9bnVsbCkpLHRoaXN9LG1uLnV0Yz1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy51dGNPZmZzZXQoMCxlKX0sbW4ubG9jYWw9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX2lzVVRDJiYodGhpcy51dGNPZmZzZXQoMCxlKSx0aGlzLl9pc1VUQz0hMSxlJiZ0aGlzLnN1YnRyYWN0KFZ0KHRoaXMpLFwibVwiKSksdGhpc30sbW4ucGFyc2Vab25lPWZ1bmN0aW9uKCl7aWYobnVsbCE9dGhpcy5fdHptKXRoaXMudXRjT2Zmc2V0KHRoaXMuX3R6bSwhMSwhMCk7ZWxzZSBpZihcInN0cmluZ1wiPT10eXBlb2YgdGhpcy5faSl7dmFyIGU9TnQoaWUsdGhpcy5faSk7bnVsbCE9ZT90aGlzLnV0Y09mZnNldChlKTp0aGlzLnV0Y09mZnNldCgwLCEwKX1yZXR1cm4gdGhpc30sbW4uaGFzQWxpZ25lZEhvdXJPZmZzZXQ9ZnVuY3Rpb24oZSl7cmV0dXJuISF0aGlzLmlzVmFsaWQoKSYmKGU9ZT9idChlKS51dGNPZmZzZXQoKTowLCh0aGlzLnV0Y09mZnNldCgpLWUpJTYwPT0wKX0sbW4uaXNEU1Q9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy51dGNPZmZzZXQoKT50aGlzLmNsb25lKCkubW9udGgoMCkudXRjT2Zmc2V0KCl8fHRoaXMudXRjT2Zmc2V0KCk+dGhpcy5jbG9uZSgpLm1vbnRoKDUpLnV0Y09mZnNldCgpfSxtbi5pc0xvY2FsPWZ1bmN0aW9uKCl7cmV0dXJuISF0aGlzLmlzVmFsaWQoKSYmIXRoaXMuX2lzVVRDfSxtbi5pc1V0Y09mZnNldD1mdW5jdGlvbigpe3JldHVybiEhdGhpcy5pc1ZhbGlkKCkmJnRoaXMuX2lzVVRDfSxtbi5pc1V0Yz1FdCxtbi5pc1VUQz1FdCxtbi56b25lQWJicj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9pc1VUQz9cIlVUQ1wiOlwiXCJ9LG1uLnpvbmVOYW1lPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2lzVVRDP1wiQ29vcmRpbmF0ZWQgVW5pdmVyc2FsIFRpbWVcIjpcIlwifSxtbi5kYXRlcz1uKFwiZGF0ZXMgYWNjZXNzb3IgaXMgZGVwcmVjYXRlZC4gVXNlIGRhdGUgaW5zdGVhZC5cIix1biksbW4ubW9udGhzPW4oXCJtb250aHMgYWNjZXNzb3IgaXMgZGVwcmVjYXRlZC4gVXNlIG1vbnRoIGluc3RlYWRcIixVZSksbW4ueWVhcnM9bihcInllYXJzIGFjY2Vzc29yIGlzIGRlcHJlY2F0ZWQuIFVzZSB5ZWFyIGluc3RlYWRcIixPZSksbW4uem9uZT1uKFwibW9tZW50KCkuem9uZSBpcyBkZXByZWNhdGVkLCB1c2UgbW9tZW50KCkudXRjT2Zmc2V0IGluc3RlYWQuIGh0dHA6Ly9tb21lbnRqcy5jb20vZ3VpZGVzLyMvd2FybmluZ3Mvem9uZS9cIixmdW5jdGlvbihlLHQpe3JldHVybiBudWxsIT1lPyhcInN0cmluZ1wiIT10eXBlb2YgZSYmKGU9LWUpLHRoaXMudXRjT2Zmc2V0KGUsdCksdGhpcyk6LXRoaXMudXRjT2Zmc2V0KCl9KSxtbi5pc0RTVFNoaWZ0ZWQ9bihcImlzRFNUU2hpZnRlZCBpcyBkZXByZWNhdGVkLiBTZWUgaHR0cDovL21vbWVudGpzLmNvbS9ndWlkZXMvIy93YXJuaW5ncy9kc3Qtc2hpZnRlZC8gZm9yIG1vcmUgaW5mb3JtYXRpb25cIixmdW5jdGlvbigpe2lmKCFsKHRoaXMuX2lzRFNUU2hpZnRlZCkpcmV0dXJuIHRoaXMuX2lzRFNUU2hpZnRlZDt2YXIgZT17fTtpZih3KGUsdGhpcyksKGU9T3QoZSkpLl9hKXt2YXIgdD1lLl9pc1VUQz95KGUuX2EpOmJ0KGUuX2EpO3RoaXMuX2lzRFNUU2hpZnRlZD10aGlzLmlzVmFsaWQoKSYmMDxhKGUuX2EsdC50b0FycmF5KCkpfWVsc2UgdGhpcy5faXNEU1RTaGlmdGVkPSExO3JldHVybiB0aGlzLl9pc0RTVFNoaWZ0ZWR9KTt2YXIgeW49UC5wcm90b3R5cGU7ZnVuY3Rpb24gZ24oZSx0LG4scyl7dmFyIGk9aHQoKSxyPXkoKS5zZXQocyx0KTtyZXR1cm4gaVtuXShyLGUpfWZ1bmN0aW9uIHZuKGUsdCxuKXtpZihoKGUpJiYodD1lLGU9dm9pZCAwKSxlPWV8fFwiXCIsbnVsbCE9dClyZXR1cm4gZ24oZSx0LG4sXCJtb250aFwiKTt2YXIgcyxpPVtdO2ZvcihzPTA7czwxMjtzKyspaVtzXT1nbihlLHMsbixcIm1vbnRoXCIpO3JldHVybiBpfWZ1bmN0aW9uIHBuKGUsdCxuLHMpe3Q9KFwiYm9vbGVhblwiPT10eXBlb2YgZT9oKHQpJiYobj10LHQ9dm9pZCAwKToodD1lLGU9ITEsaChuPXQpJiYobj10LHQ9dm9pZCAwKSksdHx8XCJcIik7dmFyIGkscj1odCgpLGE9ZT9yLl93ZWVrLmRvdzowO2lmKG51bGwhPW4pcmV0dXJuIGduKHQsKG4rYSklNyxzLFwiZGF5XCIpO3ZhciBvPVtdO2ZvcihpPTA7aTw3O2krKylvW2ldPWduKHQsKGkrYSklNyxzLFwiZGF5XCIpO3JldHVybiBvfXluLmNhbGVuZGFyPWZ1bmN0aW9uKGUsdCxuKXt2YXIgcz10aGlzLl9jYWxlbmRhcltlXXx8dGhpcy5fY2FsZW5kYXIuc2FtZUVsc2U7cmV0dXJuIGIocyk/cy5jYWxsKHQsbik6c30seW4ubG9uZ0RhdGVGb3JtYXQ9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fbG9uZ0RhdGVGb3JtYXRbZV0sbj10aGlzLl9sb25nRGF0ZUZvcm1hdFtlLnRvVXBwZXJDYXNlKCldO3JldHVybiB0fHwhbj90Oih0aGlzLl9sb25nRGF0ZUZvcm1hdFtlXT1uLnJlcGxhY2UoL01NTU18TU18RER8ZGRkZC9nLGZ1bmN0aW9uKGUpe3JldHVybiBlLnNsaWNlKDEpfSksdGhpcy5fbG9uZ0RhdGVGb3JtYXRbZV0pfSx5bi5pbnZhbGlkRGF0ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9pbnZhbGlkRGF0ZX0seW4ub3JkaW5hbD1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fb3JkaW5hbC5yZXBsYWNlKFwiJWRcIixlKX0seW4ucHJlcGFyc2U9X24seW4ucG9zdGZvcm1hdD1fbix5bi5yZWxhdGl2ZVRpbWU9ZnVuY3Rpb24oZSx0LG4scyl7dmFyIGk9dGhpcy5fcmVsYXRpdmVUaW1lW25dO3JldHVybiBiKGkpP2koZSx0LG4scyk6aS5yZXBsYWNlKC8lZC9pLGUpfSx5bi5wYXN0RnV0dXJlPWZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcy5fcmVsYXRpdmVUaW1lWzA8ZT9cImZ1dHVyZVwiOlwicGFzdFwiXTtyZXR1cm4gYihuKT9uKHQpOm4ucmVwbGFjZSgvJXMvaSx0KX0seW4uc2V0PWZ1bmN0aW9uKGUpe3ZhciB0LG47Zm9yKG4gaW4gZSliKHQ9ZVtuXSk/dGhpc1tuXT10OnRoaXNbXCJfXCIrbl09dDt0aGlzLl9jb25maWc9ZSx0aGlzLl9kYXlPZk1vbnRoT3JkaW5hbFBhcnNlTGVuaWVudD1uZXcgUmVnRXhwKCh0aGlzLl9kYXlPZk1vbnRoT3JkaW5hbFBhcnNlLnNvdXJjZXx8dGhpcy5fb3JkaW5hbFBhcnNlLnNvdXJjZSkrXCJ8XCIrL1xcZHsxLDJ9Ly5zb3VyY2UpfSx5bi5tb250aHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT9vKHRoaXMuX21vbnRocyk/dGhpcy5fbW9udGhzW2UubW9udGgoKV06dGhpcy5fbW9udGhzWyh0aGlzLl9tb250aHMuaXNGb3JtYXR8fFdlKS50ZXN0KHQpP1wiZm9ybWF0XCI6XCJzdGFuZGFsb25lXCJdW2UubW9udGgoKV06byh0aGlzLl9tb250aHMpP3RoaXMuX21vbnRoczp0aGlzLl9tb250aHMuc3RhbmRhbG9uZX0seW4ubW9udGhzU2hvcnQ9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT9vKHRoaXMuX21vbnRoc1Nob3J0KT90aGlzLl9tb250aHNTaG9ydFtlLm1vbnRoKCldOnRoaXMuX21vbnRoc1Nob3J0W1dlLnRlc3QodCk/XCJmb3JtYXRcIjpcInN0YW5kYWxvbmVcIl1bZS5tb250aCgpXTpvKHRoaXMuX21vbnRoc1Nob3J0KT90aGlzLl9tb250aHNTaG9ydDp0aGlzLl9tb250aHNTaG9ydC5zdGFuZGFsb25lfSx5bi5tb250aHNQYXJzZT1mdW5jdGlvbihlLHQsbil7dmFyIHMsaSxyO2lmKHRoaXMuX21vbnRoc1BhcnNlRXhhY3QpcmV0dXJuIGZ1bmN0aW9uKGUsdCxuKXt2YXIgcyxpLHIsYT1lLnRvTG9jYWxlTG93ZXJDYXNlKCk7aWYoIXRoaXMuX21vbnRoc1BhcnNlKWZvcih0aGlzLl9tb250aHNQYXJzZT1bXSx0aGlzLl9sb25nTW9udGhzUGFyc2U9W10sdGhpcy5fc2hvcnRNb250aHNQYXJzZT1bXSxzPTA7czwxMjsrK3Mpcj15KFsyZTMsc10pLHRoaXMuX3Nob3J0TW9udGhzUGFyc2Vbc109dGhpcy5tb250aHNTaG9ydChyLFwiXCIpLnRvTG9jYWxlTG93ZXJDYXNlKCksdGhpcy5fbG9uZ01vbnRoc1BhcnNlW3NdPXRoaXMubW9udGhzKHIsXCJcIikudG9Mb2NhbGVMb3dlckNhc2UoKTtyZXR1cm4gbj9cIk1NTVwiPT09dD8tMSE9PShpPVllLmNhbGwodGhpcy5fc2hvcnRNb250aHNQYXJzZSxhKSk/aTpudWxsOi0xIT09KGk9WWUuY2FsbCh0aGlzLl9sb25nTW9udGhzUGFyc2UsYSkpP2k6bnVsbDpcIk1NTVwiPT09dD8tMSE9PShpPVllLmNhbGwodGhpcy5fc2hvcnRNb250aHNQYXJzZSxhKSk/aTotMSE9PShpPVllLmNhbGwodGhpcy5fbG9uZ01vbnRoc1BhcnNlLGEpKT9pOm51bGw6LTEhPT0oaT1ZZS5jYWxsKHRoaXMuX2xvbmdNb250aHNQYXJzZSxhKSk/aTotMSE9PShpPVllLmNhbGwodGhpcy5fc2hvcnRNb250aHNQYXJzZSxhKSk/aTpudWxsfS5jYWxsKHRoaXMsZSx0LG4pO2Zvcih0aGlzLl9tb250aHNQYXJzZXx8KHRoaXMuX21vbnRoc1BhcnNlPVtdLHRoaXMuX2xvbmdNb250aHNQYXJzZT1bXSx0aGlzLl9zaG9ydE1vbnRoc1BhcnNlPVtdKSxzPTA7czwxMjtzKyspe2lmKGk9eShbMmUzLHNdKSxuJiYhdGhpcy5fbG9uZ01vbnRoc1BhcnNlW3NdJiYodGhpcy5fbG9uZ01vbnRoc1BhcnNlW3NdPW5ldyBSZWdFeHAoXCJeXCIrdGhpcy5tb250aHMoaSxcIlwiKS5yZXBsYWNlKFwiLlwiLFwiXCIpK1wiJFwiLFwiaVwiKSx0aGlzLl9zaG9ydE1vbnRoc1BhcnNlW3NdPW5ldyBSZWdFeHAoXCJeXCIrdGhpcy5tb250aHNTaG9ydChpLFwiXCIpLnJlcGxhY2UoXCIuXCIsXCJcIikrXCIkXCIsXCJpXCIpKSxufHx0aGlzLl9tb250aHNQYXJzZVtzXXx8KHI9XCJeXCIrdGhpcy5tb250aHMoaSxcIlwiKStcInxeXCIrdGhpcy5tb250aHNTaG9ydChpLFwiXCIpLHRoaXMuX21vbnRoc1BhcnNlW3NdPW5ldyBSZWdFeHAoci5yZXBsYWNlKFwiLlwiLFwiXCIpLFwiaVwiKSksbiYmXCJNTU1NXCI9PT10JiZ0aGlzLl9sb25nTW9udGhzUGFyc2Vbc10udGVzdChlKSlyZXR1cm4gcztpZihuJiZcIk1NTVwiPT09dCYmdGhpcy5fc2hvcnRNb250aHNQYXJzZVtzXS50ZXN0KGUpKXJldHVybiBzO2lmKCFuJiZ0aGlzLl9tb250aHNQYXJzZVtzXS50ZXN0KGUpKXJldHVybiBzfX0seW4ubW9udGhzUmVnZXg9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX21vbnRoc1BhcnNlRXhhY3Q/KG0odGhpcyxcIl9tb250aHNSZWdleFwiKXx8TmUuY2FsbCh0aGlzKSxlP3RoaXMuX21vbnRoc1N0cmljdFJlZ2V4OnRoaXMuX21vbnRoc1JlZ2V4KToobSh0aGlzLFwiX21vbnRoc1JlZ2V4XCIpfHwodGhpcy5fbW9udGhzUmVnZXg9TGUpLHRoaXMuX21vbnRoc1N0cmljdFJlZ2V4JiZlP3RoaXMuX21vbnRoc1N0cmljdFJlZ2V4OnRoaXMuX21vbnRoc1JlZ2V4KX0seW4ubW9udGhzU2hvcnRSZWdleD1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fbW9udGhzUGFyc2VFeGFjdD8obSh0aGlzLFwiX21vbnRoc1JlZ2V4XCIpfHxOZS5jYWxsKHRoaXMpLGU/dGhpcy5fbW9udGhzU2hvcnRTdHJpY3RSZWdleDp0aGlzLl9tb250aHNTaG9ydFJlZ2V4KToobSh0aGlzLFwiX21vbnRoc1Nob3J0UmVnZXhcIil8fCh0aGlzLl9tb250aHNTaG9ydFJlZ2V4PUZlKSx0aGlzLl9tb250aHNTaG9ydFN0cmljdFJlZ2V4JiZlP3RoaXMuX21vbnRoc1Nob3J0U3RyaWN0UmVnZXg6dGhpcy5fbW9udGhzU2hvcnRSZWdleCl9LHluLndlZWs9ZnVuY3Rpb24oZSl7cmV0dXJuIEllKGUsdGhpcy5fd2Vlay5kb3csdGhpcy5fd2Vlay5kb3kpLndlZWt9LHluLmZpcnN0RGF5T2ZZZWFyPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3dlZWsuZG95fSx5bi5maXJzdERheU9mV2Vlaz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl93ZWVrLmRvd30seW4ud2Vla2RheXM9ZnVuY3Rpb24oZSx0KXt2YXIgbj1vKHRoaXMuX3dlZWtkYXlzKT90aGlzLl93ZWVrZGF5czp0aGlzLl93ZWVrZGF5c1tlJiYhMCE9PWUmJnRoaXMuX3dlZWtkYXlzLmlzRm9ybWF0LnRlc3QodCk/XCJmb3JtYXRcIjpcInN0YW5kYWxvbmVcIl07cmV0dXJuITA9PT1lP2plKG4sdGhpcy5fd2Vlay5kb3cpOmU/bltlLmRheSgpXTpufSx5bi53ZWVrZGF5c01pbj1mdW5jdGlvbihlKXtyZXR1cm4hMD09PWU/amUodGhpcy5fd2Vla2RheXNNaW4sdGhpcy5fd2Vlay5kb3cpOmU/dGhpcy5fd2Vla2RheXNNaW5bZS5kYXkoKV06dGhpcy5fd2Vla2RheXNNaW59LHluLndlZWtkYXlzU2hvcnQ9ZnVuY3Rpb24oZSl7cmV0dXJuITA9PT1lP2plKHRoaXMuX3dlZWtkYXlzU2hvcnQsdGhpcy5fd2Vlay5kb3cpOmU/dGhpcy5fd2Vla2RheXNTaG9ydFtlLmRheSgpXTp0aGlzLl93ZWVrZGF5c1Nob3J0fSx5bi53ZWVrZGF5c1BhcnNlPWZ1bmN0aW9uKGUsdCxuKXt2YXIgcyxpLHI7aWYodGhpcy5fd2Vla2RheXNQYXJzZUV4YWN0KXJldHVybiBmdW5jdGlvbihlLHQsbil7dmFyIHMsaSxyLGE9ZS50b0xvY2FsZUxvd2VyQ2FzZSgpO2lmKCF0aGlzLl93ZWVrZGF5c1BhcnNlKWZvcih0aGlzLl93ZWVrZGF5c1BhcnNlPVtdLHRoaXMuX3Nob3J0V2Vla2RheXNQYXJzZT1bXSx0aGlzLl9taW5XZWVrZGF5c1BhcnNlPVtdLHM9MDtzPDc7KytzKXI9eShbMmUzLDFdKS5kYXkocyksdGhpcy5fbWluV2Vla2RheXNQYXJzZVtzXT10aGlzLndlZWtkYXlzTWluKHIsXCJcIikudG9Mb2NhbGVMb3dlckNhc2UoKSx0aGlzLl9zaG9ydFdlZWtkYXlzUGFyc2Vbc109dGhpcy53ZWVrZGF5c1Nob3J0KHIsXCJcIikudG9Mb2NhbGVMb3dlckNhc2UoKSx0aGlzLl93ZWVrZGF5c1BhcnNlW3NdPXRoaXMud2Vla2RheXMocixcIlwiKS50b0xvY2FsZUxvd2VyQ2FzZSgpO3JldHVybiBuP1wiZGRkZFwiPT09dD8tMSE9PShpPVllLmNhbGwodGhpcy5fd2Vla2RheXNQYXJzZSxhKSk/aTpudWxsOlwiZGRkXCI9PT10Py0xIT09KGk9WWUuY2FsbCh0aGlzLl9zaG9ydFdlZWtkYXlzUGFyc2UsYSkpP2k6bnVsbDotMSE9PShpPVllLmNhbGwodGhpcy5fbWluV2Vla2RheXNQYXJzZSxhKSk/aTpudWxsOlwiZGRkZFwiPT09dD8tMSE9PShpPVllLmNhbGwodGhpcy5fd2Vla2RheXNQYXJzZSxhKSk/aTotMSE9PShpPVllLmNhbGwodGhpcy5fc2hvcnRXZWVrZGF5c1BhcnNlLGEpKT9pOi0xIT09KGk9WWUuY2FsbCh0aGlzLl9taW5XZWVrZGF5c1BhcnNlLGEpKT9pOm51bGw6XCJkZGRcIj09PXQ/LTEhPT0oaT1ZZS5jYWxsKHRoaXMuX3Nob3J0V2Vla2RheXNQYXJzZSxhKSk/aTotMSE9PShpPVllLmNhbGwodGhpcy5fd2Vla2RheXNQYXJzZSxhKSk/aTotMSE9PShpPVllLmNhbGwodGhpcy5fbWluV2Vla2RheXNQYXJzZSxhKSk/aTpudWxsOi0xIT09KGk9WWUuY2FsbCh0aGlzLl9taW5XZWVrZGF5c1BhcnNlLGEpKT9pOi0xIT09KGk9WWUuY2FsbCh0aGlzLl93ZWVrZGF5c1BhcnNlLGEpKT9pOi0xIT09KGk9WWUuY2FsbCh0aGlzLl9zaG9ydFdlZWtkYXlzUGFyc2UsYSkpP2k6bnVsbH0uY2FsbCh0aGlzLGUsdCxuKTtmb3IodGhpcy5fd2Vla2RheXNQYXJzZXx8KHRoaXMuX3dlZWtkYXlzUGFyc2U9W10sdGhpcy5fbWluV2Vla2RheXNQYXJzZT1bXSx0aGlzLl9zaG9ydFdlZWtkYXlzUGFyc2U9W10sdGhpcy5fZnVsbFdlZWtkYXlzUGFyc2U9W10pLHM9MDtzPDc7cysrKXtpZihpPXkoWzJlMywxXSkuZGF5KHMpLG4mJiF0aGlzLl9mdWxsV2Vla2RheXNQYXJzZVtzXSYmKHRoaXMuX2Z1bGxXZWVrZGF5c1BhcnNlW3NdPW5ldyBSZWdFeHAoXCJeXCIrdGhpcy53ZWVrZGF5cyhpLFwiXCIpLnJlcGxhY2UoXCIuXCIsXCJcXFxcLj9cIikrXCIkXCIsXCJpXCIpLHRoaXMuX3Nob3J0V2Vla2RheXNQYXJzZVtzXT1uZXcgUmVnRXhwKFwiXlwiK3RoaXMud2Vla2RheXNTaG9ydChpLFwiXCIpLnJlcGxhY2UoXCIuXCIsXCJcXFxcLj9cIikrXCIkXCIsXCJpXCIpLHRoaXMuX21pbldlZWtkYXlzUGFyc2Vbc109bmV3IFJlZ0V4cChcIl5cIit0aGlzLndlZWtkYXlzTWluKGksXCJcIikucmVwbGFjZShcIi5cIixcIlxcXFwuP1wiKStcIiRcIixcImlcIikpLHRoaXMuX3dlZWtkYXlzUGFyc2Vbc118fChyPVwiXlwiK3RoaXMud2Vla2RheXMoaSxcIlwiKStcInxeXCIrdGhpcy53ZWVrZGF5c1Nob3J0KGksXCJcIikrXCJ8XlwiK3RoaXMud2Vla2RheXNNaW4oaSxcIlwiKSx0aGlzLl93ZWVrZGF5c1BhcnNlW3NdPW5ldyBSZWdFeHAoci5yZXBsYWNlKFwiLlwiLFwiXCIpLFwiaVwiKSksbiYmXCJkZGRkXCI9PT10JiZ0aGlzLl9mdWxsV2Vla2RheXNQYXJzZVtzXS50ZXN0KGUpKXJldHVybiBzO2lmKG4mJlwiZGRkXCI9PT10JiZ0aGlzLl9zaG9ydFdlZWtkYXlzUGFyc2Vbc10udGVzdChlKSlyZXR1cm4gcztpZihuJiZcImRkXCI9PT10JiZ0aGlzLl9taW5XZWVrZGF5c1BhcnNlW3NdLnRlc3QoZSkpcmV0dXJuIHM7aWYoIW4mJnRoaXMuX3dlZWtkYXlzUGFyc2Vbc10udGVzdChlKSlyZXR1cm4gc319LHluLndlZWtkYXlzUmVnZXg9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX3dlZWtkYXlzUGFyc2VFeGFjdD8obSh0aGlzLFwiX3dlZWtkYXlzUmVnZXhcIil8fFFlLmNhbGwodGhpcyksZT90aGlzLl93ZWVrZGF5c1N0cmljdFJlZ2V4OnRoaXMuX3dlZWtkYXlzUmVnZXgpOihtKHRoaXMsXCJfd2Vla2RheXNSZWdleFwiKXx8KHRoaXMuX3dlZWtkYXlzUmVnZXg9cWUpLHRoaXMuX3dlZWtkYXlzU3RyaWN0UmVnZXgmJmU/dGhpcy5fd2Vla2RheXNTdHJpY3RSZWdleDp0aGlzLl93ZWVrZGF5c1JlZ2V4KX0seW4ud2Vla2RheXNTaG9ydFJlZ2V4PWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl93ZWVrZGF5c1BhcnNlRXhhY3Q/KG0odGhpcyxcIl93ZWVrZGF5c1JlZ2V4XCIpfHxRZS5jYWxsKHRoaXMpLGU/dGhpcy5fd2Vla2RheXNTaG9ydFN0cmljdFJlZ2V4OnRoaXMuX3dlZWtkYXlzU2hvcnRSZWdleCk6KG0odGhpcyxcIl93ZWVrZGF5c1Nob3J0UmVnZXhcIil8fCh0aGlzLl93ZWVrZGF5c1Nob3J0UmVnZXg9SmUpLHRoaXMuX3dlZWtkYXlzU2hvcnRTdHJpY3RSZWdleCYmZT90aGlzLl93ZWVrZGF5c1Nob3J0U3RyaWN0UmVnZXg6dGhpcy5fd2Vla2RheXNTaG9ydFJlZ2V4KX0seW4ud2Vla2RheXNNaW5SZWdleD1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fd2Vla2RheXNQYXJzZUV4YWN0PyhtKHRoaXMsXCJfd2Vla2RheXNSZWdleFwiKXx8UWUuY2FsbCh0aGlzKSxlP3RoaXMuX3dlZWtkYXlzTWluU3RyaWN0UmVnZXg6dGhpcy5fd2Vla2RheXNNaW5SZWdleCk6KG0odGhpcyxcIl93ZWVrZGF5c01pblJlZ2V4XCIpfHwodGhpcy5fd2Vla2RheXNNaW5SZWdleD1CZSksdGhpcy5fd2Vla2RheXNNaW5TdHJpY3RSZWdleCYmZT90aGlzLl93ZWVrZGF5c01pblN0cmljdFJlZ2V4OnRoaXMuX3dlZWtkYXlzTWluUmVnZXgpfSx5bi5pc1BNPWZ1bmN0aW9uKGUpe3JldHVyblwicFwiPT09KGUrXCJcIikudG9Mb3dlckNhc2UoKS5jaGFyQXQoMCl9LHluLm1lcmlkaWVtPWZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gMTE8ZT9uP1wicG1cIjpcIlBNXCI6bj9cImFtXCI6XCJBTVwifSx1dChcImVuXCIse2RheU9mTW9udGhPcmRpbmFsUGFyc2U6L1xcZHsxLDJ9KHRofHN0fG5kfHJkKS8sb3JkaW5hbDpmdW5jdGlvbihlKXt2YXIgdD1lJTEwO3JldHVybiBlKygxPT09RChlJTEwMC8xMCk/XCJ0aFwiOjE9PT10P1wic3RcIjoyPT09dD9cIm5kXCI6Mz09PXQ/XCJyZFwiOlwidGhcIil9fSksYy5sYW5nPW4oXCJtb21lbnQubGFuZyBpcyBkZXByZWNhdGVkLiBVc2UgbW9tZW50LmxvY2FsZSBpbnN0ZWFkLlwiLHV0KSxjLmxhbmdEYXRhPW4oXCJtb21lbnQubGFuZ0RhdGEgaXMgZGVwcmVjYXRlZC4gVXNlIG1vbWVudC5sb2NhbGVEYXRhIGluc3RlYWQuXCIsaHQpO3ZhciB3bj1NYXRoLmFicztmdW5jdGlvbiBNbihlLHQsbixzKXt2YXIgaT1qdCh0LG4pO3JldHVybiBlLl9taWxsaXNlY29uZHMrPXMqaS5fbWlsbGlzZWNvbmRzLGUuX2RheXMrPXMqaS5fZGF5cyxlLl9tb250aHMrPXMqaS5fbW9udGhzLGUuX2J1YmJsZSgpfWZ1bmN0aW9uIGtuKGUpe3JldHVybiBlPDA/TWF0aC5mbG9vcihlKTpNYXRoLmNlaWwoZSl9ZnVuY3Rpb24gU24oZSl7cmV0dXJuIDQ4MDAqZS8xNDYwOTd9ZnVuY3Rpb24gRG4oZSl7cmV0dXJuIDE0NjA5NyplLzQ4MDB9ZnVuY3Rpb24gWW4oZSl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYXMoZSl9fXZhciBPbj1ZbihcIm1zXCIpLFRuPVluKFwic1wiKSxibj1ZbihcIm1cIikseG49WW4oXCJoXCIpLFBuPVluKFwiZFwiKSxXbj1ZbihcIndcIiksQ249WW4oXCJNXCIpLEhuPVluKFwiUVwiKSxSbj1ZbihcInlcIik7ZnVuY3Rpb24gVW4oZSl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaXNWYWxpZCgpP3RoaXMuX2RhdGFbZV06TmFOfX12YXIgRm49VW4oXCJtaWxsaXNlY29uZHNcIiksTG49VW4oXCJzZWNvbmRzXCIpLE5uPVVuKFwibWludXRlc1wiKSxHbj1VbihcImhvdXJzXCIpLFZuPVVuKFwiZGF5c1wiKSxFbj1VbihcIm1vbnRoc1wiKSxJbj1VbihcInllYXJzXCIpO3ZhciBBbj1NYXRoLnJvdW5kLGpuPXtzczo0NCxzOjQ1LG06NDUsaDoyMixkOjI2LE06MTF9O3ZhciBabj1NYXRoLmFicztmdW5jdGlvbiB6bihlKXtyZXR1cm4oMDxlKS0oZTwwKXx8K2V9ZnVuY3Rpb24gJG4oKXtpZighdGhpcy5pc1ZhbGlkKCkpcmV0dXJuIHRoaXMubG9jYWxlRGF0YSgpLmludmFsaWREYXRlKCk7dmFyIGUsdCxuPVpuKHRoaXMuX21pbGxpc2Vjb25kcykvMWUzLHM9Wm4odGhpcy5fZGF5cyksaT1abih0aGlzLl9tb250aHMpO3Q9UygoZT1TKG4vNjApKS82MCksbiU9NjAsZSU9NjA7dmFyIHI9UyhpLzEyKSxhPWklPTEyLG89cyx1PXQsbD1lLGg9bj9uLnRvRml4ZWQoMykucmVwbGFjZSgvXFwuPzArJC8sXCJcIik6XCJcIixkPXRoaXMuYXNTZWNvbmRzKCk7aWYoIWQpcmV0dXJuXCJQMERcIjt2YXIgYz1kPDA/XCItXCI6XCJcIixmPXpuKHRoaXMuX21vbnRocykhPT16bihkKT9cIi1cIjpcIlwiLG09em4odGhpcy5fZGF5cykhPT16bihkKT9cIi1cIjpcIlwiLF89em4odGhpcy5fbWlsbGlzZWNvbmRzKSE9PXpuKGQpP1wiLVwiOlwiXCI7cmV0dXJuIGMrXCJQXCIrKHI/ZityK1wiWVwiOlwiXCIpKyhhP2YrYStcIk1cIjpcIlwiKSsobz9tK28rXCJEXCI6XCJcIikrKHV8fGx8fGg/XCJUXCI6XCJcIikrKHU/Xyt1K1wiSFwiOlwiXCIpKyhsP18rbCtcIk1cIjpcIlwiKSsoaD9fK2grXCJTXCI6XCJcIil9dmFyIHFuPUh0LnByb3RvdHlwZTtyZXR1cm4gcW4uaXNWYWxpZD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9pc1ZhbGlkfSxxbi5hYnM9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLl9kYXRhO3JldHVybiB0aGlzLl9taWxsaXNlY29uZHM9d24odGhpcy5fbWlsbGlzZWNvbmRzKSx0aGlzLl9kYXlzPXduKHRoaXMuX2RheXMpLHRoaXMuX21vbnRocz13bih0aGlzLl9tb250aHMpLGUubWlsbGlzZWNvbmRzPXduKGUubWlsbGlzZWNvbmRzKSxlLnNlY29uZHM9d24oZS5zZWNvbmRzKSxlLm1pbnV0ZXM9d24oZS5taW51dGVzKSxlLmhvdXJzPXduKGUuaG91cnMpLGUubW9udGhzPXduKGUubW9udGhzKSxlLnllYXJzPXduKGUueWVhcnMpLHRoaXN9LHFuLmFkZD1mdW5jdGlvbihlLHQpe3JldHVybiBNbih0aGlzLGUsdCwxKX0scW4uc3VidHJhY3Q9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gTW4odGhpcyxlLHQsLTEpfSxxbi5hcz1mdW5jdGlvbihlKXtpZighdGhpcy5pc1ZhbGlkKCkpcmV0dXJuIE5hTjt2YXIgdCxuLHM9dGhpcy5fbWlsbGlzZWNvbmRzO2lmKFwibW9udGhcIj09PShlPUgoZSkpfHxcInF1YXJ0ZXJcIj09PWV8fFwieWVhclwiPT09ZSlzd2l0Y2godD10aGlzLl9kYXlzK3MvODY0ZTUsbj10aGlzLl9tb250aHMrU24odCksZSl7Y2FzZVwibW9udGhcIjpyZXR1cm4gbjtjYXNlXCJxdWFydGVyXCI6cmV0dXJuIG4vMztjYXNlXCJ5ZWFyXCI6cmV0dXJuIG4vMTJ9ZWxzZSBzd2l0Y2godD10aGlzLl9kYXlzK01hdGgucm91bmQoRG4odGhpcy5fbW9udGhzKSksZSl7Y2FzZVwid2Vla1wiOnJldHVybiB0Lzcrcy82MDQ4ZTU7Y2FzZVwiZGF5XCI6cmV0dXJuIHQrcy84NjRlNTtjYXNlXCJob3VyXCI6cmV0dXJuIDI0KnQrcy8zNmU1O2Nhc2VcIm1pbnV0ZVwiOnJldHVybiAxNDQwKnQrcy82ZTQ7Y2FzZVwic2Vjb25kXCI6cmV0dXJuIDg2NDAwKnQrcy8xZTM7Y2FzZVwibWlsbGlzZWNvbmRcIjpyZXR1cm4gTWF0aC5mbG9vcig4NjRlNSp0KStzO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwiVW5rbm93biB1bml0IFwiK2UpfX0scW4uYXNNaWxsaXNlY29uZHM9T24scW4uYXNTZWNvbmRzPVRuLHFuLmFzTWludXRlcz1ibixxbi5hc0hvdXJzPXhuLHFuLmFzRGF5cz1Qbixxbi5hc1dlZWtzPVduLHFuLmFzTW9udGhzPUNuLHFuLmFzUXVhcnRlcnM9SG4scW4uYXNZZWFycz1Sbixxbi52YWx1ZU9mPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaXNWYWxpZCgpP3RoaXMuX21pbGxpc2Vjb25kcys4NjRlNSp0aGlzLl9kYXlzK3RoaXMuX21vbnRocyUxMioyNTkyZTYrMzE1MzZlNipEKHRoaXMuX21vbnRocy8xMik6TmFOfSxxbi5fYnViYmxlPWZ1bmN0aW9uKCl7dmFyIGUsdCxuLHMsaSxyPXRoaXMuX21pbGxpc2Vjb25kcyxhPXRoaXMuX2RheXMsbz10aGlzLl9tb250aHMsdT10aGlzLl9kYXRhO3JldHVybiAwPD1yJiYwPD1hJiYwPD1vfHxyPD0wJiZhPD0wJiZvPD0wfHwocis9ODY0ZTUqa24oRG4obykrYSksbz1hPTApLHUubWlsbGlzZWNvbmRzPXIlMWUzLGU9UyhyLzFlMyksdS5zZWNvbmRzPWUlNjAsdD1TKGUvNjApLHUubWludXRlcz10JTYwLG49Uyh0LzYwKSx1LmhvdXJzPW4lMjQsbys9aT1TKFNuKGErPVMobi8yNCkpKSxhLT1rbihEbihpKSkscz1TKG8vMTIpLG8lPTEyLHUuZGF5cz1hLHUubW9udGhzPW8sdS55ZWFycz1zLHRoaXN9LHFuLmNsb25lPWZ1bmN0aW9uKCl7cmV0dXJuIGp0KHRoaXMpfSxxbi5nZXQ9ZnVuY3Rpb24oZSl7cmV0dXJuIGU9SChlKSx0aGlzLmlzVmFsaWQoKT90aGlzW2UrXCJzXCJdKCk6TmFOfSxxbi5taWxsaXNlY29uZHM9Rm4scW4uc2Vjb25kcz1Mbixxbi5taW51dGVzPU5uLHFuLmhvdXJzPUduLHFuLmRheXM9Vm4scW4ud2Vla3M9ZnVuY3Rpb24oKXtyZXR1cm4gUyh0aGlzLmRheXMoKS83KX0scW4ubW9udGhzPUVuLHFuLnllYXJzPUluLHFuLmh1bWFuaXplPWZ1bmN0aW9uKGUpe2lmKCF0aGlzLmlzVmFsaWQoKSlyZXR1cm4gdGhpcy5sb2NhbGVEYXRhKCkuaW52YWxpZERhdGUoKTt2YXIgdCxuLHMsaSxyLGEsbyx1LGwsaCxkLGM9dGhpcy5sb2NhbGVEYXRhKCksZj0obj0hZSxzPWMsaT1qdCh0PXRoaXMpLmFicygpLHI9QW4oaS5hcyhcInNcIikpLGE9QW4oaS5hcyhcIm1cIikpLG89QW4oaS5hcyhcImhcIikpLHU9QW4oaS5hcyhcImRcIikpLGw9QW4oaS5hcyhcIk1cIikpLGg9QW4oaS5hcyhcInlcIikpLChkPXI8PWpuLnNzJiZbXCJzXCIscl18fHI8am4ucyYmW1wic3NcIixyXXx8YTw9MSYmW1wibVwiXXx8YTxqbi5tJiZbXCJtbVwiLGFdfHxvPD0xJiZbXCJoXCJdfHxvPGpuLmgmJltcImhoXCIsb118fHU8PTEmJltcImRcIl18fHU8am4uZCYmW1wiZGRcIix1XXx8bDw9MSYmW1wiTVwiXXx8bDxqbi5NJiZbXCJNTVwiLGxdfHxoPD0xJiZbXCJ5XCJdfHxbXCJ5eVwiLGhdKVsyXT1uLGRbM109MDwrdCxkWzRdPXMsZnVuY3Rpb24oZSx0LG4scyxpKXtyZXR1cm4gaS5yZWxhdGl2ZVRpbWUodHx8MSwhIW4sZSxzKX0uYXBwbHkobnVsbCxkKSk7cmV0dXJuIGUmJihmPWMucGFzdEZ1dHVyZSgrdGhpcyxmKSksYy5wb3N0Zm9ybWF0KGYpfSxxbi50b0lTT1N0cmluZz0kbixxbi50b1N0cmluZz0kbixxbi50b0pTT049JG4scW4ubG9jYWxlPVh0LHFuLmxvY2FsZURhdGE9ZW4scW4udG9Jc29TdHJpbmc9bihcInRvSXNvU3RyaW5nKCkgaXMgZGVwcmVjYXRlZC4gUGxlYXNlIHVzZSB0b0lTT1N0cmluZygpIGluc3RlYWQgKG5vdGljZSB0aGUgY2FwaXRhbHMpXCIsJG4pLHFuLmxhbmc9S3QsSShcIlhcIiwwLDAsXCJ1bml4XCIpLEkoXCJ4XCIsMCwwLFwidmFsdWVPZlwiKSx1ZShcInhcIixzZSksdWUoXCJYXCIsL1srLV0/XFxkKyhcXC5cXGR7MSwzfSk/LyksY2UoXCJYXCIsZnVuY3Rpb24oZSx0LG4pe24uX2Q9bmV3IERhdGUoMWUzKnBhcnNlRmxvYXQoZSwxMCkpfSksY2UoXCJ4XCIsZnVuY3Rpb24oZSx0LG4pe24uX2Q9bmV3IERhdGUoRChlKSl9KSxjLnZlcnNpb249XCIyLjI0LjBcIixlPWJ0LGMuZm49bW4sYy5taW49ZnVuY3Rpb24oKXtyZXR1cm4gV3QoXCJpc0JlZm9yZVwiLFtdLnNsaWNlLmNhbGwoYXJndW1lbnRzLDApKX0sYy5tYXg9ZnVuY3Rpb24oKXtyZXR1cm4gV3QoXCJpc0FmdGVyXCIsW10uc2xpY2UuY2FsbChhcmd1bWVudHMsMCkpfSxjLm5vdz1mdW5jdGlvbigpe3JldHVybiBEYXRlLm5vdz9EYXRlLm5vdygpOituZXcgRGF0ZX0sYy51dGM9eSxjLnVuaXg9ZnVuY3Rpb24oZSl7cmV0dXJuIGJ0KDFlMyplKX0sYy5tb250aHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdm4oZSx0LFwibW9udGhzXCIpfSxjLmlzRGF0ZT1kLGMubG9jYWxlPXV0LGMuaW52YWxpZD1wLGMuZHVyYXRpb249anQsYy5pc01vbWVudD1rLGMud2Vla2RheXM9ZnVuY3Rpb24oZSx0LG4pe3JldHVybiBwbihlLHQsbixcIndlZWtkYXlzXCIpfSxjLnBhcnNlWm9uZT1mdW5jdGlvbigpe3JldHVybiBidC5hcHBseShudWxsLGFyZ3VtZW50cykucGFyc2Vab25lKCl9LGMubG9jYWxlRGF0YT1odCxjLmlzRHVyYXRpb249UnQsYy5tb250aHNTaG9ydD1mdW5jdGlvbihlLHQpe3JldHVybiB2bihlLHQsXCJtb250aHNTaG9ydFwiKX0sYy53ZWVrZGF5c01pbj1mdW5jdGlvbihlLHQsbil7cmV0dXJuIHBuKGUsdCxuLFwid2Vla2RheXNNaW5cIil9LGMuZGVmaW5lTG9jYWxlPWx0LGMudXBkYXRlTG9jYWxlPWZ1bmN0aW9uKGUsdCl7aWYobnVsbCE9dCl7dmFyIG4scyxpPXN0O251bGwhPShzPW90KGUpKSYmKGk9cy5fY29uZmlnKSwobj1uZXcgUCh0PXgoaSx0KSkpLnBhcmVudExvY2FsZT1pdFtlXSxpdFtlXT1uLHV0KGUpfWVsc2UgbnVsbCE9aXRbZV0mJihudWxsIT1pdFtlXS5wYXJlbnRMb2NhbGU/aXRbZV09aXRbZV0ucGFyZW50TG9jYWxlOm51bGwhPWl0W2VdJiZkZWxldGUgaXRbZV0pO3JldHVybiBpdFtlXX0sYy5sb2NhbGVzPWZ1bmN0aW9uKCl7cmV0dXJuIHMoaXQpfSxjLndlZWtkYXlzU2hvcnQ9ZnVuY3Rpb24oZSx0LG4pe3JldHVybiBwbihlLHQsbixcIndlZWtkYXlzU2hvcnRcIil9LGMubm9ybWFsaXplVW5pdHM9SCxjLnJlbGF0aXZlVGltZVJvdW5kaW5nPWZ1bmN0aW9uKGUpe3JldHVybiB2b2lkIDA9PT1lP0FuOlwiZnVuY3Rpb25cIj09dHlwZW9mIGUmJihBbj1lLCEwKX0sYy5yZWxhdGl2ZVRpbWVUaHJlc2hvbGQ9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdm9pZCAwIT09am5bZV0mJih2b2lkIDA9PT10P2puW2VdOihqbltlXT10LFwic1wiPT09ZSYmKGpuLnNzPXQtMSksITApKX0sYy5jYWxlbmRhckZvcm1hdD1mdW5jdGlvbihlLHQpe3ZhciBuPWUuZGlmZih0LFwiZGF5c1wiLCEwKTtyZXR1cm4gbjwtNj9cInNhbWVFbHNlXCI6bjwtMT9cImxhc3RXZWVrXCI6bjwwP1wibGFzdERheVwiOm48MT9cInNhbWVEYXlcIjpuPDI/XCJuZXh0RGF5XCI6bjw3P1wibmV4dFdlZWtcIjpcInNhbWVFbHNlXCJ9LGMucHJvdG90eXBlPW1uLGMuSFRNTDVfRk1UPXtEQVRFVElNRV9MT0NBTDpcIllZWVktTU0tRERUSEg6bW1cIixEQVRFVElNRV9MT0NBTF9TRUNPTkRTOlwiWVlZWS1NTS1ERFRISDptbTpzc1wiLERBVEVUSU1FX0xPQ0FMX01TOlwiWVlZWS1NTS1ERFRISDptbTpzcy5TU1NcIixEQVRFOlwiWVlZWS1NTS1ERFwiLFRJTUU6XCJISDptbVwiLFRJTUVfU0VDT05EUzpcIkhIOm1tOnNzXCIsVElNRV9NUzpcIkhIOm1tOnNzLlNTU1wiLFdFRUs6XCJHR0dHLVtXXVdXXCIsTU9OVEg6XCJZWVlZLU1NXCJ9LGN9KTsiLCJ2YXIgdG5zID0gKGZ1bmN0aW9uICgpe1xudmFyIHdpbiA9IHdpbmRvdztcblxudmFyIHJhZiA9IHdpbi5yZXF1ZXN0QW5pbWF0aW9uRnJhbWVcbiAgfHwgd2luLndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZVxuICB8fCB3aW4ubW96UmVxdWVzdEFuaW1hdGlvbkZyYW1lXG4gIHx8IHdpbi5tc1JlcXVlc3RBbmltYXRpb25GcmFtZVxuICB8fCBmdW5jdGlvbihjYikgeyByZXR1cm4gc2V0VGltZW91dChjYiwgMTYpOyB9O1xuXG52YXIgd2luJDEgPSB3aW5kb3c7XG5cbnZhciBjYWYgPSB3aW4kMS5jYW5jZWxBbmltYXRpb25GcmFtZVxuICB8fCB3aW4kMS5tb3pDYW5jZWxBbmltYXRpb25GcmFtZVxuICB8fCBmdW5jdGlvbihpZCl7IGNsZWFyVGltZW91dChpZCk7IH07XG5cbmZ1bmN0aW9uIGV4dGVuZCgpIHtcbiAgdmFyIG9iaiwgbmFtZSwgY29weSxcbiAgICAgIHRhcmdldCA9IGFyZ3VtZW50c1swXSB8fCB7fSxcbiAgICAgIGkgPSAxLFxuICAgICAgbGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aDtcblxuICBmb3IgKDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKChvYmogPSBhcmd1bWVudHNbaV0pICE9PSBudWxsKSB7XG4gICAgICBmb3IgKG5hbWUgaW4gb2JqKSB7XG4gICAgICAgIGNvcHkgPSBvYmpbbmFtZV07XG5cbiAgICAgICAgaWYgKHRhcmdldCA9PT0gY29weSkge1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9IGVsc2UgaWYgKGNvcHkgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIHRhcmdldFtuYW1lXSA9IGNvcHk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRhcmdldDtcbn1cblxuZnVuY3Rpb24gY2hlY2tTdG9yYWdlVmFsdWUgKHZhbHVlKSB7XG4gIHJldHVybiBbJ3RydWUnLCAnZmFsc2UnXS5pbmRleE9mKHZhbHVlKSA+PSAwID8gSlNPTi5wYXJzZSh2YWx1ZSkgOiB2YWx1ZTtcbn1cblxuZnVuY3Rpb24gc2V0TG9jYWxTdG9yYWdlKHN0b3JhZ2UsIGtleSwgdmFsdWUsIGFjY2Vzcykge1xuICBpZiAoYWNjZXNzKSB7XG4gICAgdHJ5IHsgc3RvcmFnZS5zZXRJdGVtKGtleSwgdmFsdWUpOyB9IGNhdGNoIChlKSB7fVxuICB9XG4gIHJldHVybiB2YWx1ZTtcbn1cblxuZnVuY3Rpb24gZ2V0U2xpZGVJZCgpIHtcbiAgdmFyIGlkID0gd2luZG93LnRuc0lkO1xuICB3aW5kb3cudG5zSWQgPSAhaWQgPyAxIDogaWQgKyAxO1xuICBcbiAgcmV0dXJuICd0bnMnICsgd2luZG93LnRuc0lkO1xufVxuXG5mdW5jdGlvbiBnZXRCb2R5ICgpIHtcbiAgdmFyIGRvYyA9IGRvY3VtZW50LFxuICAgICAgYm9keSA9IGRvYy5ib2R5O1xuXG4gIGlmICghYm9keSkge1xuICAgIGJvZHkgPSBkb2MuY3JlYXRlRWxlbWVudCgnYm9keScpO1xuICAgIGJvZHkuZmFrZSA9IHRydWU7XG4gIH1cblxuICByZXR1cm4gYm9keTtcbn1cblxudmFyIGRvY0VsZW1lbnQgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG5cbmZ1bmN0aW9uIHNldEZha2VCb2R5IChib2R5KSB7XG4gIHZhciBkb2NPdmVyZmxvdyA9ICcnO1xuICBpZiAoYm9keS5mYWtlKSB7XG4gICAgZG9jT3ZlcmZsb3cgPSBkb2NFbGVtZW50LnN0eWxlLm92ZXJmbG93O1xuICAgIC8vYXZvaWQgY3Jhc2hpbmcgSUU4LCBpZiBiYWNrZ3JvdW5kIGltYWdlIGlzIHVzZWRcbiAgICBib2R5LnN0eWxlLmJhY2tncm91bmQgPSAnJztcbiAgICAvL1NhZmFyaSA1LjEzLzUuMS40IE9TWCBzdG9wcyBsb2FkaW5nIGlmIDo6LXdlYmtpdC1zY3JvbGxiYXIgaXMgdXNlZCBhbmQgc2Nyb2xsYmFycyBhcmUgdmlzaWJsZVxuICAgIGJvZHkuc3R5bGUub3ZlcmZsb3cgPSBkb2NFbGVtZW50LnN0eWxlLm92ZXJmbG93ID0gJ2hpZGRlbic7XG4gICAgZG9jRWxlbWVudC5hcHBlbmRDaGlsZChib2R5KTtcbiAgfVxuXG4gIHJldHVybiBkb2NPdmVyZmxvdztcbn1cblxuZnVuY3Rpb24gcmVzZXRGYWtlQm9keSAoYm9keSwgZG9jT3ZlcmZsb3cpIHtcbiAgaWYgKGJvZHkuZmFrZSkge1xuICAgIGJvZHkucmVtb3ZlKCk7XG4gICAgZG9jRWxlbWVudC5zdHlsZS5vdmVyZmxvdyA9IGRvY092ZXJmbG93O1xuICAgIC8vIFRyaWdnZXIgbGF5b3V0IHNvIGtpbmV0aWMgc2Nyb2xsaW5nIGlzbid0IGRpc2FibGVkIGluIGlPUzYrXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG4gICAgZG9jRWxlbWVudC5vZmZzZXRIZWlnaHQ7XG4gIH1cbn1cblxuLy8gZ2V0IGNzcy1jYWxjIFxuXG5mdW5jdGlvbiBjYWxjKCkge1xuICB2YXIgZG9jID0gZG9jdW1lbnQsIFxuICAgICAgYm9keSA9IGdldEJvZHkoKSxcbiAgICAgIGRvY092ZXJmbG93ID0gc2V0RmFrZUJvZHkoYm9keSksXG4gICAgICBkaXYgPSBkb2MuY3JlYXRlRWxlbWVudCgnZGl2JyksIFxuICAgICAgcmVzdWx0ID0gZmFsc2U7XG5cbiAgYm9keS5hcHBlbmRDaGlsZChkaXYpO1xuICB0cnkge1xuICAgIHZhciBzdHIgPSAnKDEwcHggKiAxMCknLFxuICAgICAgICB2YWxzID0gWydjYWxjJyArIHN0ciwgJy1tb3otY2FsYycgKyBzdHIsICctd2Via2l0LWNhbGMnICsgc3RyXSxcbiAgICAgICAgdmFsO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgMzsgaSsrKSB7XG4gICAgICB2YWwgPSB2YWxzW2ldO1xuICAgICAgZGl2LnN0eWxlLndpZHRoID0gdmFsO1xuICAgICAgaWYgKGRpdi5vZmZzZXRXaWR0aCA9PT0gMTAwKSB7IFxuICAgICAgICByZXN1bHQgPSB2YWwucmVwbGFjZShzdHIsICcnKTsgXG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgfSBjYXRjaCAoZSkge31cbiAgXG4gIGJvZHkuZmFrZSA/IHJlc2V0RmFrZUJvZHkoYm9keSwgZG9jT3ZlcmZsb3cpIDogZGl2LnJlbW92ZSgpO1xuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbi8vIGdldCBzdWJwaXhlbCBzdXBwb3J0IHZhbHVlXG5cbmZ1bmN0aW9uIHBlcmNlbnRhZ2VMYXlvdXQoKSB7XG4gIC8vIGNoZWNrIHN1YnBpeGVsIGxheW91dCBzdXBwb3J0aW5nXG4gIHZhciBkb2MgPSBkb2N1bWVudCxcbiAgICAgIGJvZHkgPSBnZXRCb2R5KCksXG4gICAgICBkb2NPdmVyZmxvdyA9IHNldEZha2VCb2R5KGJvZHkpLFxuICAgICAgd3JhcHBlciA9IGRvYy5jcmVhdGVFbGVtZW50KCdkaXYnKSxcbiAgICAgIG91dGVyID0gZG9jLmNyZWF0ZUVsZW1lbnQoJ2RpdicpLFxuICAgICAgc3RyID0gJycsXG4gICAgICBjb3VudCA9IDcwLFxuICAgICAgcGVyUGFnZSA9IDMsXG4gICAgICBzdXBwb3J0ZWQgPSBmYWxzZTtcblxuICB3cmFwcGVyLmNsYXNzTmFtZSA9IFwidG5zLXQtc3VicDJcIjtcbiAgb3V0ZXIuY2xhc3NOYW1lID0gXCJ0bnMtdC1jdFwiO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgY291bnQ7IGkrKykge1xuICAgIHN0ciArPSAnPGRpdj48L2Rpdj4nO1xuICB9XG5cbiAgb3V0ZXIuaW5uZXJIVE1MID0gc3RyO1xuICB3cmFwcGVyLmFwcGVuZENoaWxkKG91dGVyKTtcbiAgYm9keS5hcHBlbmRDaGlsZCh3cmFwcGVyKTtcblxuICBzdXBwb3J0ZWQgPSBNYXRoLmFicyh3cmFwcGVyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQgLSBvdXRlci5jaGlsZHJlbltjb3VudCAtIHBlclBhZ2VdLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQpIDwgMjtcblxuICBib2R5LmZha2UgPyByZXNldEZha2VCb2R5KGJvZHksIGRvY092ZXJmbG93KSA6IHdyYXBwZXIucmVtb3ZlKCk7XG5cbiAgcmV0dXJuIHN1cHBvcnRlZDtcbn1cblxuZnVuY3Rpb24gbWVkaWFxdWVyeVN1cHBvcnQgKCkge1xuICB2YXIgZG9jID0gZG9jdW1lbnQsXG4gICAgICBib2R5ID0gZ2V0Qm9keSgpLFxuICAgICAgZG9jT3ZlcmZsb3cgPSBzZXRGYWtlQm9keShib2R5KSxcbiAgICAgIGRpdiA9IGRvYy5jcmVhdGVFbGVtZW50KCdkaXYnKSxcbiAgICAgIHN0eWxlID0gZG9jLmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyksXG4gICAgICBydWxlID0gJ0BtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6MXB4KXsudG5zLW1xLXRlc3R7cG9zaXRpb246YWJzb2x1dGV9fScsXG4gICAgICBwb3NpdGlvbjtcblxuICBzdHlsZS50eXBlID0gJ3RleHQvY3NzJztcbiAgZGl2LmNsYXNzTmFtZSA9ICd0bnMtbXEtdGVzdCc7XG5cbiAgYm9keS5hcHBlbmRDaGlsZChzdHlsZSk7XG4gIGJvZHkuYXBwZW5kQ2hpbGQoZGl2KTtcblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJ1bGU7XG4gIH0gZWxzZSB7XG4gICAgc3R5bGUuYXBwZW5kQ2hpbGQoZG9jLmNyZWF0ZVRleHROb2RlKHJ1bGUpKTtcbiAgfVxuXG4gIHBvc2l0aW9uID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUgPyB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShkaXYpLnBvc2l0aW9uIDogZGl2LmN1cnJlbnRTdHlsZVsncG9zaXRpb24nXTtcblxuICBib2R5LmZha2UgPyByZXNldEZha2VCb2R5KGJvZHksIGRvY092ZXJmbG93KSA6IGRpdi5yZW1vdmUoKTtcblxuICByZXR1cm4gcG9zaXRpb24gPT09IFwiYWJzb2x1dGVcIjtcbn1cblxuLy8gY3JlYXRlIGFuZCBhcHBlbmQgc3R5bGUgc2hlZXRcbmZ1bmN0aW9uIGNyZWF0ZVN0eWxlU2hlZXQgKG1lZGlhKSB7XG4gIC8vIENyZWF0ZSB0aGUgPHN0eWxlPiB0YWdcbiAgdmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICAvLyBzdHlsZS5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsIFwidGV4dC9jc3NcIik7XG5cbiAgLy8gQWRkIGEgbWVkaWEgKGFuZC9vciBtZWRpYSBxdWVyeSkgaGVyZSBpZiB5b3UnZCBsaWtlIVxuICAvLyBzdHlsZS5zZXRBdHRyaWJ1dGUoXCJtZWRpYVwiLCBcInNjcmVlblwiKVxuICAvLyBzdHlsZS5zZXRBdHRyaWJ1dGUoXCJtZWRpYVwiLCBcIm9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoIDogMTAyNHB4KVwiKVxuICBpZiAobWVkaWEpIHsgc3R5bGUuc2V0QXR0cmlidXRlKFwibWVkaWFcIiwgbWVkaWEpOyB9XG5cbiAgLy8gV2ViS2l0IGhhY2sgOihcbiAgLy8gc3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoXCJcIikpO1xuXG4gIC8vIEFkZCB0aGUgPHN0eWxlPiBlbGVtZW50IHRvIHRoZSBwYWdlXG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2hlYWQnKS5hcHBlbmRDaGlsZChzdHlsZSk7XG5cbiAgcmV0dXJuIHN0eWxlLnNoZWV0ID8gc3R5bGUuc2hlZXQgOiBzdHlsZS5zdHlsZVNoZWV0O1xufVxuXG4vLyBjcm9zcyBicm93c2VycyBhZGRSdWxlIG1ldGhvZFxuZnVuY3Rpb24gYWRkQ1NTUnVsZShzaGVldCwgc2VsZWN0b3IsIHJ1bGVzLCBpbmRleCkge1xuICAvLyByZXR1cm4gcmFmKGZ1bmN0aW9uKCkge1xuICAgICdpbnNlcnRSdWxlJyBpbiBzaGVldCA/XG4gICAgICBzaGVldC5pbnNlcnRSdWxlKHNlbGVjdG9yICsgJ3snICsgcnVsZXMgKyAnfScsIGluZGV4KSA6XG4gICAgICBzaGVldC5hZGRSdWxlKHNlbGVjdG9yLCBydWxlcywgaW5kZXgpO1xuICAvLyB9KTtcbn1cblxuLy8gY3Jvc3MgYnJvd3NlcnMgYWRkUnVsZSBtZXRob2RcbmZ1bmN0aW9uIHJlbW92ZUNTU1J1bGUoc2hlZXQsIGluZGV4KSB7XG4gIC8vIHJldHVybiByYWYoZnVuY3Rpb24oKSB7XG4gICAgJ2RlbGV0ZVJ1bGUnIGluIHNoZWV0ID9cbiAgICAgIHNoZWV0LmRlbGV0ZVJ1bGUoaW5kZXgpIDpcbiAgICAgIHNoZWV0LnJlbW92ZVJ1bGUoaW5kZXgpO1xuICAvLyB9KTtcbn1cblxuZnVuY3Rpb24gZ2V0Q3NzUnVsZXNMZW5ndGgoc2hlZXQpIHtcbiAgdmFyIHJ1bGUgPSAoJ2luc2VydFJ1bGUnIGluIHNoZWV0KSA/IHNoZWV0LmNzc1J1bGVzIDogc2hlZXQucnVsZXM7XG4gIHJldHVybiBydWxlLmxlbmd0aDtcbn1cblxuZnVuY3Rpb24gdG9EZWdyZWUgKHksIHgpIHtcbiAgcmV0dXJuIE1hdGguYXRhbjIoeSwgeCkgKiAoMTgwIC8gTWF0aC5QSSk7XG59XG5cbmZ1bmN0aW9uIGdldFRvdWNoRGlyZWN0aW9uKGFuZ2xlLCByYW5nZSkge1xuICB2YXIgZGlyZWN0aW9uID0gZmFsc2UsXG4gICAgICBnYXAgPSBNYXRoLmFicyg5MCAtIE1hdGguYWJzKGFuZ2xlKSk7XG4gICAgICBcbiAgaWYgKGdhcCA+PSA5MCAtIHJhbmdlKSB7XG4gICAgZGlyZWN0aW9uID0gJ2hvcml6b250YWwnO1xuICB9IGVsc2UgaWYgKGdhcCA8PSByYW5nZSkge1xuICAgIGRpcmVjdGlvbiA9ICd2ZXJ0aWNhbCc7XG4gIH1cblxuICByZXR1cm4gZGlyZWN0aW9uO1xufVxuXG4vLyBodHRwczovL3RvZGRtb3R0by5jb20vZGl0Y2gtdGhlLWFycmF5LWZvcmVhY2gtY2FsbC1ub2RlbGlzdC1oYWNrL1xuZnVuY3Rpb24gZm9yRWFjaCAoYXJyLCBjYWxsYmFjaywgc2NvcGUpIHtcbiAgZm9yICh2YXIgaSA9IDAsIGwgPSBhcnIubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgY2FsbGJhY2suY2FsbChzY29wZSwgYXJyW2ldLCBpKTtcbiAgfVxufVxuXG52YXIgY2xhc3NMaXN0U3VwcG9ydCA9ICdjbGFzc0xpc3QnIGluIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ18nKTtcblxudmFyIGhhc0NsYXNzID0gY2xhc3NMaXN0U3VwcG9ydCA/XG4gICAgZnVuY3Rpb24gKGVsLCBzdHIpIHsgcmV0dXJuIGVsLmNsYXNzTGlzdC5jb250YWlucyhzdHIpOyB9IDpcbiAgICBmdW5jdGlvbiAoZWwsIHN0cikgeyByZXR1cm4gZWwuY2xhc3NOYW1lLmluZGV4T2Yoc3RyKSA+PSAwOyB9O1xuXG52YXIgYWRkQ2xhc3MgPSBjbGFzc0xpc3RTdXBwb3J0ID9cbiAgICBmdW5jdGlvbiAoZWwsIHN0cikge1xuICAgICAgaWYgKCFoYXNDbGFzcyhlbCwgIHN0cikpIHsgZWwuY2xhc3NMaXN0LmFkZChzdHIpOyB9XG4gICAgfSA6XG4gICAgZnVuY3Rpb24gKGVsLCBzdHIpIHtcbiAgICAgIGlmICghaGFzQ2xhc3MoZWwsICBzdHIpKSB7IGVsLmNsYXNzTmFtZSArPSAnICcgKyBzdHI7IH1cbiAgICB9O1xuXG52YXIgcmVtb3ZlQ2xhc3MgPSBjbGFzc0xpc3RTdXBwb3J0ID9cbiAgICBmdW5jdGlvbiAoZWwsIHN0cikge1xuICAgICAgaWYgKGhhc0NsYXNzKGVsLCAgc3RyKSkgeyBlbC5jbGFzc0xpc3QucmVtb3ZlKHN0cik7IH1cbiAgICB9IDpcbiAgICBmdW5jdGlvbiAoZWwsIHN0cikge1xuICAgICAgaWYgKGhhc0NsYXNzKGVsLCBzdHIpKSB7IGVsLmNsYXNzTmFtZSA9IGVsLmNsYXNzTmFtZS5yZXBsYWNlKHN0ciwgJycpOyB9XG4gICAgfTtcblxuZnVuY3Rpb24gaGFzQXR0cihlbCwgYXR0cikge1xuICByZXR1cm4gZWwuaGFzQXR0cmlidXRlKGF0dHIpO1xufVxuXG5mdW5jdGlvbiBnZXRBdHRyKGVsLCBhdHRyKSB7XG4gIHJldHVybiBlbC5nZXRBdHRyaWJ1dGUoYXR0cik7XG59XG5cbmZ1bmN0aW9uIGlzTm9kZUxpc3QoZWwpIHtcbiAgLy8gT25seSBOb2RlTGlzdCBoYXMgdGhlIFwiaXRlbSgpXCIgZnVuY3Rpb25cbiAgcmV0dXJuIHR5cGVvZiBlbC5pdGVtICE9PSBcInVuZGVmaW5lZFwiOyBcbn1cblxuZnVuY3Rpb24gc2V0QXR0cnMoZWxzLCBhdHRycykge1xuICBlbHMgPSAoaXNOb2RlTGlzdChlbHMpIHx8IGVscyBpbnN0YW5jZW9mIEFycmF5KSA/IGVscyA6IFtlbHNdO1xuICBpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGF0dHJzKSAhPT0gJ1tvYmplY3QgT2JqZWN0XScpIHsgcmV0dXJuOyB9XG5cbiAgZm9yICh2YXIgaSA9IGVscy5sZW5ndGg7IGktLTspIHtcbiAgICBmb3IodmFyIGtleSBpbiBhdHRycykge1xuICAgICAgZWxzW2ldLnNldEF0dHJpYnV0ZShrZXksIGF0dHJzW2tleV0pO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiByZW1vdmVBdHRycyhlbHMsIGF0dHJzKSB7XG4gIGVscyA9IChpc05vZGVMaXN0KGVscykgfHwgZWxzIGluc3RhbmNlb2YgQXJyYXkpID8gZWxzIDogW2Vsc107XG4gIGF0dHJzID0gKGF0dHJzIGluc3RhbmNlb2YgQXJyYXkpID8gYXR0cnMgOiBbYXR0cnNdO1xuXG4gIHZhciBhdHRyTGVuZ3RoID0gYXR0cnMubGVuZ3RoO1xuICBmb3IgKHZhciBpID0gZWxzLmxlbmd0aDsgaS0tOykge1xuICAgIGZvciAodmFyIGogPSBhdHRyTGVuZ3RoOyBqLS07KSB7XG4gICAgICBlbHNbaV0ucmVtb3ZlQXR0cmlidXRlKGF0dHJzW2pdKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gYXJyYXlGcm9tTm9kZUxpc3QgKG5sKSB7XG4gIHZhciBhcnIgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDAsIGwgPSBubC5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICBhcnIucHVzaChubFtpXSk7XG4gIH1cbiAgcmV0dXJuIGFycjtcbn1cblxuZnVuY3Rpb24gaGlkZUVsZW1lbnQoZWwsIGZvcmNlSGlkZSkge1xuICBpZiAoZWwuc3R5bGUuZGlzcGxheSAhPT0gJ25vbmUnKSB7IGVsLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7IH1cbn1cblxuZnVuY3Rpb24gc2hvd0VsZW1lbnQoZWwsIGZvcmNlSGlkZSkge1xuICBpZiAoZWwuc3R5bGUuZGlzcGxheSA9PT0gJ25vbmUnKSB7IGVsLnN0eWxlLmRpc3BsYXkgPSAnJzsgfVxufVxuXG5mdW5jdGlvbiBpc1Zpc2libGUoZWwpIHtcbiAgcmV0dXJuIHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGVsKS5kaXNwbGF5ICE9PSAnbm9uZSc7XG59XG5cbmZ1bmN0aW9uIHdoaWNoUHJvcGVydHkocHJvcHMpe1xuICBpZiAodHlwZW9mIHByb3BzID09PSAnc3RyaW5nJykge1xuICAgIHZhciBhcnIgPSBbcHJvcHNdLFxuICAgICAgICBQcm9wcyA9IHByb3BzLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgcHJvcHMuc3Vic3RyKDEpLFxuICAgICAgICBwcmVmaXhlcyA9IFsnV2Via2l0JywgJ01veicsICdtcycsICdPJ107XG4gICAgICAgIFxuICAgIHByZWZpeGVzLmZvckVhY2goZnVuY3Rpb24ocHJlZml4KSB7XG4gICAgICBpZiAocHJlZml4ICE9PSAnbXMnIHx8IHByb3BzID09PSAndHJhbnNmb3JtJykge1xuICAgICAgICBhcnIucHVzaChwcmVmaXggKyBQcm9wcyk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBwcm9wcyA9IGFycjtcbiAgfVxuXG4gIHZhciBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2Zha2VlbGVtZW50JyksXG4gICAgICBsZW4gPSBwcm9wcy5sZW5ndGg7XG4gIGZvcih2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKyl7XG4gICAgdmFyIHByb3AgPSBwcm9wc1tpXTtcbiAgICBpZiggZWwuc3R5bGVbcHJvcF0gIT09IHVuZGVmaW5lZCApeyByZXR1cm4gcHJvcDsgfVxuICB9XG5cbiAgcmV0dXJuIGZhbHNlOyAvLyBleHBsaWNpdCBmb3IgaWU5LVxufVxuXG5mdW5jdGlvbiBoYXMzRFRyYW5zZm9ybXModGYpe1xuICBpZiAoIXRmKSB7IHJldHVybiBmYWxzZTsgfVxuICBpZiAoIXdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKSB7IHJldHVybiBmYWxzZTsgfVxuICBcbiAgdmFyIGRvYyA9IGRvY3VtZW50LFxuICAgICAgYm9keSA9IGdldEJvZHkoKSxcbiAgICAgIGRvY092ZXJmbG93ID0gc2V0RmFrZUJvZHkoYm9keSksXG4gICAgICBlbCA9IGRvYy5jcmVhdGVFbGVtZW50KCdwJyksXG4gICAgICBoYXMzZCxcbiAgICAgIGNzc1RGID0gdGYubGVuZ3RoID4gOSA/ICctJyArIHRmLnNsaWNlKDAsIC05KS50b0xvd2VyQ2FzZSgpICsgJy0nIDogJyc7XG5cbiAgY3NzVEYgKz0gJ3RyYW5zZm9ybSc7XG5cbiAgLy8gQWRkIGl0IHRvIHRoZSBib2R5IHRvIGdldCB0aGUgY29tcHV0ZWQgc3R5bGVcbiAgYm9keS5pbnNlcnRCZWZvcmUoZWwsIG51bGwpO1xuXG4gIGVsLnN0eWxlW3RmXSA9ICd0cmFuc2xhdGUzZCgxcHgsMXB4LDFweCknO1xuICBoYXMzZCA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGVsKS5nZXRQcm9wZXJ0eVZhbHVlKGNzc1RGKTtcblxuICBib2R5LmZha2UgPyByZXNldEZha2VCb2R5KGJvZHksIGRvY092ZXJmbG93KSA6IGVsLnJlbW92ZSgpO1xuXG4gIHJldHVybiAoaGFzM2QgIT09IHVuZGVmaW5lZCAmJiBoYXMzZC5sZW5ndGggPiAwICYmIGhhczNkICE9PSBcIm5vbmVcIik7XG59XG5cbi8vIGdldCB0cmFuc2l0aW9uZW5kLCBhbmltYXRpb25lbmQgYmFzZWQgb24gdHJhbnNpdGlvbkR1cmF0aW9uXG4vLyBAcHJvcGluOiBzdHJpbmdcbi8vIEBwcm9wT3V0OiBzdHJpbmcsIGZpcnN0LWxldHRlciB1cHBlcmNhc2Vcbi8vIFVzYWdlOiBnZXRFbmRQcm9wZXJ0eSgnV2Via2l0VHJhbnNpdGlvbkR1cmF0aW9uJywgJ1RyYW5zaXRpb24nKSA9PiB3ZWJraXRUcmFuc2l0aW9uRW5kXG5mdW5jdGlvbiBnZXRFbmRQcm9wZXJ0eShwcm9wSW4sIHByb3BPdXQpIHtcbiAgdmFyIGVuZFByb3AgPSBmYWxzZTtcbiAgaWYgKC9eV2Via2l0Ly50ZXN0KHByb3BJbikpIHtcbiAgICBlbmRQcm9wID0gJ3dlYmtpdCcgKyBwcm9wT3V0ICsgJ0VuZCc7XG4gIH0gZWxzZSBpZiAoL15PLy50ZXN0KHByb3BJbikpIHtcbiAgICBlbmRQcm9wID0gJ28nICsgcHJvcE91dCArICdFbmQnO1xuICB9IGVsc2UgaWYgKHByb3BJbikge1xuICAgIGVuZFByb3AgPSBwcm9wT3V0LnRvTG93ZXJDYXNlKCkgKyAnZW5kJztcbiAgfVxuICByZXR1cm4gZW5kUHJvcDtcbn1cblxuLy8gVGVzdCB2aWEgYSBnZXR0ZXIgaW4gdGhlIG9wdGlvbnMgb2JqZWN0IHRvIHNlZSBpZiB0aGUgcGFzc2l2ZSBwcm9wZXJ0eSBpcyBhY2Nlc3NlZFxudmFyIHN1cHBvcnRzUGFzc2l2ZSA9IGZhbHNlO1xudHJ5IHtcbiAgdmFyIG9wdHMgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkoe30sICdwYXNzaXZlJywge1xuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICBzdXBwb3J0c1Bhc3NpdmUgPSB0cnVlO1xuICAgIH1cbiAgfSk7XG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwidGVzdFwiLCBudWxsLCBvcHRzKTtcbn0gY2F0Y2ggKGUpIHt9XG52YXIgcGFzc2l2ZU9wdGlvbiA9IHN1cHBvcnRzUGFzc2l2ZSA/IHsgcGFzc2l2ZTogdHJ1ZSB9IDogZmFsc2U7XG5cbmZ1bmN0aW9uIGFkZEV2ZW50cyhlbCwgb2JqLCBwcmV2ZW50U2Nyb2xsaW5nKSB7XG4gIGZvciAodmFyIHByb3AgaW4gb2JqKSB7XG4gICAgdmFyIG9wdGlvbiA9IFsndG91Y2hzdGFydCcsICd0b3VjaG1vdmUnXS5pbmRleE9mKHByb3ApID49IDAgJiYgIXByZXZlbnRTY3JvbGxpbmcgPyBwYXNzaXZlT3B0aW9uIDogZmFsc2U7XG4gICAgZWwuYWRkRXZlbnRMaXN0ZW5lcihwcm9wLCBvYmpbcHJvcF0sIG9wdGlvbik7XG4gIH1cbn1cblxuZnVuY3Rpb24gcmVtb3ZlRXZlbnRzKGVsLCBvYmopIHtcbiAgZm9yICh2YXIgcHJvcCBpbiBvYmopIHtcbiAgICB2YXIgb3B0aW9uID0gWyd0b3VjaHN0YXJ0JywgJ3RvdWNobW92ZSddLmluZGV4T2YocHJvcCkgPj0gMCA/IHBhc3NpdmVPcHRpb24gOiBmYWxzZTtcbiAgICBlbC5yZW1vdmVFdmVudExpc3RlbmVyKHByb3AsIG9ialtwcm9wXSwgb3B0aW9uKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBFdmVudHMoKSB7XG4gIHJldHVybiB7XG4gICAgdG9waWNzOiB7fSxcbiAgICBvbjogZnVuY3Rpb24gKGV2ZW50TmFtZSwgZm4pIHtcbiAgICAgIHRoaXMudG9waWNzW2V2ZW50TmFtZV0gPSB0aGlzLnRvcGljc1tldmVudE5hbWVdIHx8IFtdO1xuICAgICAgdGhpcy50b3BpY3NbZXZlbnROYW1lXS5wdXNoKGZuKTtcbiAgICB9LFxuICAgIG9mZjogZnVuY3Rpb24oZXZlbnROYW1lLCBmbikge1xuICAgICAgaWYgKHRoaXMudG9waWNzW2V2ZW50TmFtZV0pIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnRvcGljc1tldmVudE5hbWVdLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgaWYgKHRoaXMudG9waWNzW2V2ZW50TmFtZV1baV0gPT09IGZuKSB7XG4gICAgICAgICAgICB0aGlzLnRvcGljc1tldmVudE5hbWVdLnNwbGljZShpLCAxKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgZW1pdDogZnVuY3Rpb24gKGV2ZW50TmFtZSwgZGF0YSkge1xuICAgICAgZGF0YS50eXBlID0gZXZlbnROYW1lO1xuICAgICAgaWYgKHRoaXMudG9waWNzW2V2ZW50TmFtZV0pIHtcbiAgICAgICAgdGhpcy50b3BpY3NbZXZlbnROYW1lXS5mb3JFYWNoKGZ1bmN0aW9uKGZuKSB7XG4gICAgICAgICAgZm4oZGF0YSwgZXZlbnROYW1lKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiBqc1RyYW5zZm9ybShlbGVtZW50LCBhdHRyLCBwcmVmaXgsIHBvc3RmaXgsIHRvLCBkdXJhdGlvbiwgY2FsbGJhY2spIHtcbiAgdmFyIHRpY2sgPSBNYXRoLm1pbihkdXJhdGlvbiwgMTApLFxuICAgICAgdW5pdCA9ICh0by5pbmRleE9mKCclJykgPj0gMCkgPyAnJScgOiAncHgnLFxuICAgICAgdG8gPSB0by5yZXBsYWNlKHVuaXQsICcnKSxcbiAgICAgIGZyb20gPSBOdW1iZXIoZWxlbWVudC5zdHlsZVthdHRyXS5yZXBsYWNlKHByZWZpeCwgJycpLnJlcGxhY2UocG9zdGZpeCwgJycpLnJlcGxhY2UodW5pdCwgJycpKSxcbiAgICAgIHBvc2l0aW9uVGljayA9ICh0byAtIGZyb20pIC8gZHVyYXRpb24gKiB0aWNrLFxuICAgICAgcnVubmluZztcblxuICBzZXRUaW1lb3V0KG1vdmVFbGVtZW50LCB0aWNrKTtcbiAgZnVuY3Rpb24gbW92ZUVsZW1lbnQoKSB7XG4gICAgZHVyYXRpb24gLT0gdGljaztcbiAgICBmcm9tICs9IHBvc2l0aW9uVGljaztcbiAgICBlbGVtZW50LnN0eWxlW2F0dHJdID0gcHJlZml4ICsgZnJvbSArIHVuaXQgKyBwb3N0Zml4O1xuICAgIGlmIChkdXJhdGlvbiA+IDApIHsgXG4gICAgICBzZXRUaW1lb3V0KG1vdmVFbGVtZW50LCB0aWNrKTsgXG4gICAgfSBlbHNlIHtcbiAgICAgIGNhbGxiYWNrKCk7XG4gICAgfVxuICB9XG59XG5cbi8vIHBvbHlmaWxsXG5pZiAoIU9iamVjdC5rZXlzKSB7XG4gIE9iamVjdC5rZXlzID0gZnVuY3Rpb24gKG9iamVjdCkge1xuICAgIHZhciBrZXlzID0gW107XG4gICAgZm9yICh2YXIgbmFtZSBpbiBvYmplY3QpIHtcbiAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBuYW1lKSkge1xuICAgICAgICBrZXlzLnB1c2gobmFtZSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBrZXlzO1xuICB9O1xufVxuaWYoIShcInJlbW92ZVwiIGluIEVsZW1lbnQucHJvdG90eXBlKSl7XG4gIEVsZW1lbnQucHJvdG90eXBlLnJlbW92ZSA9IGZ1bmN0aW9uKCl7XG4gICAgaWYodGhpcy5wYXJlbnROb2RlKSB7XG4gICAgICB0aGlzLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcyk7XG4gICAgfVxuICB9O1xufVxuXG52YXIgdG5zID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICBvcHRpb25zID0gZXh0ZW5kKHtcbiAgICBjb250YWluZXI6ICcuc2xpZGVyJyxcbiAgICBtb2RlOiAnY2Fyb3VzZWwnLFxuICAgIGF4aXM6ICdob3Jpem9udGFsJyxcbiAgICBpdGVtczogMSxcbiAgICBndXR0ZXI6IDAsXG4gICAgZWRnZVBhZGRpbmc6IDAsXG4gICAgZml4ZWRXaWR0aDogZmFsc2UsXG4gICAgYXV0b1dpZHRoOiBmYWxzZSxcbiAgICB2aWV3cG9ydE1heDogZmFsc2UsXG4gICAgc2xpZGVCeTogMSxcbiAgICBjZW50ZXI6IGZhbHNlLFxuICAgIGNvbnRyb2xzOiB0cnVlLFxuICAgIGNvbnRyb2xzUG9zaXRpb246ICd0b3AnLFxuICAgIGNvbnRyb2xzVGV4dDogWydwcmV2JywgJ25leHQnXSxcbiAgICBjb250cm9sc0NvbnRhaW5lcjogZmFsc2UsXG4gICAgcHJldkJ1dHRvbjogZmFsc2UsXG4gICAgbmV4dEJ1dHRvbjogZmFsc2UsXG4gICAgbmF2OiB0cnVlLFxuICAgIG5hdlBvc2l0aW9uOiAndG9wJyxcbiAgICBuYXZDb250YWluZXI6IGZhbHNlLFxuICAgIG5hdkFzVGh1bWJuYWlsczogZmFsc2UsXG4gICAgYXJyb3dLZXlzOiBmYWxzZSxcbiAgICBzcGVlZDogMzAwLFxuICAgIGF1dG9wbGF5OiBmYWxzZSxcbiAgICBhdXRvcGxheVBvc2l0aW9uOiAndG9wJyxcbiAgICBhdXRvcGxheVRpbWVvdXQ6IDUwMDAsXG4gICAgYXV0b3BsYXlEaXJlY3Rpb246ICdmb3J3YXJkJyxcbiAgICBhdXRvcGxheVRleHQ6IFsnc3RhcnQnLCAnc3RvcCddLFxuICAgIGF1dG9wbGF5SG92ZXJQYXVzZTogZmFsc2UsXG4gICAgYXV0b3BsYXlCdXR0b246IGZhbHNlLFxuICAgIGF1dG9wbGF5QnV0dG9uT3V0cHV0OiB0cnVlLFxuICAgIGF1dG9wbGF5UmVzZXRPblZpc2liaWxpdHk6IHRydWUsXG4gICAgYW5pbWF0ZUluOiAndG5zLWZhZGVJbicsXG4gICAgYW5pbWF0ZU91dDogJ3Rucy1mYWRlT3V0JyxcbiAgICBhbmltYXRlTm9ybWFsOiAndG5zLW5vcm1hbCcsXG4gICAgYW5pbWF0ZURlbGF5OiBmYWxzZSxcbiAgICBsb29wOiB0cnVlLFxuICAgIHJld2luZDogZmFsc2UsXG4gICAgYXV0b0hlaWdodDogZmFsc2UsXG4gICAgcmVzcG9uc2l2ZTogZmFsc2UsXG4gICAgbGF6eWxvYWQ6IGZhbHNlLFxuICAgIGxhenlsb2FkU2VsZWN0b3I6ICcudG5zLWxhenktaW1nJyxcbiAgICB0b3VjaDogdHJ1ZSxcbiAgICBtb3VzZURyYWc6IGZhbHNlLFxuICAgIHN3aXBlQW5nbGU6IDE1LFxuICAgIG5lc3RlZDogZmFsc2UsXG4gICAgcHJldmVudEFjdGlvbldoZW5SdW5uaW5nOiBmYWxzZSxcbiAgICBwcmV2ZW50U2Nyb2xsT25Ub3VjaDogZmFsc2UsXG4gICAgZnJlZXphYmxlOiB0cnVlLFxuICAgIG9uSW5pdDogZmFsc2UsXG4gICAgdXNlTG9jYWxTdG9yYWdlOiB0cnVlXG4gIH0sIG9wdGlvbnMgfHwge30pO1xuICBcbiAgdmFyIGRvYyA9IGRvY3VtZW50LFxuICAgICAgd2luID0gd2luZG93LFxuICAgICAgS0VZUyA9IHtcbiAgICAgICAgRU5URVI6IDEzLFxuICAgICAgICBTUEFDRTogMzIsXG4gICAgICAgIExFRlQ6IDM3LFxuICAgICAgICBSSUdIVDogMzlcbiAgICAgIH0sXG4gICAgICB0bnNTdG9yYWdlID0ge30sXG4gICAgICBsb2NhbFN0b3JhZ2VBY2Nlc3MgPSBvcHRpb25zLnVzZUxvY2FsU3RvcmFnZTtcblxuICBpZiAobG9jYWxTdG9yYWdlQWNjZXNzKSB7XG4gICAgLy8gY2hlY2sgYnJvd3NlciB2ZXJzaW9uIGFuZCBsb2NhbCBzdG9yYWdlIGFjY2Vzc1xuICAgIHZhciBicm93c2VySW5mbyA9IG5hdmlnYXRvci51c2VyQWdlbnQ7XG4gICAgdmFyIHVpZCA9IG5ldyBEYXRlO1xuXG4gICAgdHJ5IHtcbiAgICAgIHRuc1N0b3JhZ2UgPSB3aW4ubG9jYWxTdG9yYWdlO1xuICAgICAgaWYgKHRuc1N0b3JhZ2UpIHtcbiAgICAgICAgdG5zU3RvcmFnZS5zZXRJdGVtKHVpZCwgdWlkKTtcbiAgICAgICAgbG9jYWxTdG9yYWdlQWNjZXNzID0gdG5zU3RvcmFnZS5nZXRJdGVtKHVpZCkgPT0gdWlkO1xuICAgICAgICB0bnNTdG9yYWdlLnJlbW92ZUl0ZW0odWlkKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxvY2FsU3RvcmFnZUFjY2VzcyA9IGZhbHNlO1xuICAgICAgfVxuICAgICAgaWYgKCFsb2NhbFN0b3JhZ2VBY2Nlc3MpIHsgdG5zU3RvcmFnZSA9IHt9OyB9XG4gICAgfSBjYXRjaChlKSB7XG4gICAgICBsb2NhbFN0b3JhZ2VBY2Nlc3MgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBpZiAobG9jYWxTdG9yYWdlQWNjZXNzKSB7XG4gICAgICAvLyByZW1vdmUgc3RvcmFnZSB3aGVuIGJyb3dzZXIgdmVyc2lvbiBjaGFuZ2VzXG4gICAgICBpZiAodG5zU3RvcmFnZVsndG5zQXBwJ10gJiYgdG5zU3RvcmFnZVsndG5zQXBwJ10gIT09IGJyb3dzZXJJbmZvKSB7XG4gICAgICAgIFsndEMnLCAndFBMJywgJ3RNUScsICd0VGYnLCAndDNEJywgJ3RURHUnLCAndFREZScsICd0QUR1JywgJ3RBRGUnLCAndFRFJywgJ3RBRSddLmZvckVhY2goZnVuY3Rpb24oaXRlbSkgeyB0bnNTdG9yYWdlLnJlbW92ZUl0ZW0oaXRlbSk7IH0pO1xuICAgICAgfVxuICAgICAgLy8gdXBkYXRlIGJyb3dzZXJJbmZvXG4gICAgICBsb2NhbFN0b3JhZ2VbJ3Ruc0FwcCddID0gYnJvd3NlckluZm87XG4gICAgfVxuICB9XG5cbiAgdmFyIENBTEMgPSB0bnNTdG9yYWdlWyd0QyddID8gY2hlY2tTdG9yYWdlVmFsdWUodG5zU3RvcmFnZVsndEMnXSkgOiBzZXRMb2NhbFN0b3JhZ2UodG5zU3RvcmFnZSwgJ3RDJywgY2FsYygpLCBsb2NhbFN0b3JhZ2VBY2Nlc3MpLFxuICAgICAgUEVSQ0VOVEFHRUxBWU9VVCA9IHRuc1N0b3JhZ2VbJ3RQTCddID8gY2hlY2tTdG9yYWdlVmFsdWUodG5zU3RvcmFnZVsndFBMJ10pIDogc2V0TG9jYWxTdG9yYWdlKHRuc1N0b3JhZ2UsICd0UEwnLCBwZXJjZW50YWdlTGF5b3V0KCksIGxvY2FsU3RvcmFnZUFjY2VzcyksXG4gICAgICBDU1NNUSA9IHRuc1N0b3JhZ2VbJ3RNUSddID8gY2hlY2tTdG9yYWdlVmFsdWUodG5zU3RvcmFnZVsndE1RJ10pIDogc2V0TG9jYWxTdG9yYWdlKHRuc1N0b3JhZ2UsICd0TVEnLCBtZWRpYXF1ZXJ5U3VwcG9ydCgpLCBsb2NhbFN0b3JhZ2VBY2Nlc3MpLFxuICAgICAgVFJBTlNGT1JNID0gdG5zU3RvcmFnZVsndFRmJ10gPyBjaGVja1N0b3JhZ2VWYWx1ZSh0bnNTdG9yYWdlWyd0VGYnXSkgOiBzZXRMb2NhbFN0b3JhZ2UodG5zU3RvcmFnZSwgJ3RUZicsIHdoaWNoUHJvcGVydHkoJ3RyYW5zZm9ybScpLCBsb2NhbFN0b3JhZ2VBY2Nlc3MpLFxuICAgICAgSEFTM0RUUkFOU0ZPUk1TID0gdG5zU3RvcmFnZVsndDNEJ10gPyBjaGVja1N0b3JhZ2VWYWx1ZSh0bnNTdG9yYWdlWyd0M0QnXSkgOiBzZXRMb2NhbFN0b3JhZ2UodG5zU3RvcmFnZSwgJ3QzRCcsIGhhczNEVHJhbnNmb3JtcyhUUkFOU0ZPUk0pLCBsb2NhbFN0b3JhZ2VBY2Nlc3MpLFxuICAgICAgVFJBTlNJVElPTkRVUkFUSU9OID0gdG5zU3RvcmFnZVsndFREdSddID8gY2hlY2tTdG9yYWdlVmFsdWUodG5zU3RvcmFnZVsndFREdSddKSA6IHNldExvY2FsU3RvcmFnZSh0bnNTdG9yYWdlLCAndFREdScsIHdoaWNoUHJvcGVydHkoJ3RyYW5zaXRpb25EdXJhdGlvbicpLCBsb2NhbFN0b3JhZ2VBY2Nlc3MpLFxuICAgICAgVFJBTlNJVElPTkRFTEFZID0gdG5zU3RvcmFnZVsndFREZSddID8gY2hlY2tTdG9yYWdlVmFsdWUodG5zU3RvcmFnZVsndFREZSddKSA6IHNldExvY2FsU3RvcmFnZSh0bnNTdG9yYWdlLCAndFREZScsIHdoaWNoUHJvcGVydHkoJ3RyYW5zaXRpb25EZWxheScpLCBsb2NhbFN0b3JhZ2VBY2Nlc3MpLFxuICAgICAgQU5JTUFUSU9ORFVSQVRJT04gPSB0bnNTdG9yYWdlWyd0QUR1J10gPyBjaGVja1N0b3JhZ2VWYWx1ZSh0bnNTdG9yYWdlWyd0QUR1J10pIDogc2V0TG9jYWxTdG9yYWdlKHRuc1N0b3JhZ2UsICd0QUR1Jywgd2hpY2hQcm9wZXJ0eSgnYW5pbWF0aW9uRHVyYXRpb24nKSwgbG9jYWxTdG9yYWdlQWNjZXNzKSxcbiAgICAgIEFOSU1BVElPTkRFTEFZID0gdG5zU3RvcmFnZVsndEFEZSddID8gY2hlY2tTdG9yYWdlVmFsdWUodG5zU3RvcmFnZVsndEFEZSddKSA6IHNldExvY2FsU3RvcmFnZSh0bnNTdG9yYWdlLCAndEFEZScsIHdoaWNoUHJvcGVydHkoJ2FuaW1hdGlvbkRlbGF5JyksIGxvY2FsU3RvcmFnZUFjY2VzcyksXG4gICAgICBUUkFOU0lUSU9ORU5EID0gdG5zU3RvcmFnZVsndFRFJ10gPyBjaGVja1N0b3JhZ2VWYWx1ZSh0bnNTdG9yYWdlWyd0VEUnXSkgOiBzZXRMb2NhbFN0b3JhZ2UodG5zU3RvcmFnZSwgJ3RURScsIGdldEVuZFByb3BlcnR5KFRSQU5TSVRJT05EVVJBVElPTiwgJ1RyYW5zaXRpb24nKSwgbG9jYWxTdG9yYWdlQWNjZXNzKSxcbiAgICAgIEFOSU1BVElPTkVORCA9IHRuc1N0b3JhZ2VbJ3RBRSddID8gY2hlY2tTdG9yYWdlVmFsdWUodG5zU3RvcmFnZVsndEFFJ10pIDogc2V0TG9jYWxTdG9yYWdlKHRuc1N0b3JhZ2UsICd0QUUnLCBnZXRFbmRQcm9wZXJ0eShBTklNQVRJT05EVVJBVElPTiwgJ0FuaW1hdGlvbicpLCBsb2NhbFN0b3JhZ2VBY2Nlc3MpO1xuXG4gIC8vIGdldCBlbGVtZW50IG5vZGVzIGZyb20gc2VsZWN0b3JzXG4gIHZhciBzdXBwb3J0Q29uc29sZVdhcm4gPSB3aW4uY29uc29sZSAmJiB0eXBlb2Ygd2luLmNvbnNvbGUud2FybiA9PT0gXCJmdW5jdGlvblwiLFxuICAgICAgdG5zTGlzdCA9IFsnY29udGFpbmVyJywgJ2NvbnRyb2xzQ29udGFpbmVyJywgJ3ByZXZCdXR0b24nLCAnbmV4dEJ1dHRvbicsICduYXZDb250YWluZXInLCAnYXV0b3BsYXlCdXR0b24nXSwgXG4gICAgICBvcHRpb25zRWxlbWVudHMgPSB7fTtcbiAgICAgIFxuICB0bnNMaXN0LmZvckVhY2goZnVuY3Rpb24oaXRlbSkge1xuICAgIGlmICh0eXBlb2Ygb3B0aW9uc1tpdGVtXSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHZhciBzdHIgPSBvcHRpb25zW2l0ZW1dLFxuICAgICAgICAgIGVsID0gZG9jLnF1ZXJ5U2VsZWN0b3Ioc3RyKTtcbiAgICAgIG9wdGlvbnNFbGVtZW50c1tpdGVtXSA9IHN0cjtcblxuICAgICAgaWYgKGVsICYmIGVsLm5vZGVOYW1lKSB7XG4gICAgICAgIG9wdGlvbnNbaXRlbV0gPSBlbDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChzdXBwb3J0Q29uc29sZVdhcm4pIHsgY29uc29sZS53YXJuKCdDYW5cXCd0IGZpbmQnLCBvcHRpb25zW2l0ZW1dKTsgfVxuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfVxuICB9KTtcblxuICAvLyBtYWtlIHN1cmUgYXQgbGVhc3QgMSBzbGlkZVxuICBpZiAob3B0aW9ucy5jb250YWluZXIuY2hpbGRyZW4ubGVuZ3RoIDwgMSkge1xuICAgIGlmIChzdXBwb3J0Q29uc29sZVdhcm4pIHsgY29uc29sZS53YXJuKCdObyBzbGlkZXMgZm91bmQgaW4nLCBvcHRpb25zLmNvbnRhaW5lcik7IH1cbiAgICByZXR1cm47XG4gICB9XG5cbiAgLy8gdXBkYXRlIG9wdGlvbnNcbiAgdmFyIHJlc3BvbnNpdmUgPSBvcHRpb25zLnJlc3BvbnNpdmUsXG4gICAgICBuZXN0ZWQgPSBvcHRpb25zLm5lc3RlZCxcbiAgICAgIGNhcm91c2VsID0gb3B0aW9ucy5tb2RlID09PSAnY2Fyb3VzZWwnID8gdHJ1ZSA6IGZhbHNlO1xuXG4gIGlmIChyZXNwb25zaXZlKSB7XG4gICAgLy8gYXBwbHkgcmVzcG9uc2l2ZVswXSB0byBvcHRpb25zIGFuZCByZW1vdmUgaXRcbiAgICBpZiAoMCBpbiByZXNwb25zaXZlKSB7XG4gICAgICBvcHRpb25zID0gZXh0ZW5kKG9wdGlvbnMsIHJlc3BvbnNpdmVbMF0pO1xuICAgICAgZGVsZXRlIHJlc3BvbnNpdmVbMF07XG4gICAgfVxuXG4gICAgdmFyIHJlc3BvbnNpdmVUZW0gPSB7fTtcbiAgICBmb3IgKHZhciBrZXkgaW4gcmVzcG9uc2l2ZSkge1xuICAgICAgdmFyIHZhbCA9IHJlc3BvbnNpdmVba2V5XTtcbiAgICAgIC8vIHVwZGF0ZSByZXNwb25zaXZlXG4gICAgICAvLyBmcm9tOiAzMDA6IDJcbiAgICAgIC8vIHRvOiBcbiAgICAgIC8vICAgMzAwOiB7IFxuICAgICAgLy8gICAgIGl0ZW1zOiAyIFxuICAgICAgLy8gICB9IFxuICAgICAgdmFsID0gdHlwZW9mIHZhbCA9PT0gJ251bWJlcicgPyB7aXRlbXM6IHZhbH0gOiB2YWw7XG4gICAgICByZXNwb25zaXZlVGVtW2tleV0gPSB2YWw7XG4gICAgfVxuICAgIHJlc3BvbnNpdmUgPSByZXNwb25zaXZlVGVtO1xuICAgIHJlc3BvbnNpdmVUZW0gPSBudWxsO1xuICB9XG5cbiAgLy8gdXBkYXRlIG9wdGlvbnNcbiAgZnVuY3Rpb24gdXBkYXRlT3B0aW9ucyAob2JqKSB7XG4gICAgZm9yICh2YXIga2V5IGluIG9iaikge1xuICAgICAgaWYgKCFjYXJvdXNlbCkge1xuICAgICAgICBpZiAoa2V5ID09PSAnc2xpZGVCeScpIHsgb2JqW2tleV0gPSAncGFnZSc7IH1cbiAgICAgICAgaWYgKGtleSA9PT0gJ2VkZ2VQYWRkaW5nJykgeyBvYmpba2V5XSA9IGZhbHNlOyB9XG4gICAgICAgIGlmIChrZXkgPT09ICdhdXRvSGVpZ2h0JykgeyBvYmpba2V5XSA9IGZhbHNlOyB9XG4gICAgICB9XG5cbiAgICAgIC8vIHVwZGF0ZSByZXNwb25zaXZlIG9wdGlvbnNcbiAgICAgIGlmIChrZXkgPT09ICdyZXNwb25zaXZlJykgeyB1cGRhdGVPcHRpb25zKG9ialtrZXldKTsgfVxuICAgIH1cbiAgfVxuICBpZiAoIWNhcm91c2VsKSB7IHVwZGF0ZU9wdGlvbnMob3B0aW9ucyk7IH1cblxuXG4gIC8vID09PSBkZWZpbmUgYW5kIHNldCB2YXJpYWJsZXMgPT09XG4gIGlmICghY2Fyb3VzZWwpIHtcbiAgICBvcHRpb25zLmF4aXMgPSAnaG9yaXpvbnRhbCc7XG4gICAgb3B0aW9ucy5zbGlkZUJ5ID0gJ3BhZ2UnO1xuICAgIG9wdGlvbnMuZWRnZVBhZGRpbmcgPSBmYWxzZTtcblxuICAgIHZhciBhbmltYXRlSW4gPSBvcHRpb25zLmFuaW1hdGVJbixcbiAgICAgICAgYW5pbWF0ZU91dCA9IG9wdGlvbnMuYW5pbWF0ZU91dCxcbiAgICAgICAgYW5pbWF0ZURlbGF5ID0gb3B0aW9ucy5hbmltYXRlRGVsYXksXG4gICAgICAgIGFuaW1hdGVOb3JtYWwgPSBvcHRpb25zLmFuaW1hdGVOb3JtYWw7XG4gIH1cblxuICB2YXIgaG9yaXpvbnRhbCA9IG9wdGlvbnMuYXhpcyA9PT0gJ2hvcml6b250YWwnID8gdHJ1ZSA6IGZhbHNlLFxuICAgICAgb3V0ZXJXcmFwcGVyID0gZG9jLmNyZWF0ZUVsZW1lbnQoJ2RpdicpLFxuICAgICAgaW5uZXJXcmFwcGVyID0gZG9jLmNyZWF0ZUVsZW1lbnQoJ2RpdicpLFxuICAgICAgbWlkZGxlV3JhcHBlcixcbiAgICAgIGNvbnRhaW5lciA9IG9wdGlvbnMuY29udGFpbmVyLFxuICAgICAgY29udGFpbmVyUGFyZW50ID0gY29udGFpbmVyLnBhcmVudE5vZGUsXG4gICAgICBjb250YWluZXJIVE1MID0gY29udGFpbmVyLm91dGVySFRNTCxcbiAgICAgIHNsaWRlSXRlbXMgPSBjb250YWluZXIuY2hpbGRyZW4sXG4gICAgICBzbGlkZUNvdW50ID0gc2xpZGVJdGVtcy5sZW5ndGgsXG4gICAgICBicmVha3BvaW50Wm9uZSxcbiAgICAgIHdpbmRvd1dpZHRoID0gZ2V0V2luZG93V2lkdGgoKSxcbiAgICAgIGlzT24gPSBmYWxzZTtcbiAgaWYgKHJlc3BvbnNpdmUpIHsgc2V0QnJlYWtwb2ludFpvbmUoKTsgfVxuICBpZiAoY2Fyb3VzZWwpIHsgY29udGFpbmVyLmNsYXNzTmFtZSArPSAnIHRucy12cGZpeCc7IH1cblxuICAvLyBmaXhlZFdpZHRoOiB2aWV3cG9ydCA+IHJpZ2h0Qm91bmRhcnkgPiBpbmRleE1heFxuICB2YXIgYXV0b1dpZHRoID0gb3B0aW9ucy5hdXRvV2lkdGgsXG4gICAgICBmaXhlZFdpZHRoID0gZ2V0T3B0aW9uKCdmaXhlZFdpZHRoJyksXG4gICAgICBlZGdlUGFkZGluZyA9IGdldE9wdGlvbignZWRnZVBhZGRpbmcnKSxcbiAgICAgIGd1dHRlciA9IGdldE9wdGlvbignZ3V0dGVyJyksXG4gICAgICB2aWV3cG9ydCA9IGdldFZpZXdwb3J0V2lkdGgoKSxcbiAgICAgIGNlbnRlciA9IGdldE9wdGlvbignY2VudGVyJyksXG4gICAgICBpdGVtcyA9ICFhdXRvV2lkdGggPyBNYXRoLmZsb29yKGdldE9wdGlvbignaXRlbXMnKSkgOiAxLFxuICAgICAgc2xpZGVCeSA9IGdldE9wdGlvbignc2xpZGVCeScpLFxuICAgICAgdmlld3BvcnRNYXggPSBvcHRpb25zLnZpZXdwb3J0TWF4IHx8IG9wdGlvbnMuZml4ZWRXaWR0aFZpZXdwb3J0V2lkdGgsXG4gICAgICBhcnJvd0tleXMgPSBnZXRPcHRpb24oJ2Fycm93S2V5cycpLFxuICAgICAgc3BlZWQgPSBnZXRPcHRpb24oJ3NwZWVkJyksXG4gICAgICByZXdpbmQgPSBvcHRpb25zLnJld2luZCxcbiAgICAgIGxvb3AgPSByZXdpbmQgPyBmYWxzZSA6IG9wdGlvbnMubG9vcCxcbiAgICAgIGF1dG9IZWlnaHQgPSBnZXRPcHRpb24oJ2F1dG9IZWlnaHQnKSxcbiAgICAgIGNvbnRyb2xzID0gZ2V0T3B0aW9uKCdjb250cm9scycpLFxuICAgICAgY29udHJvbHNUZXh0ID0gZ2V0T3B0aW9uKCdjb250cm9sc1RleHQnKSxcbiAgICAgIG5hdiA9IGdldE9wdGlvbignbmF2JyksXG4gICAgICB0b3VjaCA9IGdldE9wdGlvbigndG91Y2gnKSxcbiAgICAgIG1vdXNlRHJhZyA9IGdldE9wdGlvbignbW91c2VEcmFnJyksXG4gICAgICBhdXRvcGxheSA9IGdldE9wdGlvbignYXV0b3BsYXknKSxcbiAgICAgIGF1dG9wbGF5VGltZW91dCA9IGdldE9wdGlvbignYXV0b3BsYXlUaW1lb3V0JyksXG4gICAgICBhdXRvcGxheVRleHQgPSBnZXRPcHRpb24oJ2F1dG9wbGF5VGV4dCcpLFxuICAgICAgYXV0b3BsYXlIb3ZlclBhdXNlID0gZ2V0T3B0aW9uKCdhdXRvcGxheUhvdmVyUGF1c2UnKSxcbiAgICAgIGF1dG9wbGF5UmVzZXRPblZpc2liaWxpdHkgPSBnZXRPcHRpb24oJ2F1dG9wbGF5UmVzZXRPblZpc2liaWxpdHknKSxcbiAgICAgIHNoZWV0ID0gY3JlYXRlU3R5bGVTaGVldCgpLFxuICAgICAgbGF6eWxvYWQgPSBvcHRpb25zLmxhenlsb2FkLFxuICAgICAgbGF6eWxvYWRTZWxlY3RvciA9IG9wdGlvbnMubGF6eWxvYWRTZWxlY3RvcixcbiAgICAgIHNsaWRlUG9zaXRpb25zLCAvLyBjb2xsZWN0aW9uIG9mIHNsaWRlIHBvc2l0aW9uc1xuICAgICAgc2xpZGVJdGVtc091dCA9IFtdLFxuICAgICAgY2xvbmVDb3VudCA9IGxvb3AgPyBnZXRDbG9uZUNvdW50Rm9yTG9vcCgpIDogMCxcbiAgICAgIHNsaWRlQ291bnROZXcgPSAhY2Fyb3VzZWwgPyBzbGlkZUNvdW50ICsgY2xvbmVDb3VudCA6IHNsaWRlQ291bnQgKyBjbG9uZUNvdW50ICogMixcbiAgICAgIGhhc1JpZ2h0RGVhZFpvbmUgPSAoZml4ZWRXaWR0aCB8fCBhdXRvV2lkdGgpICYmICFsb29wID8gdHJ1ZSA6IGZhbHNlLFxuICAgICAgcmlnaHRCb3VuZGFyeSA9IGZpeGVkV2lkdGggPyBnZXRSaWdodEJvdW5kYXJ5KCkgOiBudWxsLFxuICAgICAgdXBkYXRlSW5kZXhCZWZvcmVUcmFuc2Zvcm0gPSAoIWNhcm91c2VsIHx8ICFsb29wKSA/IHRydWUgOiBmYWxzZSxcbiAgICAgIC8vIHRyYW5zZm9ybVxuICAgICAgdHJhbnNmb3JtQXR0ciA9IGhvcml6b250YWwgPyAnbGVmdCcgOiAndG9wJyxcbiAgICAgIHRyYW5zZm9ybVByZWZpeCA9ICcnLFxuICAgICAgdHJhbnNmb3JtUG9zdGZpeCA9ICcnLFxuICAgICAgLy8gaW5kZXhcbiAgICAgIGdldEluZGV4TWF4ID0gKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKGZpeGVkV2lkdGgpIHtcbiAgICAgICAgICByZXR1cm4gZnVuY3Rpb24oKSB7IHJldHVybiBjZW50ZXIgJiYgIWxvb3AgPyBzbGlkZUNvdW50IC0gMSA6IE1hdGguY2VpbCgtIHJpZ2h0Qm91bmRhcnkgLyAoZml4ZWRXaWR0aCArIGd1dHRlcikpOyB9O1xuICAgICAgICB9IGVsc2UgaWYgKGF1dG9XaWR0aCkge1xuICAgICAgICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSBzbGlkZUNvdW50TmV3LCByZXN1bHQgPSBpIC0gMTsgaS0tOykge1xuICAgICAgICAgICAgICBpZiAoc2xpZGVQb3NpdGlvbnNbaV0gPiAtIHJpZ2h0Qm91bmRhcnkpIHsgcmV0dXJuIGk7IH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGlmIChjZW50ZXIgJiYgY2Fyb3VzZWwgJiYgIWxvb3ApIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHNsaWRlQ291bnQgLSAxO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGxvb3AgfHwgY2Fyb3VzZWwgPyBNYXRoLm1heCgwLCBzbGlkZUNvdW50TmV3IC0gTWF0aC5jZWlsKGl0ZW1zKSkgOiBzbGlkZUNvdW50TmV3IC0gMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICB9KSgpLFxuICAgICAgaW5kZXggPSBnZXRTdGFydEluZGV4KGdldE9wdGlvbignc3RhcnRJbmRleCcpKSxcbiAgICAgIGluZGV4Q2FjaGVkID0gaW5kZXgsXG4gICAgICBkaXNwbGF5SW5kZXggPSBnZXRDdXJyZW50U2xpZGUoKSxcbiAgICAgIGluZGV4TWluID0gMCxcbiAgICAgIGluZGV4TWF4ID0gIWF1dG9XaWR0aCA/IGdldEluZGV4TWF4KCkgOiBudWxsLFxuICAgICAgLy8gcmVzaXplXG4gICAgICByZXNpemVUaW1lcixcbiAgICAgIHByZXZlbnRBY3Rpb25XaGVuUnVubmluZyA9IG9wdGlvbnMucHJldmVudEFjdGlvbldoZW5SdW5uaW5nLFxuICAgICAgc3dpcGVBbmdsZSA9IG9wdGlvbnMuc3dpcGVBbmdsZSxcbiAgICAgIG1vdmVEaXJlY3Rpb25FeHBlY3RlZCA9IHN3aXBlQW5nbGUgPyAnPycgOiB0cnVlLFxuICAgICAgcnVubmluZyA9IGZhbHNlLFxuICAgICAgb25Jbml0ID0gb3B0aW9ucy5vbkluaXQsXG4gICAgICBldmVudHMgPSBuZXcgRXZlbnRzKCksXG4gICAgICAvLyBpZCwgY2xhc3NcbiAgICAgIG5ld0NvbnRhaW5lckNsYXNzZXMgPSAnIHRucy1zbGlkZXIgdG5zLScgKyBvcHRpb25zLm1vZGUsXG4gICAgICBzbGlkZUlkID0gY29udGFpbmVyLmlkIHx8IGdldFNsaWRlSWQoKSxcbiAgICAgIGRpc2FibGUgPSBnZXRPcHRpb24oJ2Rpc2FibGUnKSxcbiAgICAgIGRpc2FibGVkID0gZmFsc2UsXG4gICAgICBmcmVlemFibGUgPSBvcHRpb25zLmZyZWV6YWJsZSxcbiAgICAgIGZyZWV6ZSA9IGZyZWV6YWJsZSAmJiAhYXV0b1dpZHRoID8gZ2V0RnJlZXplKCkgOiBmYWxzZSxcbiAgICAgIGZyb3plbiA9IGZhbHNlLFxuICAgICAgY29udHJvbHNFdmVudHMgPSB7XG4gICAgICAgICdjbGljayc6IG9uQ29udHJvbHNDbGljayxcbiAgICAgICAgJ2tleWRvd24nOiBvbkNvbnRyb2xzS2V5ZG93blxuICAgICAgfSxcbiAgICAgIG5hdkV2ZW50cyA9IHtcbiAgICAgICAgJ2NsaWNrJzogb25OYXZDbGljayxcbiAgICAgICAgJ2tleWRvd24nOiBvbk5hdktleWRvd25cbiAgICAgIH0sXG4gICAgICBob3ZlckV2ZW50cyA9IHtcbiAgICAgICAgJ21vdXNlb3Zlcic6IG1vdXNlb3ZlclBhdXNlLFxuICAgICAgICAnbW91c2VvdXQnOiBtb3VzZW91dFJlc3RhcnRcbiAgICAgIH0sXG4gICAgICB2aXNpYmlsaXR5RXZlbnQgPSB7J3Zpc2liaWxpdHljaGFuZ2UnOiBvblZpc2liaWxpdHlDaGFuZ2V9LFxuICAgICAgZG9jbWVudEtleWRvd25FdmVudCA9IHsna2V5ZG93bic6IG9uRG9jdW1lbnRLZXlkb3dufSxcbiAgICAgIHRvdWNoRXZlbnRzID0ge1xuICAgICAgICAndG91Y2hzdGFydCc6IG9uUGFuU3RhcnQsXG4gICAgICAgICd0b3VjaG1vdmUnOiBvblBhbk1vdmUsXG4gICAgICAgICd0b3VjaGVuZCc6IG9uUGFuRW5kLFxuICAgICAgICAndG91Y2hjYW5jZWwnOiBvblBhbkVuZFxuICAgICAgfSwgZHJhZ0V2ZW50cyA9IHtcbiAgICAgICAgJ21vdXNlZG93bic6IG9uUGFuU3RhcnQsXG4gICAgICAgICdtb3VzZW1vdmUnOiBvblBhbk1vdmUsXG4gICAgICAgICdtb3VzZXVwJzogb25QYW5FbmQsXG4gICAgICAgICdtb3VzZWxlYXZlJzogb25QYW5FbmRcbiAgICAgIH0sXG4gICAgICBoYXNDb250cm9scyA9IGhhc09wdGlvbignY29udHJvbHMnKSxcbiAgICAgIGhhc05hdiA9IGhhc09wdGlvbignbmF2JyksXG4gICAgICBuYXZBc1RodW1ibmFpbHMgPSBhdXRvV2lkdGggPyB0cnVlIDogb3B0aW9ucy5uYXZBc1RodW1ibmFpbHMsXG4gICAgICBoYXNBdXRvcGxheSA9IGhhc09wdGlvbignYXV0b3BsYXknKSxcbiAgICAgIGhhc1RvdWNoID0gaGFzT3B0aW9uKCd0b3VjaCcpLFxuICAgICAgaGFzTW91c2VEcmFnID0gaGFzT3B0aW9uKCdtb3VzZURyYWcnKSxcbiAgICAgIHNsaWRlQWN0aXZlQ2xhc3MgPSAndG5zLXNsaWRlLWFjdGl2ZScsXG4gICAgICBpbWdDb21wbGV0ZUNsYXNzID0gJ3Rucy1jb21wbGV0ZScsXG4gICAgICBpbWdFdmVudHMgPSB7XG4gICAgICAgICdsb2FkJzogb25JbWdMb2FkZWQsXG4gICAgICAgICdlcnJvcic6IG9uSW1nRmFpbGVkXG4gICAgICB9LFxuICAgICAgaW1nc0NvbXBsZXRlLFxuICAgICAgbGl2ZXJlZ2lvbkN1cnJlbnQsXG4gICAgICBwcmV2ZW50U2Nyb2xsID0gb3B0aW9ucy5wcmV2ZW50U2Nyb2xsT25Ub3VjaCA9PT0gJ2ZvcmNlJyA/IHRydWUgOiBmYWxzZTtcblxuICAvLyBjb250cm9sc1xuICBpZiAoaGFzQ29udHJvbHMpIHtcbiAgICB2YXIgY29udHJvbHNDb250YWluZXIgPSBvcHRpb25zLmNvbnRyb2xzQ29udGFpbmVyLFxuICAgICAgICBjb250cm9sc0NvbnRhaW5lckhUTUwgPSBvcHRpb25zLmNvbnRyb2xzQ29udGFpbmVyID8gb3B0aW9ucy5jb250cm9sc0NvbnRhaW5lci5vdXRlckhUTUwgOiAnJyxcbiAgICAgICAgcHJldkJ1dHRvbiA9IG9wdGlvbnMucHJldkJ1dHRvbixcbiAgICAgICAgbmV4dEJ1dHRvbiA9IG9wdGlvbnMubmV4dEJ1dHRvbixcbiAgICAgICAgcHJldkJ1dHRvbkhUTUwgPSBvcHRpb25zLnByZXZCdXR0b24gPyBvcHRpb25zLnByZXZCdXR0b24ub3V0ZXJIVE1MIDogJycsXG4gICAgICAgIG5leHRCdXR0b25IVE1MID0gb3B0aW9ucy5uZXh0QnV0dG9uID8gb3B0aW9ucy5uZXh0QnV0dG9uLm91dGVySFRNTCA6ICcnLFxuICAgICAgICBwcmV2SXNCdXR0b24sXG4gICAgICAgIG5leHRJc0J1dHRvbjtcbiAgfVxuXG4gIC8vIG5hdlxuICBpZiAoaGFzTmF2KSB7XG4gICAgdmFyIG5hdkNvbnRhaW5lciA9IG9wdGlvbnMubmF2Q29udGFpbmVyLFxuICAgICAgICBuYXZDb250YWluZXJIVE1MID0gb3B0aW9ucy5uYXZDb250YWluZXIgPyBvcHRpb25zLm5hdkNvbnRhaW5lci5vdXRlckhUTUwgOiAnJyxcbiAgICAgICAgbmF2SXRlbXMsXG4gICAgICAgIHBhZ2VzID0gYXV0b1dpZHRoID8gc2xpZGVDb3VudCA6IGdldFBhZ2VzKCksXG4gICAgICAgIHBhZ2VzQ2FjaGVkID0gMCxcbiAgICAgICAgbmF2Q2xpY2tlZCA9IC0xLFxuICAgICAgICBuYXZDdXJyZW50SW5kZXggPSBnZXRDdXJyZW50TmF2SW5kZXgoKSxcbiAgICAgICAgbmF2Q3VycmVudEluZGV4Q2FjaGVkID0gbmF2Q3VycmVudEluZGV4LFxuICAgICAgICBuYXZBY3RpdmVDbGFzcyA9ICd0bnMtbmF2LWFjdGl2ZScsXG4gICAgICAgIG5hdlN0ciA9ICdDYXJvdXNlbCBQYWdlICcsXG4gICAgICAgIG5hdlN0ckN1cnJlbnQgPSAnIChDdXJyZW50IFNsaWRlKSc7XG4gIH1cblxuICAvLyBhdXRvcGxheVxuICBpZiAoaGFzQXV0b3BsYXkpIHtcbiAgICB2YXIgYXV0b3BsYXlEaXJlY3Rpb24gPSBvcHRpb25zLmF1dG9wbGF5RGlyZWN0aW9uID09PSAnZm9yd2FyZCcgPyAxIDogLTEsXG4gICAgICAgIGF1dG9wbGF5QnV0dG9uID0gb3B0aW9ucy5hdXRvcGxheUJ1dHRvbixcbiAgICAgICAgYXV0b3BsYXlCdXR0b25IVE1MID0gb3B0aW9ucy5hdXRvcGxheUJ1dHRvbiA/IG9wdGlvbnMuYXV0b3BsYXlCdXR0b24ub3V0ZXJIVE1MIDogJycsXG4gICAgICAgIGF1dG9wbGF5SHRtbFN0cmluZ3MgPSBbJzxzcGFuIGNsYXNzPVxcJ3Rucy12aXN1YWxseS1oaWRkZW5cXCc+JywgJyBhbmltYXRpb248L3NwYW4+J10sXG4gICAgICAgIGF1dG9wbGF5VGltZXIsXG4gICAgICAgIGFuaW1hdGluZyxcbiAgICAgICAgYXV0b3BsYXlIb3ZlclBhdXNlZCxcbiAgICAgICAgYXV0b3BsYXlVc2VyUGF1c2VkLFxuICAgICAgICBhdXRvcGxheVZpc2liaWxpdHlQYXVzZWQ7XG4gIH1cblxuICBpZiAoaGFzVG91Y2ggfHwgaGFzTW91c2VEcmFnKSB7XG4gICAgdmFyIGluaXRQb3NpdGlvbiA9IHt9LFxuICAgICAgICBsYXN0UG9zaXRpb24gPSB7fSxcbiAgICAgICAgdHJhbnNsYXRlSW5pdCxcbiAgICAgICAgZGlzWCxcbiAgICAgICAgZGlzWSxcbiAgICAgICAgcGFuU3RhcnQgPSBmYWxzZSxcbiAgICAgICAgcmFmSW5kZXgsXG4gICAgICAgIGdldERpc3QgPSBob3Jpem9udGFsID8gXG4gICAgICAgICAgZnVuY3Rpb24oYSwgYikgeyByZXR1cm4gYS54IC0gYi54OyB9IDpcbiAgICAgICAgICBmdW5jdGlvbihhLCBiKSB7IHJldHVybiBhLnkgLSBiLnk7IH07XG4gIH1cbiAgXG4gIC8vIGRpc2FibGUgc2xpZGVyIHdoZW4gc2xpZGVjb3VudCA8PSBpdGVtc1xuICBpZiAoIWF1dG9XaWR0aCkgeyByZXNldFZhcmlibGVzV2hlbkRpc2FibGUoZGlzYWJsZSB8fCBmcmVlemUpOyB9XG5cbiAgaWYgKFRSQU5TRk9STSkge1xuICAgIHRyYW5zZm9ybUF0dHIgPSBUUkFOU0ZPUk07XG4gICAgdHJhbnNmb3JtUHJlZml4ID0gJ3RyYW5zbGF0ZSc7XG5cbiAgICBpZiAoSEFTM0RUUkFOU0ZPUk1TKSB7XG4gICAgICB0cmFuc2Zvcm1QcmVmaXggKz0gaG9yaXpvbnRhbCA/ICczZCgnIDogJzNkKDBweCwgJztcbiAgICAgIHRyYW5zZm9ybVBvc3RmaXggPSBob3Jpem9udGFsID8gJywgMHB4LCAwcHgpJyA6ICcsIDBweCknO1xuICAgIH0gZWxzZSB7XG4gICAgICB0cmFuc2Zvcm1QcmVmaXggKz0gaG9yaXpvbnRhbCA/ICdYKCcgOiAnWSgnO1xuICAgICAgdHJhbnNmb3JtUG9zdGZpeCA9ICcpJztcbiAgICB9XG5cbiAgfVxuXG4gIGlmIChjYXJvdXNlbCkgeyBjb250YWluZXIuY2xhc3NOYW1lID0gY29udGFpbmVyLmNsYXNzTmFtZS5yZXBsYWNlKCd0bnMtdnBmaXgnLCAnJyk7IH1cbiAgaW5pdFN0cnVjdHVyZSgpO1xuICBpbml0U2hlZXQoKTtcbiAgaW5pdFNsaWRlclRyYW5zZm9ybSgpO1xuXG4gIC8vID09PSBDT01NT04gRlVOQ1RJT05TID09PSAvL1xuICBmdW5jdGlvbiByZXNldFZhcmlibGVzV2hlbkRpc2FibGUgKGNvbmRpdGlvbikge1xuICAgIGlmIChjb25kaXRpb24pIHtcbiAgICAgIGNvbnRyb2xzID0gbmF2ID0gdG91Y2ggPSBtb3VzZURyYWcgPSBhcnJvd0tleXMgPSBhdXRvcGxheSA9IGF1dG9wbGF5SG92ZXJQYXVzZSA9IGF1dG9wbGF5UmVzZXRPblZpc2liaWxpdHkgPSBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBnZXRDdXJyZW50U2xpZGUgKCkge1xuICAgIHZhciB0ZW0gPSBjYXJvdXNlbCA/IGluZGV4IC0gY2xvbmVDb3VudCA6IGluZGV4O1xuICAgIHdoaWxlICh0ZW0gPCAwKSB7IHRlbSArPSBzbGlkZUNvdW50OyB9XG4gICAgcmV0dXJuIHRlbSVzbGlkZUNvdW50ICsgMTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldFN0YXJ0SW5kZXggKGluZCkge1xuICAgIGluZCA9IGluZCA/IE1hdGgubWF4KDAsIE1hdGgubWluKGxvb3AgPyBzbGlkZUNvdW50IC0gMSA6IHNsaWRlQ291bnQgLSBpdGVtcywgaW5kKSkgOiAwO1xuICAgIHJldHVybiBjYXJvdXNlbCA/IGluZCArIGNsb25lQ291bnQgOiBpbmQ7XG4gIH1cblxuICBmdW5jdGlvbiBnZXRBYnNJbmRleCAoaSkge1xuICAgIGlmIChpID09IG51bGwpIHsgaSA9IGluZGV4OyB9XG5cbiAgICBpZiAoY2Fyb3VzZWwpIHsgaSAtPSBjbG9uZUNvdW50OyB9XG4gICAgd2hpbGUgKGkgPCAwKSB7IGkgKz0gc2xpZGVDb3VudDsgfVxuXG4gICAgcmV0dXJuIE1hdGguZmxvb3IoaSVzbGlkZUNvdW50KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldEN1cnJlbnROYXZJbmRleCAoKSB7XG4gICAgdmFyIGFic0luZGV4ID0gZ2V0QWJzSW5kZXgoKSxcbiAgICAgICAgcmVzdWx0O1xuXG4gICAgcmVzdWx0ID0gbmF2QXNUaHVtYm5haWxzID8gYWJzSW5kZXggOiBcbiAgICAgIGZpeGVkV2lkdGggfHwgYXV0b1dpZHRoID8gTWF0aC5jZWlsKChhYnNJbmRleCArIDEpICogcGFnZXMgLyBzbGlkZUNvdW50IC0gMSkgOiBcbiAgICAgICAgICBNYXRoLmZsb29yKGFic0luZGV4IC8gaXRlbXMpO1xuXG4gICAgLy8gc2V0IGFjdGl2ZSBuYXYgdG8gdGhlIGxhc3Qgb25lIHdoZW4gcmVhY2hlcyB0aGUgcmlnaHQgZWRnZVxuICAgIGlmICghbG9vcCAmJiBjYXJvdXNlbCAmJiBpbmRleCA9PT0gaW5kZXhNYXgpIHsgcmVzdWx0ID0gcGFnZXMgLSAxOyB9XG5cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0SXRlbXNNYXggKCkge1xuICAgIC8vIGZpeGVkV2lkdGggb3IgYXV0b1dpZHRoIHdoaWxlIHZpZXdwb3J0TWF4IGlzIG5vdCBhdmFpbGFibGVcbiAgICBpZiAoYXV0b1dpZHRoIHx8IChmaXhlZFdpZHRoICYmICF2aWV3cG9ydE1heCkpIHtcbiAgICAgIHJldHVybiBzbGlkZUNvdW50IC0gMTtcbiAgICAvLyBtb3N0IGNhc2VzXG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBzdHIgPSBmaXhlZFdpZHRoID8gJ2ZpeGVkV2lkdGgnIDogJ2l0ZW1zJyxcbiAgICAgICAgICBhcnIgPSBbXTtcblxuICAgICAgaWYgKGZpeGVkV2lkdGggfHwgb3B0aW9uc1tzdHJdIDwgc2xpZGVDb3VudCkgeyBhcnIucHVzaChvcHRpb25zW3N0cl0pOyB9XG5cbiAgICAgIGlmIChyZXNwb25zaXZlKSB7XG4gICAgICAgIGZvciAodmFyIGJwIGluIHJlc3BvbnNpdmUpIHtcbiAgICAgICAgICB2YXIgdGVtID0gcmVzcG9uc2l2ZVticF1bc3RyXTtcbiAgICAgICAgICBpZiAodGVtICYmIChmaXhlZFdpZHRoIHx8IHRlbSA8IHNsaWRlQ291bnQpKSB7IGFyci5wdXNoKHRlbSk7IH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoIWFyci5sZW5ndGgpIHsgYXJyLnB1c2goMCk7IH1cblxuICAgICAgcmV0dXJuIE1hdGguY2VpbChmaXhlZFdpZHRoID8gdmlld3BvcnRNYXggLyBNYXRoLm1pbi5hcHBseShudWxsLCBhcnIpIDogTWF0aC5tYXguYXBwbHkobnVsbCwgYXJyKSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gZ2V0Q2xvbmVDb3VudEZvckxvb3AgKCkge1xuICAgIHZhciBpdGVtc01heCA9IGdldEl0ZW1zTWF4KCksXG4gICAgICAgIHJlc3VsdCA9IGNhcm91c2VsID8gTWF0aC5jZWlsKChpdGVtc01heCAqIDUgLSBzbGlkZUNvdW50KS8yKSA6IChpdGVtc01heCAqIDQgLSBzbGlkZUNvdW50KTtcbiAgICByZXN1bHQgPSBNYXRoLm1heChpdGVtc01heCwgcmVzdWx0KTtcblxuICAgIHJldHVybiBoYXNPcHRpb24oJ2VkZ2VQYWRkaW5nJykgPyByZXN1bHQgKyAxIDogcmVzdWx0O1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0V2luZG93V2lkdGggKCkge1xuICAgIHJldHVybiB3aW4uaW5uZXJXaWR0aCB8fCBkb2MuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoIHx8IGRvYy5ib2R5LmNsaWVudFdpZHRoO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0SW5zZXJ0UG9zaXRpb24gKHBvcykge1xuICAgIHJldHVybiBwb3MgPT09ICd0b3AnID8gJ2FmdGVyYmVnaW4nIDogJ2JlZm9yZWVuZCc7XG4gIH1cblxuICBmdW5jdGlvbiBnZXRDbGllbnRXaWR0aCAoZWwpIHtcbiAgICB2YXIgZGl2ID0gZG9jLmNyZWF0ZUVsZW1lbnQoJ2RpdicpLCByZWN0LCB3aWR0aDtcbiAgICBlbC5hcHBlbmRDaGlsZChkaXYpO1xuICAgIHJlY3QgPSBkaXYuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgd2lkdGggPSByZWN0LnJpZ2h0IC0gcmVjdC5sZWZ0O1xuICAgIGRpdi5yZW1vdmUoKTtcbiAgICByZXR1cm4gd2lkdGggfHwgZ2V0Q2xpZW50V2lkdGgoZWwucGFyZW50Tm9kZSk7XG4gIH1cblxuICBmdW5jdGlvbiBnZXRWaWV3cG9ydFdpZHRoICgpIHtcbiAgICB2YXIgZ2FwID0gZWRnZVBhZGRpbmcgPyBlZGdlUGFkZGluZyAqIDIgLSBndXR0ZXIgOiAwO1xuICAgIHJldHVybiBnZXRDbGllbnRXaWR0aChjb250YWluZXJQYXJlbnQpIC0gZ2FwO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFzT3B0aW9uIChpdGVtKSB7XG4gICAgaWYgKG9wdGlvbnNbaXRlbV0pIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAocmVzcG9uc2l2ZSkge1xuICAgICAgICBmb3IgKHZhciBicCBpbiByZXNwb25zaXZlKSB7XG4gICAgICAgICAgaWYgKHJlc3BvbnNpdmVbYnBdW2l0ZW1dKSB7IHJldHVybiB0cnVlOyB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICAvLyBnZXQgb3B0aW9uOlxuICAvLyBmaXhlZCB3aWR0aDogdmlld3BvcnQsIGZpeGVkV2lkdGgsIGd1dHRlciA9PiBpdGVtc1xuICAvLyBvdGhlcnM6IHdpbmRvdyB3aWR0aCA9PiBhbGwgdmFyaWFibGVzXG4gIC8vIGFsbDogaXRlbXMgPT4gc2xpZGVCeVxuICBmdW5jdGlvbiBnZXRPcHRpb24gKGl0ZW0sIHd3KSB7XG4gICAgaWYgKHd3ID09IG51bGwpIHsgd3cgPSB3aW5kb3dXaWR0aDsgfVxuXG4gICAgaWYgKGl0ZW0gPT09ICdpdGVtcycgJiYgZml4ZWRXaWR0aCkge1xuICAgICAgcmV0dXJuIE1hdGguZmxvb3IoKHZpZXdwb3J0ICsgZ3V0dGVyKSAvIChmaXhlZFdpZHRoICsgZ3V0dGVyKSkgfHwgMTtcblxuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgcmVzdWx0ID0gb3B0aW9uc1tpdGVtXTtcblxuICAgICAgaWYgKHJlc3BvbnNpdmUpIHtcbiAgICAgICAgZm9yICh2YXIgYnAgaW4gcmVzcG9uc2l2ZSkge1xuICAgICAgICAgIC8vIGJwOiBjb252ZXJ0IHN0cmluZyB0byBudW1iZXJcbiAgICAgICAgICBpZiAod3cgPj0gcGFyc2VJbnQoYnApKSB7XG4gICAgICAgICAgICBpZiAoaXRlbSBpbiByZXNwb25zaXZlW2JwXSkgeyByZXN1bHQgPSByZXNwb25zaXZlW2JwXVtpdGVtXTsgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbSA9PT0gJ3NsaWRlQnknICYmIHJlc3VsdCA9PT0gJ3BhZ2UnKSB7IHJlc3VsdCA9IGdldE9wdGlvbignaXRlbXMnKTsgfVxuICAgICAgaWYgKCFjYXJvdXNlbCAmJiAoaXRlbSA9PT0gJ3NsaWRlQnknIHx8IGl0ZW0gPT09ICdpdGVtcycpKSB7IHJlc3VsdCA9IE1hdGguZmxvb3IocmVzdWx0KTsgfVxuXG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGdldFNsaWRlTWFyZ2luTGVmdCAoaSkge1xuICAgIHJldHVybiBDQUxDID8gXG4gICAgICBDQUxDICsgJygnICsgaSAqIDEwMCArICclIC8gJyArIHNsaWRlQ291bnROZXcgKyAnKScgOiBcbiAgICAgIGkgKiAxMDAgLyBzbGlkZUNvdW50TmV3ICsgJyUnO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0SW5uZXJXcmFwcGVyU3R5bGVzIChlZGdlUGFkZGluZ1RlbSwgZ3V0dGVyVGVtLCBmaXhlZFdpZHRoVGVtLCBzcGVlZFRlbSwgYXV0b0hlaWdodEJQKSB7XG4gICAgdmFyIHN0ciA9ICcnO1xuXG4gICAgaWYgKGVkZ2VQYWRkaW5nVGVtICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHZhciBnYXAgPSBlZGdlUGFkZGluZ1RlbTtcbiAgICAgIGlmIChndXR0ZXJUZW0pIHsgZ2FwIC09IGd1dHRlclRlbTsgfVxuICAgICAgc3RyID0gaG9yaXpvbnRhbCA/XG4gICAgICAgICdtYXJnaW46IDAgJyArIGdhcCArICdweCAwICcgKyBlZGdlUGFkZGluZ1RlbSArICdweDsnIDpcbiAgICAgICAgJ21hcmdpbjogJyArIGVkZ2VQYWRkaW5nVGVtICsgJ3B4IDAgJyArIGdhcCArICdweCAwOyc7XG4gICAgfSBlbHNlIGlmIChndXR0ZXJUZW0gJiYgIWZpeGVkV2lkdGhUZW0pIHtcbiAgICAgIHZhciBndXR0ZXJUZW1Vbml0ID0gJy0nICsgZ3V0dGVyVGVtICsgJ3B4JyxcbiAgICAgICAgICBkaXIgPSBob3Jpem9udGFsID8gZ3V0dGVyVGVtVW5pdCArICcgMCAwJyA6ICcwICcgKyBndXR0ZXJUZW1Vbml0ICsgJyAwJztcbiAgICAgIHN0ciA9ICdtYXJnaW46IDAgJyArIGRpciArICc7JztcbiAgICB9XG5cbiAgICBpZiAoIWNhcm91c2VsICYmIGF1dG9IZWlnaHRCUCAmJiBUUkFOU0lUSU9ORFVSQVRJT04gJiYgc3BlZWRUZW0pIHsgc3RyICs9IGdldFRyYW5zaXRpb25EdXJhdGlvblN0eWxlKHNwZWVkVGVtKTsgfVxuICAgIHJldHVybiBzdHI7XG4gIH1cblxuICBmdW5jdGlvbiBnZXRDb250YWluZXJXaWR0aCAoZml4ZWRXaWR0aFRlbSwgZ3V0dGVyVGVtLCBpdGVtc1RlbSkge1xuICAgIGlmIChmaXhlZFdpZHRoVGVtKSB7XG4gICAgICByZXR1cm4gKGZpeGVkV2lkdGhUZW0gKyBndXR0ZXJUZW0pICogc2xpZGVDb3VudE5ldyArICdweCc7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBDQUxDID9cbiAgICAgICAgQ0FMQyArICcoJyArIHNsaWRlQ291bnROZXcgKiAxMDAgKyAnJSAvICcgKyBpdGVtc1RlbSArICcpJyA6XG4gICAgICAgIHNsaWRlQ291bnROZXcgKiAxMDAgLyBpdGVtc1RlbSArICclJztcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBnZXRTbGlkZVdpZHRoU3R5bGUgKGZpeGVkV2lkdGhUZW0sIGd1dHRlclRlbSwgaXRlbXNUZW0pIHtcbiAgICB2YXIgd2lkdGg7XG5cbiAgICBpZiAoZml4ZWRXaWR0aFRlbSkge1xuICAgICAgd2lkdGggPSAoZml4ZWRXaWR0aFRlbSArIGd1dHRlclRlbSkgKyAncHgnO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoIWNhcm91c2VsKSB7IGl0ZW1zVGVtID0gTWF0aC5mbG9vcihpdGVtc1RlbSk7IH1cbiAgICAgIHZhciBkaXZpZGVuZCA9IGNhcm91c2VsID8gc2xpZGVDb3VudE5ldyA6IGl0ZW1zVGVtO1xuICAgICAgd2lkdGggPSBDQUxDID8gXG4gICAgICAgIENBTEMgKyAnKDEwMCUgLyAnICsgZGl2aWRlbmQgKyAnKScgOiBcbiAgICAgICAgMTAwIC8gZGl2aWRlbmQgKyAnJSc7XG4gICAgfVxuXG4gICAgd2lkdGggPSAnd2lkdGg6JyArIHdpZHRoO1xuXG4gICAgLy8gaW5uZXIgc2xpZGVyOiBvdmVyd3JpdGUgb3V0ZXIgc2xpZGVyIHN0eWxlc1xuICAgIHJldHVybiBuZXN0ZWQgIT09ICdpbm5lcicgPyB3aWR0aCArICc7JyA6IHdpZHRoICsgJyAhaW1wb3J0YW50Oyc7XG4gIH1cblxuICBmdW5jdGlvbiBnZXRTbGlkZUd1dHRlclN0eWxlIChndXR0ZXJUZW0pIHtcbiAgICB2YXIgc3RyID0gJyc7XG5cbiAgICAvLyBndXR0ZXIgbWF5YmUgaW50ZXJnZXIgfHwgMFxuICAgIC8vIHNvIGNhbid0IHVzZSAnaWYgKGd1dHRlciknXG4gICAgaWYgKGd1dHRlclRlbSAhPT0gZmFsc2UpIHtcbiAgICAgIHZhciBwcm9wID0gaG9yaXpvbnRhbCA/ICdwYWRkaW5nLScgOiAnbWFyZ2luLScsXG4gICAgICAgICAgZGlyID0gaG9yaXpvbnRhbCA/ICdyaWdodCcgOiAnYm90dG9tJztcbiAgICAgIHN0ciA9IHByb3AgKyAgZGlyICsgJzogJyArIGd1dHRlclRlbSArICdweDsnO1xuICAgIH1cblxuICAgIHJldHVybiBzdHI7XG4gIH1cblxuICBmdW5jdGlvbiBnZXRDU1NQcmVmaXggKG5hbWUsIG51bSkge1xuICAgIHZhciBwcmVmaXggPSBuYW1lLnN1YnN0cmluZygwLCBuYW1lLmxlbmd0aCAtIG51bSkudG9Mb3dlckNhc2UoKTtcbiAgICBpZiAocHJlZml4KSB7IHByZWZpeCA9ICctJyArIHByZWZpeCArICctJzsgfVxuXG4gICAgcmV0dXJuIHByZWZpeDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldFRyYW5zaXRpb25EdXJhdGlvblN0eWxlIChzcGVlZCkge1xuICAgIHJldHVybiBnZXRDU1NQcmVmaXgoVFJBTlNJVElPTkRVUkFUSU9OLCAxOCkgKyAndHJhbnNpdGlvbi1kdXJhdGlvbjonICsgc3BlZWQgLyAxMDAwICsgJ3M7JztcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldEFuaW1hdGlvbkR1cmF0aW9uU3R5bGUgKHNwZWVkKSB7XG4gICAgcmV0dXJuIGdldENTU1ByZWZpeChBTklNQVRJT05EVVJBVElPTiwgMTcpICsgJ2FuaW1hdGlvbi1kdXJhdGlvbjonICsgc3BlZWQgLyAxMDAwICsgJ3M7JztcbiAgfVxuXG4gIGZ1bmN0aW9uIGluaXRTdHJ1Y3R1cmUgKCkge1xuICAgIHZhciBjbGFzc091dGVyID0gJ3Rucy1vdXRlcicsXG4gICAgICAgIGNsYXNzSW5uZXIgPSAndG5zLWlubmVyJyxcbiAgICAgICAgaGFzR3V0dGVyID0gaGFzT3B0aW9uKCdndXR0ZXInKTtcblxuICAgIG91dGVyV3JhcHBlci5jbGFzc05hbWUgPSBjbGFzc091dGVyO1xuICAgIGlubmVyV3JhcHBlci5jbGFzc05hbWUgPSBjbGFzc0lubmVyO1xuICAgIG91dGVyV3JhcHBlci5pZCA9IHNsaWRlSWQgKyAnLW93JztcbiAgICBpbm5lcldyYXBwZXIuaWQgPSBzbGlkZUlkICsgJy1pdyc7XG5cbiAgICAvLyBzZXQgY29udGFpbmVyIHByb3BlcnRpZXNcbiAgICBpZiAoY29udGFpbmVyLmlkID09PSAnJykgeyBjb250YWluZXIuaWQgPSBzbGlkZUlkOyB9XG4gICAgbmV3Q29udGFpbmVyQ2xhc3NlcyArPSBQRVJDRU5UQUdFTEFZT1VUIHx8IGF1dG9XaWR0aCA/ICcgdG5zLXN1YnBpeGVsJyA6ICcgdG5zLW5vLXN1YnBpeGVsJztcbiAgICBuZXdDb250YWluZXJDbGFzc2VzICs9IENBTEMgPyAnIHRucy1jYWxjJyA6ICcgdG5zLW5vLWNhbGMnO1xuICAgIGlmIChhdXRvV2lkdGgpIHsgbmV3Q29udGFpbmVyQ2xhc3NlcyArPSAnIHRucy1hdXRvd2lkdGgnOyB9XG4gICAgbmV3Q29udGFpbmVyQ2xhc3NlcyArPSAnIHRucy0nICsgb3B0aW9ucy5heGlzO1xuICAgIGNvbnRhaW5lci5jbGFzc05hbWUgKz0gbmV3Q29udGFpbmVyQ2xhc3NlcztcblxuICAgIC8vIGFkZCBjb25zdHJhaW4gbGF5ZXIgZm9yIGNhcm91c2VsXG4gICAgaWYgKGNhcm91c2VsKSB7XG4gICAgICBtaWRkbGVXcmFwcGVyID0gZG9jLmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgbWlkZGxlV3JhcHBlci5pZCA9IHNsaWRlSWQgKyAnLW13JztcbiAgICAgIG1pZGRsZVdyYXBwZXIuY2xhc3NOYW1lID0gJ3Rucy1vdmgnO1xuXG4gICAgICBvdXRlcldyYXBwZXIuYXBwZW5kQ2hpbGQobWlkZGxlV3JhcHBlcik7XG4gICAgICBtaWRkbGVXcmFwcGVyLmFwcGVuZENoaWxkKGlubmVyV3JhcHBlcik7XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dGVyV3JhcHBlci5hcHBlbmRDaGlsZChpbm5lcldyYXBwZXIpO1xuICAgIH1cblxuICAgIGlmIChhdXRvSGVpZ2h0KSB7XG4gICAgICB2YXIgd3AgPSBtaWRkbGVXcmFwcGVyID8gbWlkZGxlV3JhcHBlciA6IGlubmVyV3JhcHBlcjtcbiAgICAgIHdwLmNsYXNzTmFtZSArPSAnIHRucy1haCc7XG4gICAgfVxuXG4gICAgY29udGFpbmVyUGFyZW50Lmluc2VydEJlZm9yZShvdXRlcldyYXBwZXIsIGNvbnRhaW5lcik7XG4gICAgaW5uZXJXcmFwcGVyLmFwcGVuZENoaWxkKGNvbnRhaW5lcik7XG5cbiAgICAvLyBhZGQgaWQsIGNsYXNzLCBhcmlhIGF0dHJpYnV0ZXMgXG4gICAgLy8gYmVmb3JlIGNsb25lIHNsaWRlc1xuICAgIGZvckVhY2goc2xpZGVJdGVtcywgZnVuY3Rpb24oaXRlbSwgaSkge1xuICAgICAgYWRkQ2xhc3MoaXRlbSwgJ3Rucy1pdGVtJyk7XG4gICAgICBpZiAoIWl0ZW0uaWQpIHsgaXRlbS5pZCA9IHNsaWRlSWQgKyAnLWl0ZW0nICsgaTsgfVxuICAgICAgaWYgKCFjYXJvdXNlbCAmJiBhbmltYXRlTm9ybWFsKSB7IGFkZENsYXNzKGl0ZW0sIGFuaW1hdGVOb3JtYWwpOyB9XG4gICAgICBzZXRBdHRycyhpdGVtLCB7XG4gICAgICAgICdhcmlhLWhpZGRlbic6ICd0cnVlJyxcbiAgICAgICAgJ3RhYmluZGV4JzogJy0xJ1xuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICAvLyAjIyBjbG9uZSBzbGlkZXNcbiAgICAvLyBjYXJvdXNlbDogbiArIHNsaWRlcyArIG5cbiAgICAvLyBnYWxsZXJ5OiAgICAgIHNsaWRlcyArIG5cbiAgICBpZiAoY2xvbmVDb3VudCkge1xuICAgICAgdmFyIGZyYWdtZW50QmVmb3JlID0gZG9jLmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKSwgXG4gICAgICAgICAgZnJhZ21lbnRBZnRlciA9IGRvYy5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7XG5cbiAgICAgIGZvciAodmFyIGogPSBjbG9uZUNvdW50OyBqLS07KSB7XG4gICAgICAgIHZhciBudW0gPSBqJXNsaWRlQ291bnQsXG4gICAgICAgICAgICBjbG9uZUZpcnN0ID0gc2xpZGVJdGVtc1tudW1dLmNsb25lTm9kZSh0cnVlKTtcbiAgICAgICAgcmVtb3ZlQXR0cnMoY2xvbmVGaXJzdCwgJ2lkJyk7XG4gICAgICAgIGZyYWdtZW50QWZ0ZXIuaW5zZXJ0QmVmb3JlKGNsb25lRmlyc3QsIGZyYWdtZW50QWZ0ZXIuZmlyc3RDaGlsZCk7XG5cbiAgICAgICAgaWYgKGNhcm91c2VsKSB7XG4gICAgICAgICAgdmFyIGNsb25lTGFzdCA9IHNsaWRlSXRlbXNbc2xpZGVDb3VudCAtIDEgLSBudW1dLmNsb25lTm9kZSh0cnVlKTtcbiAgICAgICAgICByZW1vdmVBdHRycyhjbG9uZUxhc3QsICdpZCcpO1xuICAgICAgICAgIGZyYWdtZW50QmVmb3JlLmFwcGVuZENoaWxkKGNsb25lTGFzdCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgY29udGFpbmVyLmluc2VydEJlZm9yZShmcmFnbWVudEJlZm9yZSwgY29udGFpbmVyLmZpcnN0Q2hpbGQpO1xuICAgICAgY29udGFpbmVyLmFwcGVuZENoaWxkKGZyYWdtZW50QWZ0ZXIpO1xuICAgICAgc2xpZGVJdGVtcyA9IGNvbnRhaW5lci5jaGlsZHJlbjtcbiAgICB9XG5cbiAgfVxuXG4gIGZ1bmN0aW9uIGluaXRTbGlkZXJUcmFuc2Zvcm0gKCkge1xuICAgIC8vICMjIGltYWdlcyBsb2FkZWQvZmFpbGVkXG4gICAgaWYgKGhhc09wdGlvbignYXV0b0hlaWdodCcpIHx8IGF1dG9XaWR0aCB8fCAhaG9yaXpvbnRhbCkge1xuICAgICAgdmFyIGltZ3MgPSBjb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnaW1nJyk7XG5cbiAgICAgIC8vIGFkZCBjb21wbGV0ZSBjbGFzcyBpZiBhbGwgaW1hZ2VzIGFyZSBsb2FkZWQvZmFpbGVkXG4gICAgICBmb3JFYWNoKGltZ3MsIGZ1bmN0aW9uKGltZykge1xuICAgICAgICB2YXIgc3JjID0gaW1nLnNyYztcbiAgICAgICAgXG4gICAgICAgIGlmIChzcmMgJiYgc3JjLmluZGV4T2YoJ2RhdGE6aW1hZ2UnKSA8IDApIHtcbiAgICAgICAgICBhZGRFdmVudHMoaW1nLCBpbWdFdmVudHMpO1xuICAgICAgICAgIGltZy5zcmMgPSAnJztcbiAgICAgICAgICBpbWcuc3JjID0gc3JjO1xuICAgICAgICAgIGFkZENsYXNzKGltZywgJ2xvYWRpbmcnKTtcbiAgICAgICAgfSBlbHNlIGlmICghbGF6eWxvYWQpIHtcbiAgICAgICAgICBpbWdMb2FkZWQoaW1nKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIC8vIEFsbCBpbWdzIGFyZSBjb21wbGV0ZWRcbiAgICAgIHJhZihmdW5jdGlvbigpeyBpbWdzTG9hZGVkQ2hlY2soYXJyYXlGcm9tTm9kZUxpc3QoaW1ncyksIGZ1bmN0aW9uKCkgeyBpbWdzQ29tcGxldGUgPSB0cnVlOyB9KTsgfSk7XG5cbiAgICAgIC8vIENoZWNrIGltZ3MgaW4gd2luZG93IG9ubHkgZm9yIGF1dG8gaGVpZ2h0XG4gICAgICBpZiAoIWF1dG9XaWR0aCAmJiBob3Jpem9udGFsKSB7IGltZ3MgPSBnZXRJbWFnZUFycmF5KGluZGV4LCBNYXRoLm1pbihpbmRleCArIGl0ZW1zIC0gMSwgc2xpZGVDb3VudE5ldyAtIDEpKTsgfVxuXG4gICAgICBsYXp5bG9hZCA/IGluaXRTbGlkZXJUcmFuc2Zvcm1TdHlsZUNoZWNrKCkgOiByYWYoZnVuY3Rpb24oKXsgaW1nc0xvYWRlZENoZWNrKGFycmF5RnJvbU5vZGVMaXN0KGltZ3MpLCBpbml0U2xpZGVyVHJhbnNmb3JtU3R5bGVDaGVjayk7IH0pO1xuXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIHNldCBjb250YWluZXIgdHJhbnNmb3JtIHByb3BlcnR5XG4gICAgICBpZiAoY2Fyb3VzZWwpIHsgZG9Db250YWluZXJUcmFuc2Zvcm1TaWxlbnQoKTsgfVxuXG4gICAgICAvLyB1cGRhdGUgc2xpZGVyIHRvb2xzIGFuZCBldmVudHNcbiAgICAgIGluaXRUb29scygpO1xuICAgICAgaW5pdEV2ZW50cygpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGluaXRTbGlkZXJUcmFuc2Zvcm1TdHlsZUNoZWNrICgpIHtcbiAgICBpZiAoYXV0b1dpZHRoKSB7XG4gICAgICAvLyBjaGVjayBzdHlsZXMgYXBwbGljYXRpb25cbiAgICAgIHZhciBudW0gPSBsb29wID8gaW5kZXggOiBzbGlkZUNvdW50IC0gMTtcbiAgICAgIChmdW5jdGlvbiBzdHlsZXNBcHBsaWNhdGlvbkNoZWNrKCkge1xuICAgICAgICBzbGlkZUl0ZW1zW251bSAtIDFdLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnJpZ2h0LnRvRml4ZWQoMikgPT09IHNsaWRlSXRlbXNbbnVtXS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0LnRvRml4ZWQoMikgP1xuICAgICAgICBpbml0U2xpZGVyVHJhbnNmb3JtQ29yZSgpIDpcbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpeyBzdHlsZXNBcHBsaWNhdGlvbkNoZWNrKCk7IH0sIDE2KTtcbiAgICAgIH0pKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGluaXRTbGlkZXJUcmFuc2Zvcm1Db3JlKCk7XG4gICAgfVxuICB9XG5cblxuICBmdW5jdGlvbiBpbml0U2xpZGVyVHJhbnNmb3JtQ29yZSAoKSB7XG4gICAgLy8gcnVuIEZuKClzIHdoaWNoIGFyZSByZWx5IG9uIGltYWdlIGxvYWRpbmdcbiAgICBpZiAoIWhvcml6b250YWwgfHwgYXV0b1dpZHRoKSB7XG4gICAgICBzZXRTbGlkZVBvc2l0aW9ucygpO1xuXG4gICAgICBpZiAoYXV0b1dpZHRoKSB7XG4gICAgICAgIHJpZ2h0Qm91bmRhcnkgPSBnZXRSaWdodEJvdW5kYXJ5KCk7XG4gICAgICAgIGlmIChmcmVlemFibGUpIHsgZnJlZXplID0gZ2V0RnJlZXplKCk7IH1cbiAgICAgICAgaW5kZXhNYXggPSBnZXRJbmRleE1heCgpOyAvLyA8PSBzbGlkZVBvc2l0aW9ucywgcmlnaHRCb3VuZGFyeSA8PVxuICAgICAgICByZXNldFZhcmlibGVzV2hlbkRpc2FibGUoZGlzYWJsZSB8fCBmcmVlemUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdXBkYXRlQ29udGVudFdyYXBwZXJIZWlnaHQoKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBzZXQgY29udGFpbmVyIHRyYW5zZm9ybSBwcm9wZXJ0eVxuICAgIGlmIChjYXJvdXNlbCkgeyBkb0NvbnRhaW5lclRyYW5zZm9ybVNpbGVudCgpOyB9XG5cbiAgICAvLyB1cGRhdGUgc2xpZGVyIHRvb2xzIGFuZCBldmVudHNcbiAgICBpbml0VG9vbHMoKTtcbiAgICBpbml0RXZlbnRzKCk7XG4gIH1cblxuICBmdW5jdGlvbiBpbml0U2hlZXQgKCkge1xuICAgIC8vIGdhbGxlcnk6XG4gICAgLy8gc2V0IGFuaW1hdGlvbiBjbGFzc2VzIGFuZCBsZWZ0IHZhbHVlIGZvciBnYWxsZXJ5IHNsaWRlclxuICAgIGlmICghY2Fyb3VzZWwpIHsgXG4gICAgICBmb3IgKHZhciBpID0gaW5kZXgsIGwgPSBpbmRleCArIE1hdGgubWluKHNsaWRlQ291bnQsIGl0ZW1zKTsgaSA8IGw7IGkrKykge1xuICAgICAgICB2YXIgaXRlbSA9IHNsaWRlSXRlbXNbaV07XG4gICAgICAgIGl0ZW0uc3R5bGUubGVmdCA9IChpIC0gaW5kZXgpICogMTAwIC8gaXRlbXMgKyAnJSc7XG4gICAgICAgIGFkZENsYXNzKGl0ZW0sIGFuaW1hdGVJbik7XG4gICAgICAgIHJlbW92ZUNsYXNzKGl0ZW0sIGFuaW1hdGVOb3JtYWwpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vICMjIyMgTEFZT1VUXG5cbiAgICAvLyAjIyBJTkxJTkUtQkxPQ0sgVlMgRkxPQVRcblxuICAgIC8vICMjIFBlcmNlbnRhZ2VMYXlvdXQ6XG4gICAgLy8gc2xpZGVzOiBpbmxpbmUtYmxvY2tcbiAgICAvLyByZW1vdmUgYmxhbmsgc3BhY2UgYmV0d2VlbiBzbGlkZXMgYnkgc2V0IGZvbnQtc2l6ZTogMFxuXG4gICAgLy8gIyMgTm9uIFBlcmNlbnRhZ2VMYXlvdXQ6XG4gICAgLy8gc2xpZGVzOiBmbG9hdFxuICAgIC8vICAgICAgICAgbWFyZ2luLXJpZ2h0OiAtMTAwJVxuICAgIC8vICAgICAgICAgbWFyZ2luLWxlZnQ6IH5cblxuICAgIC8vIFJlc291cmNlOiBodHRwczovL2RvY3MuZ29vZ2xlLmNvbS9zcHJlYWRzaGVldHMvZC8xNDd1cDI0NXd3VFhlUVl2ZTNCUlNBRDRvVmN2UW11R3NGdGVKT2VBNXhOUS9lZGl0P3VzcD1zaGFyaW5nXG4gICAgaWYgKGhvcml6b250YWwpIHtcbiAgICAgIGlmIChQRVJDRU5UQUdFTEFZT1VUIHx8IGF1dG9XaWR0aCkge1xuICAgICAgICBhZGRDU1NSdWxlKHNoZWV0LCAnIycgKyBzbGlkZUlkICsgJyA+IC50bnMtaXRlbScsICdmb250LXNpemU6JyArIHdpbi5nZXRDb21wdXRlZFN0eWxlKHNsaWRlSXRlbXNbMF0pLmZvbnRTaXplICsgJzsnLCBnZXRDc3NSdWxlc0xlbmd0aChzaGVldCkpO1xuICAgICAgICBhZGRDU1NSdWxlKHNoZWV0LCAnIycgKyBzbGlkZUlkLCAnZm9udC1zaXplOjA7JywgZ2V0Q3NzUnVsZXNMZW5ndGgoc2hlZXQpKTtcbiAgICAgIH0gZWxzZSBpZiAoY2Fyb3VzZWwpIHtcbiAgICAgICAgZm9yRWFjaChzbGlkZUl0ZW1zLCBmdW5jdGlvbiAoc2xpZGUsIGkpIHtcbiAgICAgICAgICBzbGlkZS5zdHlsZS5tYXJnaW5MZWZ0ID0gZ2V0U2xpZGVNYXJnaW5MZWZ0KGkpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG5cblxuICAgIC8vICMjIEJBU0lDIFNUWUxFU1xuICAgIGlmIChDU1NNUSkge1xuICAgICAgLy8gbWlkZGxlIHdyYXBwZXIgc3R5bGVcbiAgICAgIGlmIChUUkFOU0lUSU9ORFVSQVRJT04pIHtcbiAgICAgICAgdmFyIHN0ciA9IG1pZGRsZVdyYXBwZXIgJiYgb3B0aW9ucy5hdXRvSGVpZ2h0ID8gZ2V0VHJhbnNpdGlvbkR1cmF0aW9uU3R5bGUob3B0aW9ucy5zcGVlZCkgOiAnJztcbiAgICAgICAgYWRkQ1NTUnVsZShzaGVldCwgJyMnICsgc2xpZGVJZCArICctbXcnLCBzdHIsIGdldENzc1J1bGVzTGVuZ3RoKHNoZWV0KSk7XG4gICAgICB9XG5cbiAgICAgIC8vIGlubmVyIHdyYXBwZXIgc3R5bGVzXG4gICAgICBzdHIgPSBnZXRJbm5lcldyYXBwZXJTdHlsZXMob3B0aW9ucy5lZGdlUGFkZGluZywgb3B0aW9ucy5ndXR0ZXIsIG9wdGlvbnMuZml4ZWRXaWR0aCwgb3B0aW9ucy5zcGVlZCwgb3B0aW9ucy5hdXRvSGVpZ2h0KTtcbiAgICAgIGFkZENTU1J1bGUoc2hlZXQsICcjJyArIHNsaWRlSWQgKyAnLWl3Jywgc3RyLCBnZXRDc3NSdWxlc0xlbmd0aChzaGVldCkpO1xuXG4gICAgICAvLyBjb250YWluZXIgc3R5bGVzXG4gICAgICBpZiAoY2Fyb3VzZWwpIHtcbiAgICAgICAgc3RyID0gaG9yaXpvbnRhbCAmJiAhYXV0b1dpZHRoID8gJ3dpZHRoOicgKyBnZXRDb250YWluZXJXaWR0aChvcHRpb25zLmZpeGVkV2lkdGgsIG9wdGlvbnMuZ3V0dGVyLCBvcHRpb25zLml0ZW1zKSArICc7JyA6ICcnO1xuICAgICAgICBpZiAoVFJBTlNJVElPTkRVUkFUSU9OKSB7IHN0ciArPSBnZXRUcmFuc2l0aW9uRHVyYXRpb25TdHlsZShzcGVlZCk7IH1cbiAgICAgICAgYWRkQ1NTUnVsZShzaGVldCwgJyMnICsgc2xpZGVJZCwgc3RyLCBnZXRDc3NSdWxlc0xlbmd0aChzaGVldCkpO1xuICAgICAgfVxuXG4gICAgICAvLyBzbGlkZSBzdHlsZXNcbiAgICAgIHN0ciA9IGhvcml6b250YWwgJiYgIWF1dG9XaWR0aCA/IGdldFNsaWRlV2lkdGhTdHlsZShvcHRpb25zLmZpeGVkV2lkdGgsIG9wdGlvbnMuZ3V0dGVyLCBvcHRpb25zLml0ZW1zKSA6ICcnO1xuICAgICAgaWYgKG9wdGlvbnMuZ3V0dGVyKSB7IHN0ciArPSBnZXRTbGlkZUd1dHRlclN0eWxlKG9wdGlvbnMuZ3V0dGVyKTsgfVxuICAgICAgLy8gc2V0IGdhbGxlcnkgaXRlbXMgdHJhbnNpdGlvbi1kdXJhdGlvblxuICAgICAgaWYgKCFjYXJvdXNlbCkge1xuICAgICAgICBpZiAoVFJBTlNJVElPTkRVUkFUSU9OKSB7IHN0ciArPSBnZXRUcmFuc2l0aW9uRHVyYXRpb25TdHlsZShzcGVlZCk7IH1cbiAgICAgICAgaWYgKEFOSU1BVElPTkRVUkFUSU9OKSB7IHN0ciArPSBnZXRBbmltYXRpb25EdXJhdGlvblN0eWxlKHNwZWVkKTsgfVxuICAgICAgfVxuICAgICAgaWYgKHN0cikgeyBhZGRDU1NSdWxlKHNoZWV0LCAnIycgKyBzbGlkZUlkICsgJyA+IC50bnMtaXRlbScsIHN0ciwgZ2V0Q3NzUnVsZXNMZW5ndGgoc2hlZXQpKTsgfVxuXG4gICAgLy8gbm9uIENTUyBtZWRpYXF1ZXJpZXM6IElFOFxuICAgIC8vICMjIHVwZGF0ZSBpbm5lciB3cmFwcGVyLCBjb250YWluZXIsIHNsaWRlcyBpZiBuZWVkZWRcbiAgICAvLyBzZXQgaW5saW5lIHN0eWxlcyBmb3IgaW5uZXIgd3JhcHBlciAmIGNvbnRhaW5lclxuICAgIC8vIGluc2VydCBzdHlsZXNoZWV0IChvbmUgbGluZSkgZm9yIHNsaWRlcyBvbmx5IChzaW5jZSBzbGlkZXMgYXJlIG1hbnkpXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIG1pZGRsZSB3cmFwcGVyIHN0eWxlc1xuICAgICAgdXBkYXRlX2Nhcm91c2VsX3RyYW5zaXRpb25fZHVyYXRpb24oKTtcblxuICAgICAgLy8gaW5uZXIgd3JhcHBlciBzdHlsZXNcbiAgICAgIGlubmVyV3JhcHBlci5zdHlsZS5jc3NUZXh0ID0gZ2V0SW5uZXJXcmFwcGVyU3R5bGVzKGVkZ2VQYWRkaW5nLCBndXR0ZXIsIGZpeGVkV2lkdGgsIGF1dG9IZWlnaHQpO1xuXG4gICAgICAvLyBjb250YWluZXIgc3R5bGVzXG4gICAgICBpZiAoY2Fyb3VzZWwgJiYgaG9yaXpvbnRhbCAmJiAhYXV0b1dpZHRoKSB7XG4gICAgICAgIGNvbnRhaW5lci5zdHlsZS53aWR0aCA9IGdldENvbnRhaW5lcldpZHRoKGZpeGVkV2lkdGgsIGd1dHRlciwgaXRlbXMpO1xuICAgICAgfVxuXG4gICAgICAvLyBzbGlkZSBzdHlsZXNcbiAgICAgIHZhciBzdHIgPSBob3Jpem9udGFsICYmICFhdXRvV2lkdGggPyBnZXRTbGlkZVdpZHRoU3R5bGUoZml4ZWRXaWR0aCwgZ3V0dGVyLCBpdGVtcykgOiAnJztcbiAgICAgIGlmIChndXR0ZXIpIHsgc3RyICs9IGdldFNsaWRlR3V0dGVyU3R5bGUoZ3V0dGVyKTsgfVxuXG4gICAgICAvLyBhcHBlbmQgdG8gdGhlIGxhc3QgbGluZVxuICAgICAgaWYgKHN0cikgeyBhZGRDU1NSdWxlKHNoZWV0LCAnIycgKyBzbGlkZUlkICsgJyA+IC50bnMtaXRlbScsIHN0ciwgZ2V0Q3NzUnVsZXNMZW5ndGgoc2hlZXQpKTsgfVxuICAgIH1cblxuICAgIC8vICMjIE1FRElBUVVFUklFU1xuICAgIGlmIChyZXNwb25zaXZlICYmIENTU01RKSB7XG4gICAgICBmb3IgKHZhciBicCBpbiByZXNwb25zaXZlKSB7XG4gICAgICAgIC8vIGJwOiBjb252ZXJ0IHN0cmluZyB0byBudW1iZXJcbiAgICAgICAgYnAgPSBwYXJzZUludChicCk7XG5cbiAgICAgICAgdmFyIG9wdHMgPSByZXNwb25zaXZlW2JwXSxcbiAgICAgICAgICAgIHN0ciA9ICcnLFxuICAgICAgICAgICAgbWlkZGxlV3JhcHBlclN0ciA9ICcnLFxuICAgICAgICAgICAgaW5uZXJXcmFwcGVyU3RyID0gJycsXG4gICAgICAgICAgICBjb250YWluZXJTdHIgPSAnJyxcbiAgICAgICAgICAgIHNsaWRlU3RyID0gJycsXG4gICAgICAgICAgICBpdGVtc0JQID0gIWF1dG9XaWR0aCA/IGdldE9wdGlvbignaXRlbXMnLCBicCkgOiBudWxsLFxuICAgICAgICAgICAgZml4ZWRXaWR0aEJQID0gZ2V0T3B0aW9uKCdmaXhlZFdpZHRoJywgYnApLFxuICAgICAgICAgICAgc3BlZWRCUCA9IGdldE9wdGlvbignc3BlZWQnLCBicCksXG4gICAgICAgICAgICBlZGdlUGFkZGluZ0JQID0gZ2V0T3B0aW9uKCdlZGdlUGFkZGluZycsIGJwKSxcbiAgICAgICAgICAgIGF1dG9IZWlnaHRCUCA9IGdldE9wdGlvbignYXV0b0hlaWdodCcsIGJwKSxcbiAgICAgICAgICAgIGd1dHRlckJQID0gZ2V0T3B0aW9uKCdndXR0ZXInLCBicCk7XG5cbiAgICAgICAgLy8gbWlkZGxlIHdyYXBwZXIgc3RyaW5nXG4gICAgICAgIGlmIChUUkFOU0lUSU9ORFVSQVRJT04gJiYgbWlkZGxlV3JhcHBlciAmJiBnZXRPcHRpb24oJ2F1dG9IZWlnaHQnLCBicCkgJiYgJ3NwZWVkJyBpbiBvcHRzKSB7XG4gICAgICAgICAgbWlkZGxlV3JhcHBlclN0ciA9ICcjJyArIHNsaWRlSWQgKyAnLW13eycgKyBnZXRUcmFuc2l0aW9uRHVyYXRpb25TdHlsZShzcGVlZEJQKSArICd9JztcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGlubmVyIHdyYXBwZXIgc3RyaW5nXG4gICAgICAgIGlmICgnZWRnZVBhZGRpbmcnIGluIG9wdHMgfHwgJ2d1dHRlcicgaW4gb3B0cykge1xuICAgICAgICAgIGlubmVyV3JhcHBlclN0ciA9ICcjJyArIHNsaWRlSWQgKyAnLWl3eycgKyBnZXRJbm5lcldyYXBwZXJTdHlsZXMoZWRnZVBhZGRpbmdCUCwgZ3V0dGVyQlAsIGZpeGVkV2lkdGhCUCwgc3BlZWRCUCwgYXV0b0hlaWdodEJQKSArICd9JztcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGNvbnRhaW5lciBzdHJpbmdcbiAgICAgICAgaWYgKGNhcm91c2VsICYmIGhvcml6b250YWwgJiYgIWF1dG9XaWR0aCAmJiAoJ2ZpeGVkV2lkdGgnIGluIG9wdHMgfHwgJ2l0ZW1zJyBpbiBvcHRzIHx8IChmaXhlZFdpZHRoICYmICdndXR0ZXInIGluIG9wdHMpKSkge1xuICAgICAgICAgIGNvbnRhaW5lclN0ciA9ICd3aWR0aDonICsgZ2V0Q29udGFpbmVyV2lkdGgoZml4ZWRXaWR0aEJQLCBndXR0ZXJCUCwgaXRlbXNCUCkgKyAnOyc7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKFRSQU5TSVRJT05EVVJBVElPTiAmJiAnc3BlZWQnIGluIG9wdHMpIHtcbiAgICAgICAgICBjb250YWluZXJTdHIgKz0gZ2V0VHJhbnNpdGlvbkR1cmF0aW9uU3R5bGUoc3BlZWRCUCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNvbnRhaW5lclN0cikge1xuICAgICAgICAgIGNvbnRhaW5lclN0ciA9ICcjJyArIHNsaWRlSWQgKyAneycgKyBjb250YWluZXJTdHIgKyAnfSc7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBzbGlkZSBzdHJpbmdcbiAgICAgICAgaWYgKCdmaXhlZFdpZHRoJyBpbiBvcHRzIHx8IChmaXhlZFdpZHRoICYmICdndXR0ZXInIGluIG9wdHMpIHx8ICFjYXJvdXNlbCAmJiAnaXRlbXMnIGluIG9wdHMpIHtcbiAgICAgICAgICBzbGlkZVN0ciArPSBnZXRTbGlkZVdpZHRoU3R5bGUoZml4ZWRXaWR0aEJQLCBndXR0ZXJCUCwgaXRlbXNCUCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCdndXR0ZXInIGluIG9wdHMpIHtcbiAgICAgICAgICBzbGlkZVN0ciArPSBnZXRTbGlkZUd1dHRlclN0eWxlKGd1dHRlckJQKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBzZXQgZ2FsbGVyeSBpdGVtcyB0cmFuc2l0aW9uLWR1cmF0aW9uXG4gICAgICAgIGlmICghY2Fyb3VzZWwgJiYgJ3NwZWVkJyBpbiBvcHRzKSB7XG4gICAgICAgICAgaWYgKFRSQU5TSVRJT05EVVJBVElPTikgeyBzbGlkZVN0ciArPSBnZXRUcmFuc2l0aW9uRHVyYXRpb25TdHlsZShzcGVlZEJQKTsgfVxuICAgICAgICAgIGlmIChBTklNQVRJT05EVVJBVElPTikgeyBzbGlkZVN0ciArPSBnZXRBbmltYXRpb25EdXJhdGlvblN0eWxlKHNwZWVkQlApOyB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNsaWRlU3RyKSB7IHNsaWRlU3RyID0gJyMnICsgc2xpZGVJZCArICcgPiAudG5zLWl0ZW17JyArIHNsaWRlU3RyICsgJ30nOyB9XG5cbiAgICAgICAgLy8gYWRkIHVwXG4gICAgICAgIHN0ciA9IG1pZGRsZVdyYXBwZXJTdHIgKyBpbm5lcldyYXBwZXJTdHIgKyBjb250YWluZXJTdHIgKyBzbGlkZVN0cjtcblxuICAgICAgICBpZiAoc3RyKSB7XG4gICAgICAgICAgc2hlZXQuaW5zZXJ0UnVsZSgnQG1lZGlhIChtaW4td2lkdGg6ICcgKyBicCAvIDE2ICsgJ2VtKSB7JyArIHN0ciArICd9Jywgc2hlZXQuY3NzUnVsZXMubGVuZ3RoKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGluaXRUb29scyAoKSB7XG4gICAgLy8gPT0gc2xpZGVzID09XG4gICAgdXBkYXRlU2xpZGVTdGF0dXMoKTtcblxuICAgIC8vID09IGxpdmUgcmVnaW9uID09XG4gICAgb3V0ZXJXcmFwcGVyLmluc2VydEFkamFjZW50SFRNTCgnYWZ0ZXJiZWdpbicsICc8ZGl2IGNsYXNzPVwidG5zLWxpdmVyZWdpb24gdG5zLXZpc3VhbGx5LWhpZGRlblwiIGFyaWEtbGl2ZT1cInBvbGl0ZVwiIGFyaWEtYXRvbWljPVwidHJ1ZVwiPnNsaWRlIDxzcGFuIGNsYXNzPVwiY3VycmVudFwiPicgKyBnZXRMaXZlUmVnaW9uU3RyKCkgKyAnPC9zcGFuPiAgb2YgJyArIHNsaWRlQ291bnQgKyAnPC9kaXY+Jyk7XG4gICAgbGl2ZXJlZ2lvbkN1cnJlbnQgPSBvdXRlcldyYXBwZXIucXVlcnlTZWxlY3RvcignLnRucy1saXZlcmVnaW9uIC5jdXJyZW50Jyk7XG5cbiAgICAvLyA9PSBhdXRvcGxheUluaXQgPT1cbiAgICBpZiAoaGFzQXV0b3BsYXkpIHtcbiAgICAgIHZhciB0eHQgPSBhdXRvcGxheSA/ICdzdG9wJyA6ICdzdGFydCc7XG4gICAgICBpZiAoYXV0b3BsYXlCdXR0b24pIHtcbiAgICAgICAgc2V0QXR0cnMoYXV0b3BsYXlCdXR0b24sIHsnZGF0YS1hY3Rpb24nOiB0eHR9KTtcbiAgICAgIH0gZWxzZSBpZiAob3B0aW9ucy5hdXRvcGxheUJ1dHRvbk91dHB1dCkge1xuICAgICAgICBvdXRlcldyYXBwZXIuaW5zZXJ0QWRqYWNlbnRIVE1MKGdldEluc2VydFBvc2l0aW9uKG9wdGlvbnMuYXV0b3BsYXlQb3NpdGlvbiksICc8YnV0dG9uIGRhdGEtYWN0aW9uPVwiJyArIHR4dCArICdcIj4nICsgYXV0b3BsYXlIdG1sU3RyaW5nc1swXSArIHR4dCArIGF1dG9wbGF5SHRtbFN0cmluZ3NbMV0gKyBhdXRvcGxheVRleHRbMF0gKyAnPC9idXR0b24+Jyk7XG4gICAgICAgIGF1dG9wbGF5QnV0dG9uID0gb3V0ZXJXcmFwcGVyLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWFjdGlvbl0nKTtcbiAgICAgIH1cblxuICAgICAgLy8gYWRkIGV2ZW50XG4gICAgICBpZiAoYXV0b3BsYXlCdXR0b24pIHtcbiAgICAgICAgYWRkRXZlbnRzKGF1dG9wbGF5QnV0dG9uLCB7J2NsaWNrJzogdG9nZ2xlQXV0b3BsYXl9KTtcbiAgICAgIH1cblxuICAgICAgaWYgKGF1dG9wbGF5KSB7XG4gICAgICAgIHN0YXJ0QXV0b3BsYXkoKTtcbiAgICAgICAgaWYgKGF1dG9wbGF5SG92ZXJQYXVzZSkgeyBhZGRFdmVudHMoY29udGFpbmVyLCBob3ZlckV2ZW50cyk7IH1cbiAgICAgICAgaWYgKGF1dG9wbGF5UmVzZXRPblZpc2liaWxpdHkpIHsgYWRkRXZlbnRzKGNvbnRhaW5lciwgdmlzaWJpbGl0eUV2ZW50KTsgfVxuICAgICAgfVxuICAgIH1cbiBcbiAgICAvLyA9PSBuYXZJbml0ID09XG4gICAgaWYgKGhhc05hdikge1xuICAgICAgdmFyIGluaXRJbmRleCA9ICFjYXJvdXNlbCA/IDAgOiBjbG9uZUNvdW50O1xuICAgICAgLy8gY3VzdG9taXplZCBuYXZcbiAgICAgIC8vIHdpbGwgbm90IGhpZGUgdGhlIG5hdnMgaW4gY2FzZSB0aGV5J3JlIHRodW1ibmFpbHNcbiAgICAgIGlmIChuYXZDb250YWluZXIpIHtcbiAgICAgICAgc2V0QXR0cnMobmF2Q29udGFpbmVyLCB7J2FyaWEtbGFiZWwnOiAnQ2Fyb3VzZWwgUGFnaW5hdGlvbid9KTtcbiAgICAgICAgbmF2SXRlbXMgPSBuYXZDb250YWluZXIuY2hpbGRyZW47XG4gICAgICAgIGZvckVhY2gobmF2SXRlbXMsIGZ1bmN0aW9uKGl0ZW0sIGkpIHtcbiAgICAgICAgICBzZXRBdHRycyhpdGVtLCB7XG4gICAgICAgICAgICAnZGF0YS1uYXYnOiBpLFxuICAgICAgICAgICAgJ3RhYmluZGV4JzogJy0xJyxcbiAgICAgICAgICAgICdhcmlhLWxhYmVsJzogbmF2U3RyICsgKGkgKyAxKSxcbiAgICAgICAgICAgICdhcmlhLWNvbnRyb2xzJzogc2xpZGVJZCxcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG5cbiAgICAgIC8vIGdlbmVyYXRlZCBuYXYgXG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgbmF2SHRtbCA9ICcnLFxuICAgICAgICAgICAgaGlkZGVuU3RyID0gbmF2QXNUaHVtYm5haWxzID8gJycgOiAnc3R5bGU9XCJkaXNwbGF5Om5vbmVcIic7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc2xpZGVDb3VudDsgaSsrKSB7XG4gICAgICAgICAgLy8gaGlkZSBuYXYgaXRlbXMgYnkgZGVmYXVsdFxuICAgICAgICAgIG5hdkh0bWwgKz0gJzxidXR0b24gZGF0YS1uYXY9XCInICsgaSArJ1wiIHRhYmluZGV4PVwiLTFcIiBhcmlhLWNvbnRyb2xzPVwiJyArIHNsaWRlSWQgKyAnXCIgJyArIGhpZGRlblN0ciArICcgYXJpYS1sYWJlbD1cIicgKyBuYXZTdHIgKyAoaSArIDEpICsnXCI+PC9idXR0b24+JztcbiAgICAgICAgfVxuICAgICAgICBuYXZIdG1sID0gJzxkaXYgY2xhc3M9XCJ0bnMtbmF2XCIgYXJpYS1sYWJlbD1cIkNhcm91c2VsIFBhZ2luYXRpb25cIj4nICsgbmF2SHRtbCArICc8L2Rpdj4nO1xuICAgICAgICBvdXRlcldyYXBwZXIuaW5zZXJ0QWRqYWNlbnRIVE1MKGdldEluc2VydFBvc2l0aW9uKG9wdGlvbnMubmF2UG9zaXRpb24pLCBuYXZIdG1sKTtcblxuICAgICAgICBuYXZDb250YWluZXIgPSBvdXRlcldyYXBwZXIucXVlcnlTZWxlY3RvcignLnRucy1uYXYnKTtcbiAgICAgICAgbmF2SXRlbXMgPSBuYXZDb250YWluZXIuY2hpbGRyZW47XG4gICAgICB9XG5cbiAgICAgIHVwZGF0ZU5hdlZpc2liaWxpdHkoKTtcblxuICAgICAgLy8gYWRkIHRyYW5zaXRpb25cbiAgICAgIGlmIChUUkFOU0lUSU9ORFVSQVRJT04pIHtcbiAgICAgICAgdmFyIHByZWZpeCA9IFRSQU5TSVRJT05EVVJBVElPTi5zdWJzdHJpbmcoMCwgVFJBTlNJVElPTkRVUkFUSU9OLmxlbmd0aCAtIDE4KS50b0xvd2VyQ2FzZSgpLFxuICAgICAgICAgICAgc3RyID0gJ3RyYW5zaXRpb246IGFsbCAnICsgc3BlZWQgLyAxMDAwICsgJ3MnO1xuXG4gICAgICAgIGlmIChwcmVmaXgpIHtcbiAgICAgICAgICBzdHIgPSAnLScgKyBwcmVmaXggKyAnLScgKyBzdHI7XG4gICAgICAgIH1cblxuICAgICAgICBhZGRDU1NSdWxlKHNoZWV0LCAnW2FyaWEtY29udHJvbHNePScgKyBzbGlkZUlkICsgJy1pdGVtXScsIHN0ciwgZ2V0Q3NzUnVsZXNMZW5ndGgoc2hlZXQpKTtcbiAgICAgIH1cblxuICAgICAgc2V0QXR0cnMobmF2SXRlbXNbbmF2Q3VycmVudEluZGV4XSwgeydhcmlhLWxhYmVsJzogbmF2U3RyICsgKG5hdkN1cnJlbnRJbmRleCArIDEpICsgbmF2U3RyQ3VycmVudH0pO1xuICAgICAgcmVtb3ZlQXR0cnMobmF2SXRlbXNbbmF2Q3VycmVudEluZGV4XSwgJ3RhYmluZGV4Jyk7XG4gICAgICBhZGRDbGFzcyhuYXZJdGVtc1tuYXZDdXJyZW50SW5kZXhdLCBuYXZBY3RpdmVDbGFzcyk7XG5cbiAgICAgIC8vIGFkZCBldmVudHNcbiAgICAgIGFkZEV2ZW50cyhuYXZDb250YWluZXIsIG5hdkV2ZW50cyk7XG4gICAgfVxuXG5cblxuICAgIC8vID09IGNvbnRyb2xzSW5pdCA9PVxuICAgIGlmIChoYXNDb250cm9scykge1xuICAgICAgaWYgKCFjb250cm9sc0NvbnRhaW5lciAmJiAoIXByZXZCdXR0b24gfHwgIW5leHRCdXR0b24pKSB7XG4gICAgICAgIG91dGVyV3JhcHBlci5pbnNlcnRBZGphY2VudEhUTUwoZ2V0SW5zZXJ0UG9zaXRpb24ob3B0aW9ucy5jb250cm9sc1Bvc2l0aW9uKSwgJzxkaXYgY2xhc3M9XCJ0bnMtY29udHJvbHNcIiBhcmlhLWxhYmVsPVwiQ2Fyb3VzZWwgTmF2aWdhdGlvblwiIHRhYmluZGV4PVwiMFwiPjxidXR0b24gZGF0YS1jb250cm9scz1cInByZXZcIiB0YWJpbmRleD1cIi0xXCIgYXJpYS1jb250cm9scz1cIicgKyBzbGlkZUlkICsnXCI+JyArIGNvbnRyb2xzVGV4dFswXSArICc8L2J1dHRvbj48YnV0dG9uIGRhdGEtY29udHJvbHM9XCJuZXh0XCIgdGFiaW5kZXg9XCItMVwiIGFyaWEtY29udHJvbHM9XCInICsgc2xpZGVJZCArJ1wiPicgKyBjb250cm9sc1RleHRbMV0gKyAnPC9idXR0b24+PC9kaXY+Jyk7XG5cbiAgICAgICAgY29udHJvbHNDb250YWluZXIgPSBvdXRlcldyYXBwZXIucXVlcnlTZWxlY3RvcignLnRucy1jb250cm9scycpO1xuICAgICAgfVxuXG4gICAgICBpZiAoIXByZXZCdXR0b24gfHwgIW5leHRCdXR0b24pIHtcbiAgICAgICAgcHJldkJ1dHRvbiA9IGNvbnRyb2xzQ29udGFpbmVyLmNoaWxkcmVuWzBdO1xuICAgICAgICBuZXh0QnV0dG9uID0gY29udHJvbHNDb250YWluZXIuY2hpbGRyZW5bMV07XG4gICAgICB9XG5cbiAgICAgIGlmIChvcHRpb25zLmNvbnRyb2xzQ29udGFpbmVyKSB7XG4gICAgICAgIHNldEF0dHJzKGNvbnRyb2xzQ29udGFpbmVyLCB7XG4gICAgICAgICAgJ2FyaWEtbGFiZWwnOiAnQ2Fyb3VzZWwgTmF2aWdhdGlvbicsXG4gICAgICAgICAgJ3RhYmluZGV4JzogJzAnXG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBpZiAob3B0aW9ucy5jb250cm9sc0NvbnRhaW5lciB8fCAob3B0aW9ucy5wcmV2QnV0dG9uICYmIG9wdGlvbnMubmV4dEJ1dHRvbikpIHtcbiAgICAgICAgc2V0QXR0cnMoW3ByZXZCdXR0b24sIG5leHRCdXR0b25dLCB7XG4gICAgICAgICAgJ2FyaWEtY29udHJvbHMnOiBzbGlkZUlkLFxuICAgICAgICAgICd0YWJpbmRleCc6ICctMScsXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgXG4gICAgICBpZiAob3B0aW9ucy5jb250cm9sc0NvbnRhaW5lciB8fCAob3B0aW9ucy5wcmV2QnV0dG9uICYmIG9wdGlvbnMubmV4dEJ1dHRvbikpIHtcbiAgICAgICAgc2V0QXR0cnMocHJldkJ1dHRvbiwgeydkYXRhLWNvbnRyb2xzJyA6ICdwcmV2J30pO1xuICAgICAgICBzZXRBdHRycyhuZXh0QnV0dG9uLCB7J2RhdGEtY29udHJvbHMnIDogJ25leHQnfSk7XG4gICAgICB9XG5cbiAgICAgIHByZXZJc0J1dHRvbiA9IGlzQnV0dG9uKHByZXZCdXR0b24pO1xuICAgICAgbmV4dElzQnV0dG9uID0gaXNCdXR0b24obmV4dEJ1dHRvbik7XG5cbiAgICAgIHVwZGF0ZUNvbnRyb2xzU3RhdHVzKCk7XG5cbiAgICAgIC8vIGFkZCBldmVudHNcbiAgICAgIGlmIChjb250cm9sc0NvbnRhaW5lcikge1xuICAgICAgICBhZGRFdmVudHMoY29udHJvbHNDb250YWluZXIsIGNvbnRyb2xzRXZlbnRzKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGFkZEV2ZW50cyhwcmV2QnV0dG9uLCBjb250cm9sc0V2ZW50cyk7XG4gICAgICAgIGFkZEV2ZW50cyhuZXh0QnV0dG9uLCBjb250cm9sc0V2ZW50cyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gaGlkZSB0b29scyBpZiBuZWVkZWRcbiAgICBkaXNhYmxlVUkoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGluaXRFdmVudHMgKCkge1xuICAgIC8vIGFkZCBldmVudHNcbiAgICBpZiAoY2Fyb3VzZWwgJiYgVFJBTlNJVElPTkVORCkge1xuICAgICAgdmFyIGV2ZSA9IHt9O1xuICAgICAgZXZlW1RSQU5TSVRJT05FTkRdID0gb25UcmFuc2l0aW9uRW5kO1xuICAgICAgYWRkRXZlbnRzKGNvbnRhaW5lciwgZXZlKTtcbiAgICB9XG5cbiAgICBpZiAodG91Y2gpIHsgYWRkRXZlbnRzKGNvbnRhaW5lciwgdG91Y2hFdmVudHMsIG9wdGlvbnMucHJldmVudFNjcm9sbE9uVG91Y2gpOyB9XG4gICAgaWYgKG1vdXNlRHJhZykgeyBhZGRFdmVudHMoY29udGFpbmVyLCBkcmFnRXZlbnRzKTsgfVxuICAgIGlmIChhcnJvd0tleXMpIHsgYWRkRXZlbnRzKGRvYywgZG9jbWVudEtleWRvd25FdmVudCk7IH1cblxuICAgIGlmIChuZXN0ZWQgPT09ICdpbm5lcicpIHtcbiAgICAgIGV2ZW50cy5vbignb3V0ZXJSZXNpemVkJywgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXNpemVUYXNrcygpO1xuICAgICAgICBldmVudHMuZW1pdCgnaW5uZXJMb2FkZWQnLCBpbmZvKCkpO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmIChyZXNwb25zaXZlIHx8IGZpeGVkV2lkdGggfHwgYXV0b1dpZHRoIHx8IGF1dG9IZWlnaHQgfHwgIWhvcml6b250YWwpIHtcbiAgICAgIGFkZEV2ZW50cyh3aW4sIHsncmVzaXplJzogb25SZXNpemV9KTtcbiAgICB9XG5cbiAgICBpZiAoYXV0b0hlaWdodCkge1xuICAgICAgaWYgKG5lc3RlZCA9PT0gJ291dGVyJykge1xuICAgICAgICBldmVudHMub24oJ2lubmVyTG9hZGVkJywgZG9BdXRvSGVpZ2h0KTtcbiAgICAgIH0gZWxzZSBpZiAoIWRpc2FibGUpIHsgZG9BdXRvSGVpZ2h0KCk7IH1cbiAgICB9XG5cbiAgICBkb0xhenlMb2FkKCk7XG4gICAgaWYgKGRpc2FibGUpIHsgZGlzYWJsZVNsaWRlcigpOyB9IGVsc2UgaWYgKGZyZWV6ZSkgeyBmcmVlemVTbGlkZXIoKTsgfVxuXG4gICAgZXZlbnRzLm9uKCdpbmRleENoYW5nZWQnLCBhZGRpdGlvbmFsVXBkYXRlcyk7XG4gICAgaWYgKG5lc3RlZCA9PT0gJ2lubmVyJykgeyBldmVudHMuZW1pdCgnaW5uZXJMb2FkZWQnLCBpbmZvKCkpOyB9XG4gICAgaWYgKHR5cGVvZiBvbkluaXQgPT09ICdmdW5jdGlvbicpIHsgb25Jbml0KGluZm8oKSk7IH1cbiAgICBpc09uID0gdHJ1ZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGRlc3Ryb3kgKCkge1xuICAgIC8vIHNoZWV0XG4gICAgc2hlZXQuZGlzYWJsZWQgPSB0cnVlO1xuICAgIGlmIChzaGVldC5vd25lck5vZGUpIHsgc2hlZXQub3duZXJOb2RlLnJlbW92ZSgpOyB9XG5cbiAgICAvLyByZW1vdmUgd2luIGV2ZW50IGxpc3RlbmVyc1xuICAgIHJlbW92ZUV2ZW50cyh3aW4sIHsncmVzaXplJzogb25SZXNpemV9KTtcblxuICAgIC8vIGFycm93S2V5cywgY29udHJvbHMsIG5hdlxuICAgIGlmIChhcnJvd0tleXMpIHsgcmVtb3ZlRXZlbnRzKGRvYywgZG9jbWVudEtleWRvd25FdmVudCk7IH1cbiAgICBpZiAoY29udHJvbHNDb250YWluZXIpIHsgcmVtb3ZlRXZlbnRzKGNvbnRyb2xzQ29udGFpbmVyLCBjb250cm9sc0V2ZW50cyk7IH1cbiAgICBpZiAobmF2Q29udGFpbmVyKSB7IHJlbW92ZUV2ZW50cyhuYXZDb250YWluZXIsIG5hdkV2ZW50cyk7IH1cblxuICAgIC8vIGF1dG9wbGF5XG4gICAgcmVtb3ZlRXZlbnRzKGNvbnRhaW5lciwgaG92ZXJFdmVudHMpO1xuICAgIHJlbW92ZUV2ZW50cyhjb250YWluZXIsIHZpc2liaWxpdHlFdmVudCk7XG4gICAgaWYgKGF1dG9wbGF5QnV0dG9uKSB7IHJlbW92ZUV2ZW50cyhhdXRvcGxheUJ1dHRvbiwgeydjbGljayc6IHRvZ2dsZUF1dG9wbGF5fSk7IH1cbiAgICBpZiAoYXV0b3BsYXkpIHsgY2xlYXJJbnRlcnZhbChhdXRvcGxheVRpbWVyKTsgfVxuXG4gICAgLy8gY29udGFpbmVyXG4gICAgaWYgKGNhcm91c2VsICYmIFRSQU5TSVRJT05FTkQpIHtcbiAgICAgIHZhciBldmUgPSB7fTtcbiAgICAgIGV2ZVtUUkFOU0lUSU9ORU5EXSA9IG9uVHJhbnNpdGlvbkVuZDtcbiAgICAgIHJlbW92ZUV2ZW50cyhjb250YWluZXIsIGV2ZSk7XG4gICAgfVxuICAgIGlmICh0b3VjaCkgeyByZW1vdmVFdmVudHMoY29udGFpbmVyLCB0b3VjaEV2ZW50cyk7IH1cbiAgICBpZiAobW91c2VEcmFnKSB7IHJlbW92ZUV2ZW50cyhjb250YWluZXIsIGRyYWdFdmVudHMpOyB9XG5cbiAgICAvLyBjYWNoZSBPYmplY3QgdmFsdWVzIGluIG9wdGlvbnMgJiYgcmVzZXQgSFRNTFxuICAgIHZhciBodG1sTGlzdCA9IFtjb250YWluZXJIVE1MLCBjb250cm9sc0NvbnRhaW5lckhUTUwsIHByZXZCdXR0b25IVE1MLCBuZXh0QnV0dG9uSFRNTCwgbmF2Q29udGFpbmVySFRNTCwgYXV0b3BsYXlCdXR0b25IVE1MXTtcblxuICAgIHRuc0xpc3QuZm9yRWFjaChmdW5jdGlvbihpdGVtLCBpKSB7XG4gICAgICB2YXIgZWwgPSBpdGVtID09PSAnY29udGFpbmVyJyA/IG91dGVyV3JhcHBlciA6IG9wdGlvbnNbaXRlbV07XG5cbiAgICAgIGlmICh0eXBlb2YgZWwgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIHZhciBwcmV2RWwgPSBlbC5wcmV2aW91c0VsZW1lbnRTaWJsaW5nID8gZWwucHJldmlvdXNFbGVtZW50U2libGluZyA6IGZhbHNlLFxuICAgICAgICAgICAgcGFyZW50RWwgPSBlbC5wYXJlbnROb2RlO1xuICAgICAgICBlbC5vdXRlckhUTUwgPSBodG1sTGlzdFtpXTtcbiAgICAgICAgb3B0aW9uc1tpdGVtXSA9IHByZXZFbCA/IHByZXZFbC5uZXh0RWxlbWVudFNpYmxpbmcgOiBwYXJlbnRFbC5maXJzdEVsZW1lbnRDaGlsZDtcbiAgICAgIH1cbiAgICB9KTtcblxuXG4gICAgLy8gcmVzZXQgdmFyaWFibGVzXG4gICAgdG5zTGlzdCA9IGFuaW1hdGVJbiA9IGFuaW1hdGVPdXQgPSBhbmltYXRlRGVsYXkgPSBhbmltYXRlTm9ybWFsID0gaG9yaXpvbnRhbCA9IG91dGVyV3JhcHBlciA9IGlubmVyV3JhcHBlciA9IGNvbnRhaW5lciA9IGNvbnRhaW5lclBhcmVudCA9IGNvbnRhaW5lckhUTUwgPSBzbGlkZUl0ZW1zID0gc2xpZGVDb3VudCA9IGJyZWFrcG9pbnRab25lID0gd2luZG93V2lkdGggPSBhdXRvV2lkdGggPSBmaXhlZFdpZHRoID0gZWRnZVBhZGRpbmcgPSBndXR0ZXIgPSB2aWV3cG9ydCA9IGl0ZW1zID0gc2xpZGVCeSA9IHZpZXdwb3J0TWF4ID0gYXJyb3dLZXlzID0gc3BlZWQgPSByZXdpbmQgPSBsb29wID0gYXV0b0hlaWdodCA9IHNoZWV0ID0gbGF6eWxvYWQgPSBzbGlkZVBvc2l0aW9ucyA9IHNsaWRlSXRlbXNPdXQgPSBjbG9uZUNvdW50ID0gc2xpZGVDb3VudE5ldyA9IGhhc1JpZ2h0RGVhZFpvbmUgPSByaWdodEJvdW5kYXJ5ID0gdXBkYXRlSW5kZXhCZWZvcmVUcmFuc2Zvcm0gPSB0cmFuc2Zvcm1BdHRyID0gdHJhbnNmb3JtUHJlZml4ID0gdHJhbnNmb3JtUG9zdGZpeCA9IGdldEluZGV4TWF4ID0gaW5kZXggPSBpbmRleENhY2hlZCA9IGluZGV4TWluID0gaW5kZXhNYXggPSByZXNpemVUaW1lciA9IHN3aXBlQW5nbGUgPSBtb3ZlRGlyZWN0aW9uRXhwZWN0ZWQgPSBydW5uaW5nID0gb25Jbml0ID0gZXZlbnRzID0gbmV3Q29udGFpbmVyQ2xhc3NlcyA9IHNsaWRlSWQgPSBkaXNhYmxlID0gZGlzYWJsZWQgPSBmcmVlemFibGUgPSBmcmVlemUgPSBmcm96ZW4gPSBjb250cm9sc0V2ZW50cyA9IG5hdkV2ZW50cyA9IGhvdmVyRXZlbnRzID0gdmlzaWJpbGl0eUV2ZW50ID0gZG9jbWVudEtleWRvd25FdmVudCA9IHRvdWNoRXZlbnRzID0gZHJhZ0V2ZW50cyA9IGhhc0NvbnRyb2xzID0gaGFzTmF2ID0gbmF2QXNUaHVtYm5haWxzID0gaGFzQXV0b3BsYXkgPSBoYXNUb3VjaCA9IGhhc01vdXNlRHJhZyA9IHNsaWRlQWN0aXZlQ2xhc3MgPSBpbWdDb21wbGV0ZUNsYXNzID0gaW1nRXZlbnRzID0gaW1nc0NvbXBsZXRlID0gY29udHJvbHMgPSBjb250cm9sc1RleHQgPSBjb250cm9sc0NvbnRhaW5lciA9IGNvbnRyb2xzQ29udGFpbmVySFRNTCA9IHByZXZCdXR0b24gPSBuZXh0QnV0dG9uID0gcHJldklzQnV0dG9uID0gbmV4dElzQnV0dG9uID0gbmF2ID0gbmF2Q29udGFpbmVyID0gbmF2Q29udGFpbmVySFRNTCA9IG5hdkl0ZW1zID0gcGFnZXMgPSBwYWdlc0NhY2hlZCA9IG5hdkNsaWNrZWQgPSBuYXZDdXJyZW50SW5kZXggPSBuYXZDdXJyZW50SW5kZXhDYWNoZWQgPSBuYXZBY3RpdmVDbGFzcyA9IG5hdlN0ciA9IG5hdlN0ckN1cnJlbnQgPSBhdXRvcGxheSA9IGF1dG9wbGF5VGltZW91dCA9IGF1dG9wbGF5RGlyZWN0aW9uID0gYXV0b3BsYXlUZXh0ID0gYXV0b3BsYXlIb3ZlclBhdXNlID0gYXV0b3BsYXlCdXR0b24gPSBhdXRvcGxheUJ1dHRvbkhUTUwgPSBhdXRvcGxheVJlc2V0T25WaXNpYmlsaXR5ID0gYXV0b3BsYXlIdG1sU3RyaW5ncyA9IGF1dG9wbGF5VGltZXIgPSBhbmltYXRpbmcgPSBhdXRvcGxheUhvdmVyUGF1c2VkID0gYXV0b3BsYXlVc2VyUGF1c2VkID0gYXV0b3BsYXlWaXNpYmlsaXR5UGF1c2VkID0gaW5pdFBvc2l0aW9uID0gbGFzdFBvc2l0aW9uID0gdHJhbnNsYXRlSW5pdCA9IGRpc1ggPSBkaXNZID0gcGFuU3RhcnQgPSByYWZJbmRleCA9IGdldERpc3QgPSB0b3VjaCA9IG1vdXNlRHJhZyA9IG51bGw7XG4gICAgLy8gY2hlY2sgdmFyaWFibGVzXG4gICAgLy8gW2FuaW1hdGVJbiwgYW5pbWF0ZU91dCwgYW5pbWF0ZURlbGF5LCBhbmltYXRlTm9ybWFsLCBob3Jpem9udGFsLCBvdXRlcldyYXBwZXIsIGlubmVyV3JhcHBlciwgY29udGFpbmVyLCBjb250YWluZXJQYXJlbnQsIGNvbnRhaW5lckhUTUwsIHNsaWRlSXRlbXMsIHNsaWRlQ291bnQsIGJyZWFrcG9pbnRab25lLCB3aW5kb3dXaWR0aCwgYXV0b1dpZHRoLCBmaXhlZFdpZHRoLCBlZGdlUGFkZGluZywgZ3V0dGVyLCB2aWV3cG9ydCwgaXRlbXMsIHNsaWRlQnksIHZpZXdwb3J0TWF4LCBhcnJvd0tleXMsIHNwZWVkLCByZXdpbmQsIGxvb3AsIGF1dG9IZWlnaHQsIHNoZWV0LCBsYXp5bG9hZCwgc2xpZGVQb3NpdGlvbnMsIHNsaWRlSXRlbXNPdXQsIGNsb25lQ291bnQsIHNsaWRlQ291bnROZXcsIGhhc1JpZ2h0RGVhZFpvbmUsIHJpZ2h0Qm91bmRhcnksIHVwZGF0ZUluZGV4QmVmb3JlVHJhbnNmb3JtLCB0cmFuc2Zvcm1BdHRyLCB0cmFuc2Zvcm1QcmVmaXgsIHRyYW5zZm9ybVBvc3RmaXgsIGdldEluZGV4TWF4LCBpbmRleCwgaW5kZXhDYWNoZWQsIGluZGV4TWluLCBpbmRleE1heCwgcmVzaXplVGltZXIsIHN3aXBlQW5nbGUsIG1vdmVEaXJlY3Rpb25FeHBlY3RlZCwgcnVubmluZywgb25Jbml0LCBldmVudHMsIG5ld0NvbnRhaW5lckNsYXNzZXMsIHNsaWRlSWQsIGRpc2FibGUsIGRpc2FibGVkLCBmcmVlemFibGUsIGZyZWV6ZSwgZnJvemVuLCBjb250cm9sc0V2ZW50cywgbmF2RXZlbnRzLCBob3ZlckV2ZW50cywgdmlzaWJpbGl0eUV2ZW50LCBkb2NtZW50S2V5ZG93bkV2ZW50LCB0b3VjaEV2ZW50cywgZHJhZ0V2ZW50cywgaGFzQ29udHJvbHMsIGhhc05hdiwgbmF2QXNUaHVtYm5haWxzLCBoYXNBdXRvcGxheSwgaGFzVG91Y2gsIGhhc01vdXNlRHJhZywgc2xpZGVBY3RpdmVDbGFzcywgaW1nQ29tcGxldGVDbGFzcywgaW1nRXZlbnRzLCBpbWdzQ29tcGxldGUsIGNvbnRyb2xzLCBjb250cm9sc1RleHQsIGNvbnRyb2xzQ29udGFpbmVyLCBjb250cm9sc0NvbnRhaW5lckhUTUwsIHByZXZCdXR0b24sIG5leHRCdXR0b24sIHByZXZJc0J1dHRvbiwgbmV4dElzQnV0dG9uLCBuYXYsIG5hdkNvbnRhaW5lciwgbmF2Q29udGFpbmVySFRNTCwgbmF2SXRlbXMsIHBhZ2VzLCBwYWdlc0NhY2hlZCwgbmF2Q2xpY2tlZCwgbmF2Q3VycmVudEluZGV4LCBuYXZDdXJyZW50SW5kZXhDYWNoZWQsIG5hdkFjdGl2ZUNsYXNzLCBuYXZTdHIsIG5hdlN0ckN1cnJlbnQsIGF1dG9wbGF5LCBhdXRvcGxheVRpbWVvdXQsIGF1dG9wbGF5RGlyZWN0aW9uLCBhdXRvcGxheVRleHQsIGF1dG9wbGF5SG92ZXJQYXVzZSwgYXV0b3BsYXlCdXR0b24sIGF1dG9wbGF5QnV0dG9uSFRNTCwgYXV0b3BsYXlSZXNldE9uVmlzaWJpbGl0eSwgYXV0b3BsYXlIdG1sU3RyaW5ncywgYXV0b3BsYXlUaW1lciwgYW5pbWF0aW5nLCBhdXRvcGxheUhvdmVyUGF1c2VkLCBhdXRvcGxheVVzZXJQYXVzZWQsIGF1dG9wbGF5VmlzaWJpbGl0eVBhdXNlZCwgaW5pdFBvc2l0aW9uLCBsYXN0UG9zaXRpb24sIHRyYW5zbGF0ZUluaXQsIGRpc1gsIGRpc1ksIHBhblN0YXJ0LCByYWZJbmRleCwgZ2V0RGlzdCwgdG91Y2gsIG1vdXNlRHJhZyBdLmZvckVhY2goZnVuY3Rpb24oaXRlbSkgeyBpZiAoaXRlbSAhPT0gbnVsbCkgeyBjb25zb2xlLmxvZyhpdGVtKTsgfSB9KTtcblxuICAgIGZvciAodmFyIGEgaW4gdGhpcykge1xuICAgICAgaWYgKGEgIT09ICdyZWJ1aWxkJykgeyB0aGlzW2FdID0gbnVsbDsgfVxuICAgIH1cbiAgICBpc09uID0gZmFsc2U7XG4gIH1cblxuLy8gPT09IE9OIFJFU0laRSA9PT1cbiAgLy8gcmVzcG9uc2l2ZSB8fCBmaXhlZFdpZHRoIHx8IGF1dG9XaWR0aCB8fCAhaG9yaXpvbnRhbFxuICBmdW5jdGlvbiBvblJlc2l6ZSAoZSkge1xuICAgIHJhZihmdW5jdGlvbigpeyByZXNpemVUYXNrcyhnZXRFdmVudChlKSk7IH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVzaXplVGFza3MgKGUpIHtcbiAgICBpZiAoIWlzT24pIHsgcmV0dXJuOyB9XG4gICAgaWYgKG5lc3RlZCA9PT0gJ291dGVyJykgeyBldmVudHMuZW1pdCgnb3V0ZXJSZXNpemVkJywgaW5mbyhlKSk7IH1cbiAgICB3aW5kb3dXaWR0aCA9IGdldFdpbmRvd1dpZHRoKCk7XG4gICAgdmFyIGJwQ2hhbmdlZCxcbiAgICAgICAgYnJlYWtwb2ludFpvbmVUZW0gPSBicmVha3BvaW50Wm9uZSxcbiAgICAgICAgbmVlZENvbnRhaW5lclRyYW5zZm9ybSA9IGZhbHNlO1xuXG4gICAgaWYgKHJlc3BvbnNpdmUpIHtcbiAgICAgIHNldEJyZWFrcG9pbnRab25lKCk7XG4gICAgICBicENoYW5nZWQgPSBicmVha3BvaW50Wm9uZVRlbSAhPT0gYnJlYWtwb2ludFpvbmU7XG4gICAgICAvLyBpZiAoaGFzUmlnaHREZWFkWm9uZSkgeyBuZWVkQ29udGFpbmVyVHJhbnNmb3JtID0gdHJ1ZTsgfSAvLyAqP1xuICAgICAgaWYgKGJwQ2hhbmdlZCkgeyBldmVudHMuZW1pdCgnbmV3QnJlYWtwb2ludFN0YXJ0JywgaW5mbyhlKSk7IH1cbiAgICB9XG5cbiAgICB2YXIgaW5kQ2hhbmdlZCxcbiAgICAgICAgaXRlbXNDaGFuZ2VkLFxuICAgICAgICBpdGVtc1RlbSA9IGl0ZW1zLFxuICAgICAgICBkaXNhYmxlVGVtID0gZGlzYWJsZSxcbiAgICAgICAgZnJlZXplVGVtID0gZnJlZXplLFxuICAgICAgICBhcnJvd0tleXNUZW0gPSBhcnJvd0tleXMsXG4gICAgICAgIGNvbnRyb2xzVGVtID0gY29udHJvbHMsXG4gICAgICAgIG5hdlRlbSA9IG5hdixcbiAgICAgICAgdG91Y2hUZW0gPSB0b3VjaCxcbiAgICAgICAgbW91c2VEcmFnVGVtID0gbW91c2VEcmFnLFxuICAgICAgICBhdXRvcGxheVRlbSA9IGF1dG9wbGF5LFxuICAgICAgICBhdXRvcGxheUhvdmVyUGF1c2VUZW0gPSBhdXRvcGxheUhvdmVyUGF1c2UsXG4gICAgICAgIGF1dG9wbGF5UmVzZXRPblZpc2liaWxpdHlUZW0gPSBhdXRvcGxheVJlc2V0T25WaXNpYmlsaXR5LFxuICAgICAgICBpbmRleFRlbSA9IGluZGV4O1xuXG4gICAgaWYgKGJwQ2hhbmdlZCkge1xuICAgICAgdmFyIGZpeGVkV2lkdGhUZW0gPSBmaXhlZFdpZHRoLFxuICAgICAgICAgIGF1dG9IZWlnaHRUZW0gPSBhdXRvSGVpZ2h0LFxuICAgICAgICAgIGNvbnRyb2xzVGV4dFRlbSA9IGNvbnRyb2xzVGV4dCxcbiAgICAgICAgICBjZW50ZXJUZW0gPSBjZW50ZXIsXG4gICAgICAgICAgYXV0b3BsYXlUZXh0VGVtID0gYXV0b3BsYXlUZXh0O1xuXG4gICAgICBpZiAoIUNTU01RKSB7XG4gICAgICAgIHZhciBndXR0ZXJUZW0gPSBndXR0ZXIsXG4gICAgICAgICAgICBlZGdlUGFkZGluZ1RlbSA9IGVkZ2VQYWRkaW5nO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIGdldCBvcHRpb246XG4gICAgLy8gZml4ZWQgd2lkdGg6IHZpZXdwb3J0LCBmaXhlZFdpZHRoLCBndXR0ZXIgPT4gaXRlbXNcbiAgICAvLyBvdGhlcnM6IHdpbmRvdyB3aWR0aCA9PiBhbGwgdmFyaWFibGVzXG4gICAgLy8gYWxsOiBpdGVtcyA9PiBzbGlkZUJ5XG4gICAgYXJyb3dLZXlzID0gZ2V0T3B0aW9uKCdhcnJvd0tleXMnKTtcbiAgICBjb250cm9scyA9IGdldE9wdGlvbignY29udHJvbHMnKTtcbiAgICBuYXYgPSBnZXRPcHRpb24oJ25hdicpO1xuICAgIHRvdWNoID0gZ2V0T3B0aW9uKCd0b3VjaCcpO1xuICAgIGNlbnRlciA9IGdldE9wdGlvbignY2VudGVyJyk7XG4gICAgbW91c2VEcmFnID0gZ2V0T3B0aW9uKCdtb3VzZURyYWcnKTtcbiAgICBhdXRvcGxheSA9IGdldE9wdGlvbignYXV0b3BsYXknKTtcbiAgICBhdXRvcGxheUhvdmVyUGF1c2UgPSBnZXRPcHRpb24oJ2F1dG9wbGF5SG92ZXJQYXVzZScpO1xuICAgIGF1dG9wbGF5UmVzZXRPblZpc2liaWxpdHkgPSBnZXRPcHRpb24oJ2F1dG9wbGF5UmVzZXRPblZpc2liaWxpdHknKTtcblxuICAgIGlmIChicENoYW5nZWQpIHtcbiAgICAgIGRpc2FibGUgPSBnZXRPcHRpb24oJ2Rpc2FibGUnKTtcbiAgICAgIGZpeGVkV2lkdGggPSBnZXRPcHRpb24oJ2ZpeGVkV2lkdGgnKTtcbiAgICAgIHNwZWVkID0gZ2V0T3B0aW9uKCdzcGVlZCcpO1xuICAgICAgYXV0b0hlaWdodCA9IGdldE9wdGlvbignYXV0b0hlaWdodCcpO1xuICAgICAgY29udHJvbHNUZXh0ID0gZ2V0T3B0aW9uKCdjb250cm9sc1RleHQnKTtcbiAgICAgIGF1dG9wbGF5VGV4dCA9IGdldE9wdGlvbignYXV0b3BsYXlUZXh0Jyk7XG4gICAgICBhdXRvcGxheVRpbWVvdXQgPSBnZXRPcHRpb24oJ2F1dG9wbGF5VGltZW91dCcpO1xuXG4gICAgICBpZiAoIUNTU01RKSB7XG4gICAgICAgIGVkZ2VQYWRkaW5nID0gZ2V0T3B0aW9uKCdlZGdlUGFkZGluZycpO1xuICAgICAgICBndXR0ZXIgPSBnZXRPcHRpb24oJ2d1dHRlcicpO1xuICAgICAgfVxuICAgIH1cbiAgICAvLyB1cGRhdGUgb3B0aW9uc1xuICAgIHJlc2V0VmFyaWJsZXNXaGVuRGlzYWJsZShkaXNhYmxlKTtcblxuICAgIHZpZXdwb3J0ID0gZ2V0Vmlld3BvcnRXaWR0aCgpOyAvLyA8PSBlZGdlUGFkZGluZywgZ3V0dGVyXG4gICAgaWYgKCghaG9yaXpvbnRhbCB8fCBhdXRvV2lkdGgpICYmICFkaXNhYmxlKSB7XG4gICAgICBzZXRTbGlkZVBvc2l0aW9ucygpO1xuICAgICAgaWYgKCFob3Jpem9udGFsKSB7XG4gICAgICAgIHVwZGF0ZUNvbnRlbnRXcmFwcGVySGVpZ2h0KCk7IC8vIDw9IHNldFNsaWRlUG9zaXRpb25zXG4gICAgICAgIG5lZWRDb250YWluZXJUcmFuc2Zvcm0gPSB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoZml4ZWRXaWR0aCB8fCBhdXRvV2lkdGgpIHtcbiAgICAgIHJpZ2h0Qm91bmRhcnkgPSBnZXRSaWdodEJvdW5kYXJ5KCk7IC8vIGF1dG9XaWR0aDogPD0gdmlld3BvcnQsIHNsaWRlUG9zaXRpb25zLCBndXR0ZXJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGZpeGVkV2lkdGg6IDw9IHZpZXdwb3J0LCBmaXhlZFdpZHRoLCBndXR0ZXJcbiAgICAgIGluZGV4TWF4ID0gZ2V0SW5kZXhNYXgoKTsgLy8gYXV0b1dpZHRoOiA8PSByaWdodEJvdW5kYXJ5LCBzbGlkZVBvc2l0aW9uc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBmaXhlZFdpZHRoOiA8PSByaWdodEJvdW5kYXJ5LCBmaXhlZFdpZHRoLCBndXR0ZXJcbiAgICB9XG5cbiAgICBpZiAoYnBDaGFuZ2VkIHx8IGZpeGVkV2lkdGgpIHtcbiAgICAgIGl0ZW1zID0gZ2V0T3B0aW9uKCdpdGVtcycpO1xuICAgICAgc2xpZGVCeSA9IGdldE9wdGlvbignc2xpZGVCeScpO1xuICAgICAgaXRlbXNDaGFuZ2VkID0gaXRlbXMgIT09IGl0ZW1zVGVtO1xuXG4gICAgICBpZiAoaXRlbXNDaGFuZ2VkKSB7XG4gICAgICAgIGlmICghZml4ZWRXaWR0aCAmJiAhYXV0b1dpZHRoKSB7IGluZGV4TWF4ID0gZ2V0SW5kZXhNYXgoKTsgfSAvLyA8PSBpdGVtc1xuICAgICAgICAvLyBjaGVjayBpbmRleCBiZWZvcmUgdHJhbnNmb3JtIGluIGNhc2VcbiAgICAgICAgLy8gc2xpZGVyIHJlYWNoIHRoZSByaWdodCBlZGdlIHRoZW4gaXRlbXMgYmVjb21lIGJpZ2dlclxuICAgICAgICB1cGRhdGVJbmRleCgpO1xuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICBpZiAoYnBDaGFuZ2VkKSB7XG4gICAgICBpZiAoZGlzYWJsZSAhPT0gZGlzYWJsZVRlbSkge1xuICAgICAgICBpZiAoZGlzYWJsZSkge1xuICAgICAgICAgIGRpc2FibGVTbGlkZXIoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBlbmFibGVTbGlkZXIoKTsgLy8gPD0gc2xpZGVQb3NpdGlvbnMsIHJpZ2h0Qm91bmRhcnksIGluZGV4TWF4XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoZnJlZXphYmxlICYmIChicENoYW5nZWQgfHwgZml4ZWRXaWR0aCB8fCBhdXRvV2lkdGgpKSB7XG4gICAgICBmcmVlemUgPSBnZXRGcmVlemUoKTsgLy8gPD0gYXV0b1dpZHRoOiBzbGlkZVBvc2l0aW9ucywgZ3V0dGVyLCB2aWV3cG9ydCwgcmlnaHRCb3VuZGFyeVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIDw9IGZpeGVkV2lkdGg6IGZpeGVkV2lkdGgsIGd1dHRlciwgcmlnaHRCb3VuZGFyeVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIDw9IG90aGVyczogaXRlbXNcblxuICAgICAgaWYgKGZyZWV6ZSAhPT0gZnJlZXplVGVtKSB7XG4gICAgICAgIGlmIChmcmVlemUpIHtcbiAgICAgICAgICBkb0NvbnRhaW5lclRyYW5zZm9ybShnZXRDb250YWluZXJUcmFuc2Zvcm1WYWx1ZShnZXRTdGFydEluZGV4KDApKSk7XG4gICAgICAgICAgZnJlZXplU2xpZGVyKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdW5mcmVlemVTbGlkZXIoKTtcbiAgICAgICAgICBuZWVkQ29udGFpbmVyVHJhbnNmb3JtID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJlc2V0VmFyaWJsZXNXaGVuRGlzYWJsZShkaXNhYmxlIHx8IGZyZWV6ZSk7IC8vIGNvbnRyb2xzLCBuYXYsIHRvdWNoLCBtb3VzZURyYWcsIGFycm93S2V5cywgYXV0b3BsYXksIGF1dG9wbGF5SG92ZXJQYXVzZSwgYXV0b3BsYXlSZXNldE9uVmlzaWJpbGl0eVxuICAgIGlmICghYXV0b3BsYXkpIHsgYXV0b3BsYXlIb3ZlclBhdXNlID0gYXV0b3BsYXlSZXNldE9uVmlzaWJpbGl0eSA9IGZhbHNlOyB9XG5cbiAgICBpZiAoYXJyb3dLZXlzICE9PSBhcnJvd0tleXNUZW0pIHtcbiAgICAgIGFycm93S2V5cyA/XG4gICAgICAgIGFkZEV2ZW50cyhkb2MsIGRvY21lbnRLZXlkb3duRXZlbnQpIDpcbiAgICAgICAgcmVtb3ZlRXZlbnRzKGRvYywgZG9jbWVudEtleWRvd25FdmVudCk7XG4gICAgfVxuICAgIGlmIChjb250cm9scyAhPT0gY29udHJvbHNUZW0pIHtcbiAgICAgIGlmIChjb250cm9scykge1xuICAgICAgICBpZiAoY29udHJvbHNDb250YWluZXIpIHtcbiAgICAgICAgICBzaG93RWxlbWVudChjb250cm9sc0NvbnRhaW5lcik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKHByZXZCdXR0b24pIHsgc2hvd0VsZW1lbnQocHJldkJ1dHRvbik7IH1cbiAgICAgICAgICBpZiAobmV4dEJ1dHRvbikgeyBzaG93RWxlbWVudChuZXh0QnV0dG9uKTsgfVxuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoY29udHJvbHNDb250YWluZXIpIHtcbiAgICAgICAgICBoaWRlRWxlbWVudChjb250cm9sc0NvbnRhaW5lcik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKHByZXZCdXR0b24pIHsgaGlkZUVsZW1lbnQocHJldkJ1dHRvbik7IH1cbiAgICAgICAgICBpZiAobmV4dEJ1dHRvbikgeyBoaWRlRWxlbWVudChuZXh0QnV0dG9uKTsgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChuYXYgIT09IG5hdlRlbSkge1xuICAgICAgbmF2ID9cbiAgICAgICAgc2hvd0VsZW1lbnQobmF2Q29udGFpbmVyKSA6XG4gICAgICAgIGhpZGVFbGVtZW50KG5hdkNvbnRhaW5lcik7XG4gICAgfVxuICAgIGlmICh0b3VjaCAhPT0gdG91Y2hUZW0pIHtcbiAgICAgIHRvdWNoID9cbiAgICAgICAgYWRkRXZlbnRzKGNvbnRhaW5lciwgdG91Y2hFdmVudHMsIG9wdGlvbnMucHJldmVudFNjcm9sbE9uVG91Y2gpIDpcbiAgICAgICAgcmVtb3ZlRXZlbnRzKGNvbnRhaW5lciwgdG91Y2hFdmVudHMpO1xuICAgIH1cbiAgICBpZiAobW91c2VEcmFnICE9PSBtb3VzZURyYWdUZW0pIHtcbiAgICAgIG1vdXNlRHJhZyA/XG4gICAgICAgIGFkZEV2ZW50cyhjb250YWluZXIsIGRyYWdFdmVudHMpIDpcbiAgICAgICAgcmVtb3ZlRXZlbnRzKGNvbnRhaW5lciwgZHJhZ0V2ZW50cyk7XG4gICAgfVxuICAgIGlmIChhdXRvcGxheSAhPT0gYXV0b3BsYXlUZW0pIHtcbiAgICAgIGlmIChhdXRvcGxheSkge1xuICAgICAgICBpZiAoYXV0b3BsYXlCdXR0b24pIHsgc2hvd0VsZW1lbnQoYXV0b3BsYXlCdXR0b24pOyB9XG4gICAgICAgIGlmICghYW5pbWF0aW5nICYmICFhdXRvcGxheVVzZXJQYXVzZWQpIHsgc3RhcnRBdXRvcGxheSgpOyB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoYXV0b3BsYXlCdXR0b24pIHsgaGlkZUVsZW1lbnQoYXV0b3BsYXlCdXR0b24pOyB9XG4gICAgICAgIGlmIChhbmltYXRpbmcpIHsgc3RvcEF1dG9wbGF5KCk7IH1cbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKGF1dG9wbGF5SG92ZXJQYXVzZSAhPT0gYXV0b3BsYXlIb3ZlclBhdXNlVGVtKSB7XG4gICAgICBhdXRvcGxheUhvdmVyUGF1c2UgP1xuICAgICAgICBhZGRFdmVudHMoY29udGFpbmVyLCBob3ZlckV2ZW50cykgOlxuICAgICAgICByZW1vdmVFdmVudHMoY29udGFpbmVyLCBob3ZlckV2ZW50cyk7XG4gICAgfVxuICAgIGlmIChhdXRvcGxheVJlc2V0T25WaXNpYmlsaXR5ICE9PSBhdXRvcGxheVJlc2V0T25WaXNpYmlsaXR5VGVtKSB7XG4gICAgICBhdXRvcGxheVJlc2V0T25WaXNpYmlsaXR5ID9cbiAgICAgICAgYWRkRXZlbnRzKGRvYywgdmlzaWJpbGl0eUV2ZW50KSA6XG4gICAgICAgIHJlbW92ZUV2ZW50cyhkb2MsIHZpc2liaWxpdHlFdmVudCk7XG4gICAgfVxuXG4gICAgaWYgKGJwQ2hhbmdlZCkge1xuICAgICAgaWYgKGZpeGVkV2lkdGggIT09IGZpeGVkV2lkdGhUZW0gfHwgY2VudGVyICE9PSBjZW50ZXJUZW0pIHsgbmVlZENvbnRhaW5lclRyYW5zZm9ybSA9IHRydWU7IH1cblxuICAgICAgaWYgKGF1dG9IZWlnaHQgIT09IGF1dG9IZWlnaHRUZW0pIHtcbiAgICAgICAgaWYgKCFhdXRvSGVpZ2h0KSB7IGlubmVyV3JhcHBlci5zdHlsZS5oZWlnaHQgPSAnJzsgfVxuICAgICAgfVxuXG4gICAgICBpZiAoY29udHJvbHMgJiYgY29udHJvbHNUZXh0ICE9PSBjb250cm9sc1RleHRUZW0pIHtcbiAgICAgICAgcHJldkJ1dHRvbi5pbm5lckhUTUwgPSBjb250cm9sc1RleHRbMF07XG4gICAgICAgIG5leHRCdXR0b24uaW5uZXJIVE1MID0gY29udHJvbHNUZXh0WzFdO1xuICAgICAgfVxuXG4gICAgICBpZiAoYXV0b3BsYXlCdXR0b24gJiYgYXV0b3BsYXlUZXh0ICE9PSBhdXRvcGxheVRleHRUZW0pIHtcbiAgICAgICAgdmFyIGkgPSBhdXRvcGxheSA/IDEgOiAwLFxuICAgICAgICAgICAgaHRtbCA9IGF1dG9wbGF5QnV0dG9uLmlubmVySFRNTCxcbiAgICAgICAgICAgIGxlbiA9IGh0bWwubGVuZ3RoIC0gYXV0b3BsYXlUZXh0VGVtW2ldLmxlbmd0aDtcbiAgICAgICAgaWYgKGh0bWwuc3Vic3RyaW5nKGxlbikgPT09IGF1dG9wbGF5VGV4dFRlbVtpXSkge1xuICAgICAgICAgIGF1dG9wbGF5QnV0dG9uLmlubmVySFRNTCA9IGh0bWwuc3Vic3RyaW5nKDAsIGxlbikgKyBhdXRvcGxheVRleHRbaV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKGNlbnRlciAmJiAoZml4ZWRXaWR0aCB8fCBhdXRvV2lkdGgpKSB7IG5lZWRDb250YWluZXJUcmFuc2Zvcm0gPSB0cnVlOyB9XG4gICAgfVxuXG4gICAgaWYgKGl0ZW1zQ2hhbmdlZCB8fCBmaXhlZFdpZHRoICYmICFhdXRvV2lkdGgpIHtcbiAgICAgIHBhZ2VzID0gZ2V0UGFnZXMoKTtcbiAgICAgIHVwZGF0ZU5hdlZpc2liaWxpdHkoKTtcbiAgICB9XG5cbiAgICBpbmRDaGFuZ2VkID0gaW5kZXggIT09IGluZGV4VGVtO1xuICAgIGlmIChpbmRDaGFuZ2VkKSB7IFxuICAgICAgZXZlbnRzLmVtaXQoJ2luZGV4Q2hhbmdlZCcsIGluZm8oKSk7XG4gICAgICBuZWVkQ29udGFpbmVyVHJhbnNmb3JtID0gdHJ1ZTtcbiAgICB9IGVsc2UgaWYgKGl0ZW1zQ2hhbmdlZCkge1xuICAgICAgaWYgKCFpbmRDaGFuZ2VkKSB7IGFkZGl0aW9uYWxVcGRhdGVzKCk7IH1cbiAgICB9IGVsc2UgaWYgKGZpeGVkV2lkdGggfHwgYXV0b1dpZHRoKSB7XG4gICAgICBkb0xhenlMb2FkKCk7IFxuICAgICAgdXBkYXRlU2xpZGVTdGF0dXMoKTtcbiAgICAgIHVwZGF0ZUxpdmVSZWdpb24oKTtcbiAgICB9XG5cbiAgICBpZiAoaXRlbXNDaGFuZ2VkIHx8ICFjYXJvdXNlbCkgeyB1cGRhdGVHYWxsZXJ5U2xpZGVQb3NpdGlvbnMoKTsgfVxuXG4gICAgaWYgKCFkaXNhYmxlICYmICFmcmVlemUpIHtcbiAgICAgIC8vIG5vbi1tZWR1YXF1ZXJpZXM6IElFOFxuICAgICAgaWYgKGJwQ2hhbmdlZCAmJiAhQ1NTTVEpIHtcbiAgICAgICAgLy8gbWlkZGxlIHdyYXBwZXIgc3R5bGVzXG4gICAgICAgIGlmIChhdXRvSGVpZ2h0ICE9PSBhdXRvaGVpZ2h0VGVtIHx8IHNwZWVkICE9PSBzcGVlZFRlbSkge1xuICAgICAgICAgIHVwZGF0ZV9jYXJvdXNlbF90cmFuc2l0aW9uX2R1cmF0aW9uKCk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBpbm5lciB3cmFwcGVyIHN0eWxlc1xuICAgICAgICBpZiAoZWRnZVBhZGRpbmcgIT09IGVkZ2VQYWRkaW5nVGVtIHx8IGd1dHRlciAhPT0gZ3V0dGVyVGVtKSB7XG4gICAgICAgICAgaW5uZXJXcmFwcGVyLnN0eWxlLmNzc1RleHQgPSBnZXRJbm5lcldyYXBwZXJTdHlsZXMoZWRnZVBhZGRpbmcsIGd1dHRlciwgZml4ZWRXaWR0aCwgc3BlZWQsIGF1dG9IZWlnaHQpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGhvcml6b250YWwpIHtcbiAgICAgICAgICAvLyBjb250YWluZXIgc3R5bGVzXG4gICAgICAgICAgaWYgKGNhcm91c2VsKSB7XG4gICAgICAgICAgICBjb250YWluZXIuc3R5bGUud2lkdGggPSBnZXRDb250YWluZXJXaWR0aChmaXhlZFdpZHRoLCBndXR0ZXIsIGl0ZW1zKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvLyBzbGlkZSBzdHlsZXNcbiAgICAgICAgICB2YXIgc3RyID0gZ2V0U2xpZGVXaWR0aFN0eWxlKGZpeGVkV2lkdGgsIGd1dHRlciwgaXRlbXMpICsgXG4gICAgICAgICAgICAgICAgICAgIGdldFNsaWRlR3V0dGVyU3R5bGUoZ3V0dGVyKTtcblxuICAgICAgICAgIC8vIHJlbW92ZSB0aGUgbGFzdCBsaW5lIGFuZFxuICAgICAgICAgIC8vIGFkZCBuZXcgc3R5bGVzXG4gICAgICAgICAgcmVtb3ZlQ1NTUnVsZShzaGVldCwgZ2V0Q3NzUnVsZXNMZW5ndGgoc2hlZXQpIC0gMSk7XG4gICAgICAgICAgYWRkQ1NTUnVsZShzaGVldCwgJyMnICsgc2xpZGVJZCArICcgPiAudG5zLWl0ZW0nLCBzdHIsIGdldENzc1J1bGVzTGVuZ3RoKHNoZWV0KSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gYXV0byBoZWlnaHRcbiAgICAgIGlmIChhdXRvSGVpZ2h0KSB7IGRvQXV0b0hlaWdodCgpOyB9XG5cbiAgICAgIGlmIChuZWVkQ29udGFpbmVyVHJhbnNmb3JtKSB7XG4gICAgICAgIGRvQ29udGFpbmVyVHJhbnNmb3JtU2lsZW50KCk7XG4gICAgICAgIGluZGV4Q2FjaGVkID0gaW5kZXg7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGJwQ2hhbmdlZCkgeyBldmVudHMuZW1pdCgnbmV3QnJlYWtwb2ludEVuZCcsIGluZm8oZSkpOyB9XG4gIH1cblxuXG5cblxuXG4gIC8vID09PSBJTklUSUFMSVpBVElPTiBGVU5DVElPTlMgPT09IC8vXG4gIGZ1bmN0aW9uIGdldEZyZWV6ZSAoKSB7XG4gICAgaWYgKCFmaXhlZFdpZHRoICYmICFhdXRvV2lkdGgpIHtcbiAgICAgIHZhciBhID0gY2VudGVyID8gaXRlbXMgLSAoaXRlbXMgLSAxKSAvIDIgOiBpdGVtcztcbiAgICAgIHJldHVybiAgc2xpZGVDb3VudCA8PSBhO1xuICAgIH1cblxuICAgIHZhciB3aWR0aCA9IGZpeGVkV2lkdGggPyAoZml4ZWRXaWR0aCArIGd1dHRlcikgKiBzbGlkZUNvdW50IDogc2xpZGVQb3NpdGlvbnNbc2xpZGVDb3VudF0sXG4gICAgICAgIHZwID0gZWRnZVBhZGRpbmcgPyB2aWV3cG9ydCArIGVkZ2VQYWRkaW5nICogMiA6IHZpZXdwb3J0ICsgZ3V0dGVyO1xuXG4gICAgaWYgKGNlbnRlcikge1xuICAgICAgdnAgLT0gZml4ZWRXaWR0aCA/ICh2aWV3cG9ydCAtIGZpeGVkV2lkdGgpIC8gMiA6ICh2aWV3cG9ydCAtIChzbGlkZVBvc2l0aW9uc1tpbmRleCArIDFdIC0gc2xpZGVQb3NpdGlvbnNbaW5kZXhdIC0gZ3V0dGVyKSkgLyAyO1xuICAgIH1cblxuICAgIHJldHVybiB3aWR0aCA8PSB2cDtcbiAgfVxuXG4gIGZ1bmN0aW9uIHNldEJyZWFrcG9pbnRab25lICgpIHtcbiAgICBicmVha3BvaW50Wm9uZSA9IDA7XG4gICAgZm9yICh2YXIgYnAgaW4gcmVzcG9uc2l2ZSkge1xuICAgICAgYnAgPSBwYXJzZUludChicCk7IC8vIGNvbnZlcnQgc3RyaW5nIHRvIG51bWJlclxuICAgICAgaWYgKHdpbmRvd1dpZHRoID49IGJwKSB7IGJyZWFrcG9pbnRab25lID0gYnA7IH1cbiAgICB9XG4gIH1cblxuICAvLyAoc2xpZGVCeSwgaW5kZXhNaW4sIGluZGV4TWF4KSA9PiBpbmRleFxuICB2YXIgdXBkYXRlSW5kZXggPSAoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBsb29wID8gXG4gICAgICBjYXJvdXNlbCA/XG4gICAgICAgIC8vIGxvb3AgKyBjYXJvdXNlbFxuICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgdmFyIGxlZnRFZGdlID0gaW5kZXhNaW4sXG4gICAgICAgICAgICAgIHJpZ2h0RWRnZSA9IGluZGV4TWF4O1xuXG4gICAgICAgICAgbGVmdEVkZ2UgKz0gc2xpZGVCeTtcbiAgICAgICAgICByaWdodEVkZ2UgLT0gc2xpZGVCeTtcblxuICAgICAgICAgIC8vIGFkanVzdCBlZGdlcyB3aGVuIGhhcyBlZGdlIHBhZGRpbmdzXG4gICAgICAgICAgLy8gb3IgZml4ZWQtd2lkdGggc2xpZGVyIHdpdGggZXh0cmEgc3BhY2Ugb24gdGhlIHJpZ2h0IHNpZGVcbiAgICAgICAgICBpZiAoZWRnZVBhZGRpbmcpIHtcbiAgICAgICAgICAgIGxlZnRFZGdlICs9IDE7XG4gICAgICAgICAgICByaWdodEVkZ2UgLT0gMTtcbiAgICAgICAgICB9IGVsc2UgaWYgKGZpeGVkV2lkdGgpIHtcbiAgICAgICAgICAgIGlmICgodmlld3BvcnQgKyBndXR0ZXIpJShmaXhlZFdpZHRoICsgZ3V0dGVyKSkgeyByaWdodEVkZ2UgLT0gMTsgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChjbG9uZUNvdW50KSB7XG4gICAgICAgICAgICBpZiAoaW5kZXggPiByaWdodEVkZ2UpIHtcbiAgICAgICAgICAgICAgaW5kZXggLT0gc2xpZGVDb3VudDtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoaW5kZXggPCBsZWZ0RWRnZSkge1xuICAgICAgICAgICAgICBpbmRleCArPSBzbGlkZUNvdW50O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSA6XG4gICAgICAgIC8vIGxvb3AgKyBnYWxsZXJ5XG4gICAgICAgIGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGlmIChpbmRleCA+IGluZGV4TWF4KSB7XG4gICAgICAgICAgICB3aGlsZSAoaW5kZXggPj0gaW5kZXhNaW4gKyBzbGlkZUNvdW50KSB7IGluZGV4IC09IHNsaWRlQ291bnQ7IH1cbiAgICAgICAgICB9IGVsc2UgaWYgKGluZGV4IDwgaW5kZXhNaW4pIHtcbiAgICAgICAgICAgIHdoaWxlIChpbmRleCA8PSBpbmRleE1heCAtIHNsaWRlQ291bnQpIHsgaW5kZXggKz0gc2xpZGVDb3VudDsgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSA6XG4gICAgICAvLyBub24tbG9vcFxuICAgICAgZnVuY3Rpb24oKSB7XG4gICAgICAgIGluZGV4ID0gTWF0aC5tYXgoaW5kZXhNaW4sIE1hdGgubWluKGluZGV4TWF4LCBpbmRleCkpO1xuICAgICAgfTtcbiAgfSkoKTtcblxuICBmdW5jdGlvbiBkaXNhYmxlVUkgKCkge1xuICAgIGlmICghYXV0b3BsYXkgJiYgYXV0b3BsYXlCdXR0b24pIHsgaGlkZUVsZW1lbnQoYXV0b3BsYXlCdXR0b24pOyB9XG4gICAgaWYgKCFuYXYgJiYgbmF2Q29udGFpbmVyKSB7IGhpZGVFbGVtZW50KG5hdkNvbnRhaW5lcik7IH1cbiAgICBpZiAoIWNvbnRyb2xzKSB7XG4gICAgICBpZiAoY29udHJvbHNDb250YWluZXIpIHtcbiAgICAgICAgaGlkZUVsZW1lbnQoY29udHJvbHNDb250YWluZXIpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKHByZXZCdXR0b24pIHsgaGlkZUVsZW1lbnQocHJldkJ1dHRvbik7IH1cbiAgICAgICAgaWYgKG5leHRCdXR0b24pIHsgaGlkZUVsZW1lbnQobmV4dEJ1dHRvbik7IH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBlbmFibGVVSSAoKSB7XG4gICAgaWYgKGF1dG9wbGF5ICYmIGF1dG9wbGF5QnV0dG9uKSB7IHNob3dFbGVtZW50KGF1dG9wbGF5QnV0dG9uKTsgfVxuICAgIGlmIChuYXYgJiYgbmF2Q29udGFpbmVyKSB7IHNob3dFbGVtZW50KG5hdkNvbnRhaW5lcik7IH1cbiAgICBpZiAoY29udHJvbHMpIHtcbiAgICAgIGlmIChjb250cm9sc0NvbnRhaW5lcikge1xuICAgICAgICBzaG93RWxlbWVudChjb250cm9sc0NvbnRhaW5lcik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAocHJldkJ1dHRvbikgeyBzaG93RWxlbWVudChwcmV2QnV0dG9uKTsgfVxuICAgICAgICBpZiAobmV4dEJ1dHRvbikgeyBzaG93RWxlbWVudChuZXh0QnV0dG9uKTsgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGZyZWV6ZVNsaWRlciAoKSB7XG4gICAgaWYgKGZyb3plbikgeyByZXR1cm47IH1cblxuICAgIC8vIHJlbW92ZSBlZGdlIHBhZGRpbmcgZnJvbSBpbm5lciB3cmFwcGVyXG4gICAgaWYgKGVkZ2VQYWRkaW5nKSB7IGlubmVyV3JhcHBlci5zdHlsZS5tYXJnaW4gPSAnMHB4JzsgfVxuXG4gICAgLy8gYWRkIGNsYXNzIHRucy10cmFuc3BhcmVudCB0byBjbG9uZWQgc2xpZGVzXG4gICAgaWYgKGNsb25lQ291bnQpIHtcbiAgICAgIHZhciBzdHIgPSAndG5zLXRyYW5zcGFyZW50JztcbiAgICAgIGZvciAodmFyIGkgPSBjbG9uZUNvdW50OyBpLS07KSB7XG4gICAgICAgIGlmIChjYXJvdXNlbCkgeyBhZGRDbGFzcyhzbGlkZUl0ZW1zW2ldLCBzdHIpOyB9XG4gICAgICAgIGFkZENsYXNzKHNsaWRlSXRlbXNbc2xpZGVDb3VudE5ldyAtIGkgLSAxXSwgc3RyKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyB1cGRhdGUgdG9vbHNcbiAgICBkaXNhYmxlVUkoKTtcblxuICAgIGZyb3plbiA9IHRydWU7XG4gIH1cblxuICBmdW5jdGlvbiB1bmZyZWV6ZVNsaWRlciAoKSB7XG4gICAgaWYgKCFmcm96ZW4pIHsgcmV0dXJuOyB9XG5cbiAgICAvLyByZXN0b3JlIGVkZ2UgcGFkZGluZyBmb3IgaW5uZXIgd3JhcHBlclxuICAgIC8vIGZvciBtb3JkZXJuIGJyb3dzZXJzXG4gICAgaWYgKGVkZ2VQYWRkaW5nICYmIENTU01RKSB7IGlubmVyV3JhcHBlci5zdHlsZS5tYXJnaW4gPSAnJzsgfVxuXG4gICAgLy8gcmVtb3ZlIGNsYXNzIHRucy10cmFuc3BhcmVudCB0byBjbG9uZWQgc2xpZGVzXG4gICAgaWYgKGNsb25lQ291bnQpIHtcbiAgICAgIHZhciBzdHIgPSAndG5zLXRyYW5zcGFyZW50JztcbiAgICAgIGZvciAodmFyIGkgPSBjbG9uZUNvdW50OyBpLS07KSB7XG4gICAgICAgIGlmIChjYXJvdXNlbCkgeyByZW1vdmVDbGFzcyhzbGlkZUl0ZW1zW2ldLCBzdHIpOyB9XG4gICAgICAgIHJlbW92ZUNsYXNzKHNsaWRlSXRlbXNbc2xpZGVDb3VudE5ldyAtIGkgLSAxXSwgc3RyKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyB1cGRhdGUgdG9vbHNcbiAgICBlbmFibGVVSSgpO1xuXG4gICAgZnJvemVuID0gZmFsc2U7XG4gIH1cblxuICBmdW5jdGlvbiBkaXNhYmxlU2xpZGVyICgpIHtcbiAgICBpZiAoZGlzYWJsZWQpIHsgcmV0dXJuOyB9XG5cbiAgICBzaGVldC5kaXNhYmxlZCA9IHRydWU7XG4gICAgY29udGFpbmVyLmNsYXNzTmFtZSA9IGNvbnRhaW5lci5jbGFzc05hbWUucmVwbGFjZShuZXdDb250YWluZXJDbGFzc2VzLnN1YnN0cmluZygxKSwgJycpO1xuICAgIHJlbW92ZUF0dHJzKGNvbnRhaW5lciwgWydzdHlsZSddKTtcbiAgICBpZiAobG9vcCkge1xuICAgICAgZm9yICh2YXIgaiA9IGNsb25lQ291bnQ7IGotLTspIHtcbiAgICAgICAgaWYgKGNhcm91c2VsKSB7IGhpZGVFbGVtZW50KHNsaWRlSXRlbXNbal0pOyB9XG4gICAgICAgIGhpZGVFbGVtZW50KHNsaWRlSXRlbXNbc2xpZGVDb3VudE5ldyAtIGogLSAxXSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gdmVydGljYWwgc2xpZGVyXG4gICAgaWYgKCFob3Jpem9udGFsIHx8ICFjYXJvdXNlbCkgeyByZW1vdmVBdHRycyhpbm5lcldyYXBwZXIsIFsnc3R5bGUnXSk7IH1cblxuICAgIC8vIGdhbGxlcnlcbiAgICBpZiAoIWNhcm91c2VsKSB7IFxuICAgICAgZm9yICh2YXIgaSA9IGluZGV4LCBsID0gaW5kZXggKyBzbGlkZUNvdW50OyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIHZhciBpdGVtID0gc2xpZGVJdGVtc1tpXTtcbiAgICAgICAgcmVtb3ZlQXR0cnMoaXRlbSwgWydzdHlsZSddKTtcbiAgICAgICAgcmVtb3ZlQ2xhc3MoaXRlbSwgYW5pbWF0ZUluKTtcbiAgICAgICAgcmVtb3ZlQ2xhc3MoaXRlbSwgYW5pbWF0ZU5vcm1hbCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gdXBkYXRlIHRvb2xzXG4gICAgZGlzYWJsZVVJKCk7XG5cbiAgICBkaXNhYmxlZCA9IHRydWU7XG4gIH1cblxuICBmdW5jdGlvbiBlbmFibGVTbGlkZXIgKCkge1xuICAgIGlmICghZGlzYWJsZWQpIHsgcmV0dXJuOyB9XG5cbiAgICBzaGVldC5kaXNhYmxlZCA9IGZhbHNlO1xuICAgIGNvbnRhaW5lci5jbGFzc05hbWUgKz0gbmV3Q29udGFpbmVyQ2xhc3NlcztcbiAgICBkb0NvbnRhaW5lclRyYW5zZm9ybVNpbGVudCgpO1xuXG4gICAgaWYgKGxvb3ApIHtcbiAgICAgIGZvciAodmFyIGogPSBjbG9uZUNvdW50OyBqLS07KSB7XG4gICAgICAgIGlmIChjYXJvdXNlbCkgeyBzaG93RWxlbWVudChzbGlkZUl0ZW1zW2pdKTsgfVxuICAgICAgICBzaG93RWxlbWVudChzbGlkZUl0ZW1zW3NsaWRlQ291bnROZXcgLSBqIC0gMV0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIGdhbGxlcnlcbiAgICBpZiAoIWNhcm91c2VsKSB7IFxuICAgICAgZm9yICh2YXIgaSA9IGluZGV4LCBsID0gaW5kZXggKyBzbGlkZUNvdW50OyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIHZhciBpdGVtID0gc2xpZGVJdGVtc1tpXSxcbiAgICAgICAgICAgIGNsYXNzTiA9IGkgPCBpbmRleCArIGl0ZW1zID8gYW5pbWF0ZUluIDogYW5pbWF0ZU5vcm1hbDtcbiAgICAgICAgaXRlbS5zdHlsZS5sZWZ0ID0gKGkgLSBpbmRleCkgKiAxMDAgLyBpdGVtcyArICclJztcbiAgICAgICAgYWRkQ2xhc3MoaXRlbSwgY2xhc3NOKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyB1cGRhdGUgdG9vbHNcbiAgICBlbmFibGVVSSgpO1xuXG4gICAgZGlzYWJsZWQgPSBmYWxzZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHVwZGF0ZUxpdmVSZWdpb24gKCkge1xuICAgIHZhciBzdHIgPSBnZXRMaXZlUmVnaW9uU3RyKCk7XG4gICAgaWYgKGxpdmVyZWdpb25DdXJyZW50LmlubmVySFRNTCAhPT0gc3RyKSB7IGxpdmVyZWdpb25DdXJyZW50LmlubmVySFRNTCA9IHN0cjsgfVxuICB9XG5cbiAgZnVuY3Rpb24gZ2V0TGl2ZVJlZ2lvblN0ciAoKSB7XG4gICAgdmFyIGFyciA9IGdldFZpc2libGVTbGlkZVJhbmdlKCksXG4gICAgICAgIHN0YXJ0ID0gYXJyWzBdICsgMSxcbiAgICAgICAgZW5kID0gYXJyWzFdICsgMTtcbiAgICByZXR1cm4gc3RhcnQgPT09IGVuZCA/IHN0YXJ0ICsgJycgOiBzdGFydCArICcgdG8gJyArIGVuZDsgXG4gIH1cblxuICBmdW5jdGlvbiBnZXRWaXNpYmxlU2xpZGVSYW5nZSAodmFsKSB7XG4gICAgaWYgKHZhbCA9PSBudWxsKSB7IHZhbCA9IGdldENvbnRhaW5lclRyYW5zZm9ybVZhbHVlKCk7IH1cbiAgICB2YXIgc3RhcnQgPSBpbmRleCwgZW5kLCByYW5nZXN0YXJ0LCByYW5nZWVuZDtcblxuICAgIC8vIGdldCByYW5nZSBzdGFydCwgcmFuZ2UgZW5kIGZvciBhdXRvV2lkdGggYW5kIGZpeGVkV2lkdGhcbiAgICBpZiAoY2VudGVyIHx8IGVkZ2VQYWRkaW5nKSB7XG4gICAgICBpZiAoYXV0b1dpZHRoIHx8IGZpeGVkV2lkdGgpIHtcbiAgICAgICAgcmFuZ2VzdGFydCA9IC0gKHBhcnNlRmxvYXQodmFsKSArIGVkZ2VQYWRkaW5nKTtcbiAgICAgICAgcmFuZ2VlbmQgPSByYW5nZXN0YXJ0ICsgdmlld3BvcnQgKyBlZGdlUGFkZGluZyAqIDI7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChhdXRvV2lkdGgpIHtcbiAgICAgICAgcmFuZ2VzdGFydCA9IHNsaWRlUG9zaXRpb25zW2luZGV4XTtcbiAgICAgICAgcmFuZ2VlbmQgPSByYW5nZXN0YXJ0ICsgdmlld3BvcnQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gZ2V0IHN0YXJ0LCBlbmRcbiAgICAvLyAtIGNoZWNrIGF1dG8gd2lkdGhcbiAgICBpZiAoYXV0b1dpZHRoKSB7XG4gICAgICBzbGlkZVBvc2l0aW9ucy5mb3JFYWNoKGZ1bmN0aW9uKHBvaW50LCBpKSB7XG4gICAgICAgIGlmIChpIDwgc2xpZGVDb3VudE5ldykge1xuICAgICAgICAgIGlmICgoY2VudGVyIHx8IGVkZ2VQYWRkaW5nKSAmJiBwb2ludCA8PSByYW5nZXN0YXJ0ICsgMC41KSB7IHN0YXJ0ID0gaTsgfVxuICAgICAgICAgIGlmIChyYW5nZWVuZCAtIHBvaW50ID49IDAuNSkgeyBlbmQgPSBpOyB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgLy8gLSBjaGVjayBwZXJjZW50YWdlIHdpZHRoLCBmaXhlZCB3aWR0aFxuICAgIH0gZWxzZSB7XG5cbiAgICAgIGlmIChmaXhlZFdpZHRoKSB7XG4gICAgICAgIHZhciBjZWxsID0gZml4ZWRXaWR0aCArIGd1dHRlcjtcbiAgICAgICAgaWYgKGNlbnRlciB8fCBlZGdlUGFkZGluZykge1xuICAgICAgICAgIHN0YXJ0ID0gTWF0aC5mbG9vcihyYW5nZXN0YXJ0L2NlbGwpO1xuICAgICAgICAgIGVuZCA9IE1hdGguY2VpbChyYW5nZWVuZC9jZWxsIC0gMSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZW5kID0gc3RhcnQgKyBNYXRoLmNlaWwodmlld3BvcnQvY2VsbCkgLSAxO1xuICAgICAgICB9XG5cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChjZW50ZXIgfHwgZWRnZVBhZGRpbmcpIHtcbiAgICAgICAgICB2YXIgYSA9IGl0ZW1zIC0gMTtcbiAgICAgICAgICBpZiAoY2VudGVyKSB7XG4gICAgICAgICAgICBzdGFydCAtPSBhIC8gMjtcbiAgICAgICAgICAgIGVuZCA9IGluZGV4ICsgYSAvIDI7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGVuZCA9IGluZGV4ICsgYTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoZWRnZVBhZGRpbmcpIHtcbiAgICAgICAgICAgIHZhciBiID0gZWRnZVBhZGRpbmcgKiBpdGVtcyAvIHZpZXdwb3J0O1xuICAgICAgICAgICAgc3RhcnQgLT0gYjtcbiAgICAgICAgICAgIGVuZCArPSBiO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHN0YXJ0ID0gTWF0aC5mbG9vcihzdGFydCk7XG4gICAgICAgICAgZW5kID0gTWF0aC5jZWlsKGVuZCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZW5kID0gc3RhcnQgKyBpdGVtcyAtIDE7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgc3RhcnQgPSBNYXRoLm1heChzdGFydCwgMCk7XG4gICAgICBlbmQgPSBNYXRoLm1pbihlbmQsIHNsaWRlQ291bnROZXcgLSAxKTtcbiAgICB9XG5cbiAgICByZXR1cm4gW3N0YXJ0LCBlbmRdO1xuICB9XG5cbiAgZnVuY3Rpb24gZG9MYXp5TG9hZCAoKSB7XG4gICAgaWYgKGxhenlsb2FkICYmICFkaXNhYmxlKSB7XG4gICAgICBnZXRJbWFnZUFycmF5LmFwcGx5KG51bGwsIGdldFZpc2libGVTbGlkZVJhbmdlKCkpLmZvckVhY2goZnVuY3Rpb24gKGltZykge1xuICAgICAgICBpZiAoIWhhc0NsYXNzKGltZywgaW1nQ29tcGxldGVDbGFzcykpIHtcbiAgICAgICAgICAvLyBzdG9wIHByb3BhZ2F0aW9uIHRyYW5zaXRpb25lbmQgZXZlbnQgdG8gY29udGFpbmVyXG4gICAgICAgICAgdmFyIGV2ZSA9IHt9O1xuICAgICAgICAgIGV2ZVtUUkFOU0lUSU9ORU5EXSA9IGZ1bmN0aW9uIChlKSB7IGUuc3RvcFByb3BhZ2F0aW9uKCk7IH07XG4gICAgICAgICAgYWRkRXZlbnRzKGltZywgZXZlKTtcblxuICAgICAgICAgIGFkZEV2ZW50cyhpbWcsIGltZ0V2ZW50cyk7XG5cbiAgICAgICAgICAvLyB1cGRhdGUgc3JjXG4gICAgICAgICAgaW1nLnNyYyA9IGdldEF0dHIoaW1nLCAnZGF0YS1zcmMnKTtcblxuICAgICAgICAgIC8vIHVwZGF0ZSBzcmNzZXRcbiAgICAgICAgICB2YXIgc3Jjc2V0ID0gZ2V0QXR0cihpbWcsICdkYXRhLXNyY3NldCcpO1xuICAgICAgICAgIGlmIChzcmNzZXQpIHsgaW1nLnNyY3NldCA9IHNyY3NldDsgfVxuXG4gICAgICAgICAgYWRkQ2xhc3MoaW1nLCAnbG9hZGluZycpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBvbkltZ0xvYWRlZCAoZSkge1xuICAgIGltZ0xvYWRlZChnZXRUYXJnZXQoZSkpO1xuICB9XG5cbiAgZnVuY3Rpb24gb25JbWdGYWlsZWQgKGUpIHtcbiAgICBpbWdGYWlsZWQoZ2V0VGFyZ2V0KGUpKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGltZ0xvYWRlZCAoaW1nKSB7XG4gICAgYWRkQ2xhc3MoaW1nLCAnbG9hZGVkJyk7XG4gICAgaW1nQ29tcGxldGVkKGltZyk7XG4gIH1cblxuICBmdW5jdGlvbiBpbWdGYWlsZWQgKGltZykge1xuICAgIGFkZENsYXNzKGltZywgJ2ZhaWxlZCcpO1xuICAgIGltZ0NvbXBsZXRlZChpbWcpO1xuICB9XG5cbiAgZnVuY3Rpb24gaW1nQ29tcGxldGVkIChpbWcpIHtcbiAgICBhZGRDbGFzcyhpbWcsICd0bnMtY29tcGxldGUnKTtcbiAgICByZW1vdmVDbGFzcyhpbWcsICdsb2FkaW5nJyk7XG4gICAgcmVtb3ZlRXZlbnRzKGltZywgaW1nRXZlbnRzKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldEltYWdlQXJyYXkgKHN0YXJ0LCBlbmQpIHtcbiAgICB2YXIgaW1ncyA9IFtdO1xuICAgIHdoaWxlIChzdGFydCA8PSBlbmQpIHtcbiAgICAgIGZvckVhY2goc2xpZGVJdGVtc1tzdGFydF0ucXVlcnlTZWxlY3RvckFsbCgnaW1nJyksIGZ1bmN0aW9uIChpbWcpIHsgaW1ncy5wdXNoKGltZyk7IH0pO1xuICAgICAgc3RhcnQrKztcbiAgICB9XG5cbiAgICByZXR1cm4gaW1ncztcbiAgfVxuXG4gIC8vIGNoZWNrIGlmIGFsbCB2aXNpYmxlIGltYWdlcyBhcmUgbG9hZGVkXG4gIC8vIGFuZCB1cGRhdGUgY29udGFpbmVyIGhlaWdodCBpZiBpdCdzIGRvbmVcbiAgZnVuY3Rpb24gZG9BdXRvSGVpZ2h0ICgpIHtcbiAgICB2YXIgaW1ncyA9IGdldEltYWdlQXJyYXkuYXBwbHkobnVsbCwgZ2V0VmlzaWJsZVNsaWRlUmFuZ2UoKSk7XG4gICAgcmFmKGZ1bmN0aW9uKCl7IGltZ3NMb2FkZWRDaGVjayhpbWdzLCB1cGRhdGVJbm5lcldyYXBwZXJIZWlnaHQpOyB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGltZ3NMb2FkZWRDaGVjayAoaW1ncywgY2IpIHtcbiAgICAvLyBkaXJlY3RseSBleGVjdXRlIGNhbGxiYWNrIGZ1bmN0aW9uIGlmIGFsbCBpbWFnZXMgYXJlIGNvbXBsZXRlXG4gICAgaWYgKGltZ3NDb21wbGV0ZSkgeyByZXR1cm4gY2IoKTsgfVxuXG4gICAgLy8gY2hlY2sgc2VsZWN0ZWQgaW1hZ2UgY2xhc3NlcyBvdGhlcndpc2VcbiAgICBpbWdzLmZvckVhY2goZnVuY3Rpb24gKGltZywgaW5kZXgpIHtcbiAgICAgIGlmIChoYXNDbGFzcyhpbWcsIGltZ0NvbXBsZXRlQ2xhc3MpKSB7IGltZ3Muc3BsaWNlKGluZGV4LCAxKTsgfVxuICAgIH0pO1xuXG4gICAgLy8gZXhlY3V0ZSBjYWxsYmFjayBmdW5jdGlvbiBpZiBzZWxlY3RlZCBpbWFnZXMgYXJlIGFsbCBjb21wbGV0ZVxuICAgIGlmICghaW1ncy5sZW5ndGgpIHsgcmV0dXJuIGNiKCk7IH1cblxuICAgIC8vIG90aGVyd2lzZSBleGVjdXRlIHRoaXMgZnVuY3Rpb25hIGFnYWluXG4gICAgcmFmKGZ1bmN0aW9uKCl7IGltZ3NMb2FkZWRDaGVjayhpbWdzLCBjYik7IH0pO1xuICB9IFxuXG4gIGZ1bmN0aW9uIGFkZGl0aW9uYWxVcGRhdGVzICgpIHtcbiAgICBkb0xhenlMb2FkKCk7IFxuICAgIHVwZGF0ZVNsaWRlU3RhdHVzKCk7XG4gICAgdXBkYXRlTGl2ZVJlZ2lvbigpO1xuICAgIHVwZGF0ZUNvbnRyb2xzU3RhdHVzKCk7XG4gICAgdXBkYXRlTmF2U3RhdHVzKCk7XG4gIH1cblxuXG4gIGZ1bmN0aW9uIHVwZGF0ZV9jYXJvdXNlbF90cmFuc2l0aW9uX2R1cmF0aW9uICgpIHtcbiAgICBpZiAoY2Fyb3VzZWwgJiYgYXV0b0hlaWdodCkge1xuICAgICAgbWlkZGxlV3JhcHBlci5zdHlsZVtUUkFOU0lUSU9ORFVSQVRJT05dID0gc3BlZWQgLyAxMDAwICsgJ3MnO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGdldE1heFNsaWRlSGVpZ2h0IChzbGlkZVN0YXJ0LCBzbGlkZVJhbmdlKSB7XG4gICAgdmFyIGhlaWdodHMgPSBbXTtcbiAgICBmb3IgKHZhciBpID0gc2xpZGVTdGFydCwgbCA9IE1hdGgubWluKHNsaWRlU3RhcnQgKyBzbGlkZVJhbmdlLCBzbGlkZUNvdW50TmV3KTsgaSA8IGw7IGkrKykge1xuICAgICAgaGVpZ2h0cy5wdXNoKHNsaWRlSXRlbXNbaV0ub2Zmc2V0SGVpZ2h0KTtcbiAgICB9XG5cbiAgICByZXR1cm4gTWF0aC5tYXguYXBwbHkobnVsbCwgaGVpZ2h0cyk7XG4gIH1cblxuICAvLyB1cGRhdGUgaW5uZXIgd3JhcHBlciBoZWlnaHRcbiAgLy8gMS4gZ2V0IHRoZSBtYXgtaGVpZ2h0IG9mIHRoZSB2aXNpYmxlIHNsaWRlc1xuICAvLyAyLiBzZXQgdHJhbnNpdGlvbkR1cmF0aW9uIHRvIHNwZWVkXG4gIC8vIDMuIHVwZGF0ZSBpbm5lciB3cmFwcGVyIGhlaWdodCB0byBtYXgtaGVpZ2h0XG4gIC8vIDQuIHNldCB0cmFuc2l0aW9uRHVyYXRpb24gdG8gMHMgYWZ0ZXIgdHJhbnNpdGlvbiBkb25lXG4gIGZ1bmN0aW9uIHVwZGF0ZUlubmVyV3JhcHBlckhlaWdodCAoKSB7XG4gICAgdmFyIG1heEhlaWdodCA9IGF1dG9IZWlnaHQgPyBnZXRNYXhTbGlkZUhlaWdodChpbmRleCwgaXRlbXMpIDogZ2V0TWF4U2xpZGVIZWlnaHQoY2xvbmVDb3VudCwgc2xpZGVDb3VudCksXG4gICAgICAgIHdwID0gbWlkZGxlV3JhcHBlciA/IG1pZGRsZVdyYXBwZXIgOiBpbm5lcldyYXBwZXI7XG5cbiAgICBpZiAod3Auc3R5bGUuaGVpZ2h0ICE9PSBtYXhIZWlnaHQpIHsgd3Auc3R5bGUuaGVpZ2h0ID0gbWF4SGVpZ2h0ICsgJ3B4JzsgfVxuICB9XG5cbiAgLy8gZ2V0IHRoZSBkaXN0YW5jZSBmcm9tIHRoZSB0b3AgZWRnZSBvZiB0aGUgZmlyc3Qgc2xpZGUgdG8gZWFjaCBzbGlkZVxuICAvLyAoaW5pdCkgPT4gc2xpZGVQb3NpdGlvbnNcbiAgZnVuY3Rpb24gc2V0U2xpZGVQb3NpdGlvbnMgKCkge1xuICAgIHNsaWRlUG9zaXRpb25zID0gWzBdO1xuICAgIHZhciBhdHRyID0gaG9yaXpvbnRhbCA/ICdsZWZ0JyA6ICd0b3AnLFxuICAgICAgICBhdHRyMiA9IGhvcml6b250YWwgPyAncmlnaHQnIDogJ2JvdHRvbScsXG4gICAgICAgIGJhc2UgPSBzbGlkZUl0ZW1zWzBdLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpW2F0dHJdO1xuXG4gICAgZm9yRWFjaChzbGlkZUl0ZW1zLCBmdW5jdGlvbihpdGVtLCBpKSB7XG4gICAgICAvLyBza2lwIHRoZSBmaXJzdCBzbGlkZVxuICAgICAgaWYgKGkpIHsgc2xpZGVQb3NpdGlvbnMucHVzaChpdGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpW2F0dHJdIC0gYmFzZSk7IH1cbiAgICAgIC8vIGFkZCB0aGUgZW5kIGVkZ2VcbiAgICAgIGlmIChpID09PSBzbGlkZUNvdW50TmV3IC0gMSkgeyBzbGlkZVBvc2l0aW9ucy5wdXNoKGl0ZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KClbYXR0cjJdIC0gYmFzZSk7IH1cbiAgICB9KTtcbiAgfVxuXG4gIC8vIHVwZGF0ZSBzbGlkZVxuICBmdW5jdGlvbiB1cGRhdGVTbGlkZVN0YXR1cyAoKSB7XG4gICAgdmFyIHJhbmdlID0gZ2V0VmlzaWJsZVNsaWRlUmFuZ2UoKSxcbiAgICAgICAgc3RhcnQgPSByYW5nZVswXSxcbiAgICAgICAgZW5kID0gcmFuZ2VbMV07XG5cbiAgICBmb3JFYWNoKHNsaWRlSXRlbXMsIGZ1bmN0aW9uKGl0ZW0sIGkpIHtcbiAgICAgIC8vIHNob3cgc2xpZGVzXG4gICAgICBpZiAoaSA+PSBzdGFydCAmJiBpIDw9IGVuZCkge1xuICAgICAgICBpZiAoaGFzQXR0cihpdGVtLCAnYXJpYS1oaWRkZW4nKSkge1xuICAgICAgICAgIHJlbW92ZUF0dHJzKGl0ZW0sIFsnYXJpYS1oaWRkZW4nLCAndGFiaW5kZXgnXSk7XG4gICAgICAgICAgYWRkQ2xhc3MoaXRlbSwgc2xpZGVBY3RpdmVDbGFzcyk7XG4gICAgICAgIH1cbiAgICAgIC8vIGhpZGUgc2xpZGVzXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoIWhhc0F0dHIoaXRlbSwgJ2FyaWEtaGlkZGVuJykpIHtcbiAgICAgICAgICBzZXRBdHRycyhpdGVtLCB7XG4gICAgICAgICAgICAnYXJpYS1oaWRkZW4nOiAndHJ1ZScsXG4gICAgICAgICAgICAndGFiaW5kZXgnOiAnLTEnXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgcmVtb3ZlQ2xhc3MoaXRlbSwgc2xpZGVBY3RpdmVDbGFzcyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIC8vIGdhbGxlcnk6IHVwZGF0ZSBzbGlkZSBwb3NpdGlvblxuICBmdW5jdGlvbiB1cGRhdGVHYWxsZXJ5U2xpZGVQb3NpdGlvbnMgKCkge1xuICAgIHZhciBsID0gaW5kZXggKyBNYXRoLm1pbihzbGlkZUNvdW50LCBpdGVtcyk7XG4gICAgZm9yICh2YXIgaSA9IHNsaWRlQ291bnROZXc7IGktLTspIHtcbiAgICAgIHZhciBpdGVtID0gc2xpZGVJdGVtc1tpXTtcblxuICAgICAgaWYgKGkgPj0gaW5kZXggJiYgaSA8IGwpIHtcbiAgICAgICAgLy8gYWRkIHRyYW5zaXRpb25zIHRvIHZpc2libGUgc2xpZGVzIHdoZW4gYWRqdXN0aW5nIHRoZWlyIHBvc2l0aW9uc1xuICAgICAgICBhZGRDbGFzcyhpdGVtLCAndG5zLW1vdmluZycpO1xuXG4gICAgICAgIGl0ZW0uc3R5bGUubGVmdCA9IChpIC0gaW5kZXgpICogMTAwIC8gaXRlbXMgKyAnJSc7XG4gICAgICAgIGFkZENsYXNzKGl0ZW0sIGFuaW1hdGVJbik7XG4gICAgICAgIHJlbW92ZUNsYXNzKGl0ZW0sIGFuaW1hdGVOb3JtYWwpO1xuICAgICAgfSBlbHNlIGlmIChpdGVtLnN0eWxlLmxlZnQpIHtcbiAgICAgICAgaXRlbS5zdHlsZS5sZWZ0ID0gJyc7XG4gICAgICAgIGFkZENsYXNzKGl0ZW0sIGFuaW1hdGVOb3JtYWwpO1xuICAgICAgICByZW1vdmVDbGFzcyhpdGVtLCBhbmltYXRlSW4pO1xuICAgICAgfVxuXG4gICAgICAvLyByZW1vdmUgb3V0bGV0IGFuaW1hdGlvblxuICAgICAgcmVtb3ZlQ2xhc3MoaXRlbSwgYW5pbWF0ZU91dCk7XG4gICAgfVxuXG4gICAgLy8gcmVtb3ZpbmcgJy50bnMtbW92aW5nJ1xuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICBmb3JFYWNoKHNsaWRlSXRlbXMsIGZ1bmN0aW9uKGVsKSB7XG4gICAgICAgIHJlbW92ZUNsYXNzKGVsLCAndG5zLW1vdmluZycpO1xuICAgICAgfSk7XG4gICAgfSwgMzAwKTtcbiAgfVxuXG4gIC8vIHNldCB0YWJpbmRleCBvbiBOYXZcbiAgZnVuY3Rpb24gdXBkYXRlTmF2U3RhdHVzICgpIHtcbiAgICAvLyBnZXQgY3VycmVudCBuYXZcbiAgICBpZiAobmF2KSB7XG4gICAgICBuYXZDdXJyZW50SW5kZXggPSBuYXZDbGlja2VkID49IDAgPyBuYXZDbGlja2VkIDogZ2V0Q3VycmVudE5hdkluZGV4KCk7XG4gICAgICBuYXZDbGlja2VkID0gLTE7XG5cbiAgICAgIGlmIChuYXZDdXJyZW50SW5kZXggIT09IG5hdkN1cnJlbnRJbmRleENhY2hlZCkge1xuICAgICAgICB2YXIgbmF2UHJldiA9IG5hdkl0ZW1zW25hdkN1cnJlbnRJbmRleENhY2hlZF0sXG4gICAgICAgICAgICBuYXZDdXJyZW50ID0gbmF2SXRlbXNbbmF2Q3VycmVudEluZGV4XTtcblxuICAgICAgICBzZXRBdHRycyhuYXZQcmV2LCB7XG4gICAgICAgICAgJ3RhYmluZGV4JzogJy0xJyxcbiAgICAgICAgICAnYXJpYS1sYWJlbCc6IG5hdlN0ciArIChuYXZDdXJyZW50SW5kZXhDYWNoZWQgKyAxKVxuICAgICAgICB9KTtcbiAgICAgICAgcmVtb3ZlQ2xhc3MobmF2UHJldiwgbmF2QWN0aXZlQ2xhc3MpO1xuICAgICAgICBcbiAgICAgICAgc2V0QXR0cnMobmF2Q3VycmVudCwgeydhcmlhLWxhYmVsJzogbmF2U3RyICsgKG5hdkN1cnJlbnRJbmRleCArIDEpICsgbmF2U3RyQ3VycmVudH0pO1xuICAgICAgICByZW1vdmVBdHRycyhuYXZDdXJyZW50LCAndGFiaW5kZXgnKTtcbiAgICAgICAgYWRkQ2xhc3MobmF2Q3VycmVudCwgbmF2QWN0aXZlQ2xhc3MpO1xuXG4gICAgICAgIG5hdkN1cnJlbnRJbmRleENhY2hlZCA9IG5hdkN1cnJlbnRJbmRleDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBnZXRMb3dlckNhc2VOb2RlTmFtZSAoZWwpIHtcbiAgICByZXR1cm4gZWwubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGlzQnV0dG9uIChlbCkge1xuICAgIHJldHVybiBnZXRMb3dlckNhc2VOb2RlTmFtZShlbCkgPT09ICdidXR0b24nO1xuICB9XG5cbiAgZnVuY3Rpb24gaXNBcmlhRGlzYWJsZWQgKGVsKSB7XG4gICAgcmV0dXJuIGVsLmdldEF0dHJpYnV0ZSgnYXJpYS1kaXNhYmxlZCcpID09PSAndHJ1ZSc7XG4gIH1cblxuICBmdW5jdGlvbiBkaXNFbmFibGVFbGVtZW50IChpc0J1dHRvbiwgZWwsIHZhbCkge1xuICAgIGlmIChpc0J1dHRvbikge1xuICAgICAgZWwuZGlzYWJsZWQgPSB2YWw7XG4gICAgfSBlbHNlIHtcbiAgICAgIGVsLnNldEF0dHJpYnV0ZSgnYXJpYS1kaXNhYmxlZCcsIHZhbC50b1N0cmluZygpKTtcbiAgICB9XG4gIH1cblxuICAvLyBzZXQgJ2Rpc2FibGVkJyB0byB0cnVlIG9uIGNvbnRyb2xzIHdoZW4gcmVhY2ggdGhlIGVkZ2VzXG4gIGZ1bmN0aW9uIHVwZGF0ZUNvbnRyb2xzU3RhdHVzICgpIHtcbiAgICBpZiAoIWNvbnRyb2xzIHx8IHJld2luZCB8fCBsb29wKSB7IHJldHVybjsgfVxuXG4gICAgdmFyIHByZXZEaXNhYmxlZCA9IChwcmV2SXNCdXR0b24pID8gcHJldkJ1dHRvbi5kaXNhYmxlZCA6IGlzQXJpYURpc2FibGVkKHByZXZCdXR0b24pLFxuICAgICAgICBuZXh0RGlzYWJsZWQgPSAobmV4dElzQnV0dG9uKSA/IG5leHRCdXR0b24uZGlzYWJsZWQgOiBpc0FyaWFEaXNhYmxlZChuZXh0QnV0dG9uKSxcbiAgICAgICAgZGlzYWJsZVByZXYgPSAoaW5kZXggPD0gaW5kZXhNaW4pID8gdHJ1ZSA6IGZhbHNlLFxuICAgICAgICBkaXNhYmxlTmV4dCA9ICghcmV3aW5kICYmIGluZGV4ID49IGluZGV4TWF4KSA/IHRydWUgOiBmYWxzZTtcblxuICAgIGlmIChkaXNhYmxlUHJldiAmJiAhcHJldkRpc2FibGVkKSB7XG4gICAgICBkaXNFbmFibGVFbGVtZW50KHByZXZJc0J1dHRvbiwgcHJldkJ1dHRvbiwgdHJ1ZSk7XG4gICAgfVxuICAgIGlmICghZGlzYWJsZVByZXYgJiYgcHJldkRpc2FibGVkKSB7XG4gICAgICBkaXNFbmFibGVFbGVtZW50KHByZXZJc0J1dHRvbiwgcHJldkJ1dHRvbiwgZmFsc2UpO1xuICAgIH1cbiAgICBpZiAoZGlzYWJsZU5leHQgJiYgIW5leHREaXNhYmxlZCkge1xuICAgICAgZGlzRW5hYmxlRWxlbWVudChuZXh0SXNCdXR0b24sIG5leHRCdXR0b24sIHRydWUpO1xuICAgIH1cbiAgICBpZiAoIWRpc2FibGVOZXh0ICYmIG5leHREaXNhYmxlZCkge1xuICAgICAgZGlzRW5hYmxlRWxlbWVudChuZXh0SXNCdXR0b24sIG5leHRCdXR0b24sIGZhbHNlKTtcbiAgICB9XG4gIH1cblxuICAvLyBzZXQgZHVyYXRpb25cbiAgZnVuY3Rpb24gcmVzZXREdXJhdGlvbiAoZWwsIHN0cikge1xuICAgIGlmIChUUkFOU0lUSU9ORFVSQVRJT04pIHsgZWwuc3R5bGVbVFJBTlNJVElPTkRVUkFUSU9OXSA9IHN0cjsgfVxuICB9XG5cbiAgZnVuY3Rpb24gZ2V0U2xpZGVyV2lkdGggKCkge1xuICAgIHJldHVybiBmaXhlZFdpZHRoID8gKGZpeGVkV2lkdGggKyBndXR0ZXIpICogc2xpZGVDb3VudE5ldyA6IHNsaWRlUG9zaXRpb25zW3NsaWRlQ291bnROZXddO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0Q2VudGVyR2FwIChudW0pIHtcbiAgICBpZiAobnVtID09IG51bGwpIHsgbnVtID0gaW5kZXg7IH1cblxuICAgIHZhciBnYXAgPSBlZGdlUGFkZGluZyA/IGd1dHRlciA6IDA7XG4gICAgcmV0dXJuIGF1dG9XaWR0aCA/ICgodmlld3BvcnQgLSBnYXApIC0gKHNsaWRlUG9zaXRpb25zW251bSArIDFdIC0gc2xpZGVQb3NpdGlvbnNbbnVtXSAtIGd1dHRlcikpLzIgOlxuICAgICAgZml4ZWRXaWR0aCA/ICh2aWV3cG9ydCAtIGZpeGVkV2lkdGgpIC8gMiA6XG4gICAgICAgIChpdGVtcyAtIDEpIC8gMjtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldFJpZ2h0Qm91bmRhcnkgKCkge1xuICAgIHZhciBnYXAgPSBlZGdlUGFkZGluZyA/IGd1dHRlciA6IDAsXG4gICAgICAgIHJlc3VsdCA9ICh2aWV3cG9ydCArIGdhcCkgLSBnZXRTbGlkZXJXaWR0aCgpO1xuXG4gICAgaWYgKGNlbnRlciAmJiAhbG9vcCkge1xuICAgICAgcmVzdWx0ID0gZml4ZWRXaWR0aCA/IC0gKGZpeGVkV2lkdGggKyBndXR0ZXIpICogKHNsaWRlQ291bnROZXcgLSAxKSAtIGdldENlbnRlckdhcCgpIDpcbiAgICAgICAgZ2V0Q2VudGVyR2FwKHNsaWRlQ291bnROZXcgLSAxKSAtIHNsaWRlUG9zaXRpb25zW3NsaWRlQ291bnROZXcgLSAxXTtcbiAgICB9XG4gICAgaWYgKHJlc3VsdCA+IDApIHsgcmVzdWx0ID0gMDsgfVxuXG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldENvbnRhaW5lclRyYW5zZm9ybVZhbHVlIChudW0pIHtcbiAgICBpZiAobnVtID09IG51bGwpIHsgbnVtID0gaW5kZXg7IH1cblxuICAgIHZhciB2YWw7XG4gICAgaWYgKGhvcml6b250YWwgJiYgIWF1dG9XaWR0aCkge1xuICAgICAgaWYgKGZpeGVkV2lkdGgpIHtcbiAgICAgICAgdmFsID0gLSAoZml4ZWRXaWR0aCArIGd1dHRlcikgKiBudW07XG4gICAgICAgIGlmIChjZW50ZXIpIHsgdmFsICs9IGdldENlbnRlckdhcCgpOyB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgZGVub21pbmF0b3IgPSBUUkFOU0ZPUk0gPyBzbGlkZUNvdW50TmV3IDogaXRlbXM7XG4gICAgICAgIGlmIChjZW50ZXIpIHsgbnVtIC09IGdldENlbnRlckdhcCgpOyB9XG4gICAgICAgIHZhbCA9IC0gbnVtICogMTAwIC8gZGVub21pbmF0b3I7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhbCA9IC0gc2xpZGVQb3NpdGlvbnNbbnVtXTtcbiAgICAgIGlmIChjZW50ZXIgJiYgYXV0b1dpZHRoKSB7XG4gICAgICAgIHZhbCArPSBnZXRDZW50ZXJHYXAoKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoaGFzUmlnaHREZWFkWm9uZSkgeyB2YWwgPSBNYXRoLm1heCh2YWwsIHJpZ2h0Qm91bmRhcnkpOyB9XG5cbiAgICB2YWwgKz0gKGhvcml6b250YWwgJiYgIWF1dG9XaWR0aCAmJiAhZml4ZWRXaWR0aCkgPyAnJScgOiAncHgnO1xuXG4gICAgcmV0dXJuIHZhbDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGRvQ29udGFpbmVyVHJhbnNmb3JtU2lsZW50ICh2YWwpIHtcbiAgICByZXNldER1cmF0aW9uKGNvbnRhaW5lciwgJzBzJyk7XG4gICAgZG9Db250YWluZXJUcmFuc2Zvcm0odmFsKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGRvQ29udGFpbmVyVHJhbnNmb3JtICh2YWwpIHtcbiAgICBpZiAodmFsID09IG51bGwpIHsgdmFsID0gZ2V0Q29udGFpbmVyVHJhbnNmb3JtVmFsdWUoKTsgfVxuICAgIGNvbnRhaW5lci5zdHlsZVt0cmFuc2Zvcm1BdHRyXSA9IHRyYW5zZm9ybVByZWZpeCArIHZhbCArIHRyYW5zZm9ybVBvc3RmaXg7XG4gIH1cblxuICBmdW5jdGlvbiBhbmltYXRlU2xpZGUgKG51bWJlciwgY2xhc3NPdXQsIGNsYXNzSW4sIGlzT3V0KSB7XG4gICAgdmFyIGwgPSBudW1iZXIgKyBpdGVtcztcbiAgICBpZiAoIWxvb3ApIHsgbCA9IE1hdGgubWluKGwsIHNsaWRlQ291bnROZXcpOyB9XG5cbiAgICBmb3IgKHZhciBpID0gbnVtYmVyOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIHZhciBpdGVtID0gc2xpZGVJdGVtc1tpXTtcblxuICAgICAgLy8gc2V0IGl0ZW0gcG9zaXRpb25zXG4gICAgICBpZiAoIWlzT3V0KSB7IGl0ZW0uc3R5bGUubGVmdCA9IChpIC0gaW5kZXgpICogMTAwIC8gaXRlbXMgKyAnJSc7IH1cblxuICAgICAgaWYgKGFuaW1hdGVEZWxheSAmJiBUUkFOU0lUSU9OREVMQVkpIHtcbiAgICAgICAgaXRlbS5zdHlsZVtUUkFOU0lUSU9OREVMQVldID0gaXRlbS5zdHlsZVtBTklNQVRJT05ERUxBWV0gPSBhbmltYXRlRGVsYXkgKiAoaSAtIG51bWJlcikgLyAxMDAwICsgJ3MnO1xuICAgICAgfVxuICAgICAgcmVtb3ZlQ2xhc3MoaXRlbSwgY2xhc3NPdXQpO1xuICAgICAgYWRkQ2xhc3MoaXRlbSwgY2xhc3NJbik7XG4gICAgICBcbiAgICAgIGlmIChpc091dCkgeyBzbGlkZUl0ZW1zT3V0LnB1c2goaXRlbSk7IH1cbiAgICB9XG4gIH1cblxuICAvLyBtYWtlIHRyYW5zZmVyIGFmdGVyIGNsaWNrL2RyYWc6XG4gIC8vIDEuIGNoYW5nZSAndHJhbnNmb3JtJyBwcm9wZXJ0eSBmb3IgbW9yZGVybiBicm93c2Vyc1xuICAvLyAyLiBjaGFuZ2UgJ2xlZnQnIHByb3BlcnR5IGZvciBsZWdhY3kgYnJvd3NlcnNcbiAgdmFyIHRyYW5zZm9ybUNvcmUgPSAoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBjYXJvdXNlbCA/XG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJlc2V0RHVyYXRpb24oY29udGFpbmVyLCAnJyk7XG4gICAgICAgIGlmIChUUkFOU0lUSU9ORFVSQVRJT04gfHwgIXNwZWVkKSB7XG4gICAgICAgICAgLy8gZm9yIG1vcmRlbiBicm93c2VycyB3aXRoIG5vbi16ZXJvIGR1cmF0aW9uIG9yIFxuICAgICAgICAgIC8vIHplcm8gZHVyYXRpb24gZm9yIGFsbCBicm93c2Vyc1xuICAgICAgICAgIGRvQ29udGFpbmVyVHJhbnNmb3JtKCk7XG4gICAgICAgICAgLy8gcnVuIGZhbGxiYWNrIGZ1bmN0aW9uIG1hbnVhbGx5IFxuICAgICAgICAgIC8vIHdoZW4gZHVyYXRpb24gaXMgMCAvIGNvbnRhaW5lciBpcyBoaWRkZW5cbiAgICAgICAgICBpZiAoIXNwZWVkIHx8ICFpc1Zpc2libGUoY29udGFpbmVyKSkgeyBvblRyYW5zaXRpb25FbmQoKTsgfVxuXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gZm9yIG9sZCBicm93c2VyIHdpdGggbm9uLXplcm8gZHVyYXRpb25cbiAgICAgICAgICBqc1RyYW5zZm9ybShjb250YWluZXIsIHRyYW5zZm9ybUF0dHIsIHRyYW5zZm9ybVByZWZpeCwgdHJhbnNmb3JtUG9zdGZpeCwgZ2V0Q29udGFpbmVyVHJhbnNmb3JtVmFsdWUoKSwgc3BlZWQsIG9uVHJhbnNpdGlvbkVuZCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIWhvcml6b250YWwpIHsgdXBkYXRlQ29udGVudFdyYXBwZXJIZWlnaHQoKTsgfVxuICAgICAgfSA6XG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHNsaWRlSXRlbXNPdXQgPSBbXTtcblxuICAgICAgICB2YXIgZXZlID0ge307XG4gICAgICAgIGV2ZVtUUkFOU0lUSU9ORU5EXSA9IGV2ZVtBTklNQVRJT05FTkRdID0gb25UcmFuc2l0aW9uRW5kO1xuICAgICAgICByZW1vdmVFdmVudHMoc2xpZGVJdGVtc1tpbmRleENhY2hlZF0sIGV2ZSk7XG4gICAgICAgIGFkZEV2ZW50cyhzbGlkZUl0ZW1zW2luZGV4XSwgZXZlKTtcblxuICAgICAgICBhbmltYXRlU2xpZGUoaW5kZXhDYWNoZWQsIGFuaW1hdGVJbiwgYW5pbWF0ZU91dCwgdHJ1ZSk7XG4gICAgICAgIGFuaW1hdGVTbGlkZShpbmRleCwgYW5pbWF0ZU5vcm1hbCwgYW5pbWF0ZUluKTtcblxuICAgICAgICAvLyBydW4gZmFsbGJhY2sgZnVuY3Rpb24gbWFudWFsbHkgXG4gICAgICAgIC8vIHdoZW4gdHJhbnNpdGlvbiBvciBhbmltYXRpb24gbm90IHN1cHBvcnRlZCAvIGR1cmF0aW9uIGlzIDBcbiAgICAgICAgaWYgKCFUUkFOU0lUSU9ORU5EIHx8ICFBTklNQVRJT05FTkQgfHwgIXNwZWVkIHx8ICFpc1Zpc2libGUoY29udGFpbmVyKSkgeyBvblRyYW5zaXRpb25FbmQoKTsgfVxuICAgICAgfTtcbiAgfSkoKTtcblxuICBmdW5jdGlvbiByZW5kZXIgKGUsIHNsaWRlck1vdmVkKSB7XG4gICAgaWYgKHVwZGF0ZUluZGV4QmVmb3JlVHJhbnNmb3JtKSB7IHVwZGF0ZUluZGV4KCk7IH1cblxuICAgIC8vIHJlbmRlciB3aGVuIHNsaWRlciB3YXMgbW92ZWQgKHRvdWNoIG9yIGRyYWcpIGV2ZW4gdGhvdWdoIGluZGV4IG1heSBub3QgY2hhbmdlXG4gICAgaWYgKGluZGV4ICE9PSBpbmRleENhY2hlZCB8fCBzbGlkZXJNb3ZlZCkge1xuICAgICAgLy8gZXZlbnRzXG4gICAgICBldmVudHMuZW1pdCgnaW5kZXhDaGFuZ2VkJywgaW5mbygpKTtcbiAgICAgIGV2ZW50cy5lbWl0KCd0cmFuc2l0aW9uU3RhcnQnLCBpbmZvKCkpO1xuICAgICAgaWYgKGF1dG9IZWlnaHQpIHsgZG9BdXRvSGVpZ2h0KCk7IH1cblxuICAgICAgLy8gcGF1c2UgYXV0b3BsYXkgd2hlbiBjbGljayBvciBrZXlkb3duIGZyb20gdXNlclxuICAgICAgaWYgKGFuaW1hdGluZyAmJiBlICYmIFsnY2xpY2snLCAna2V5ZG93biddLmluZGV4T2YoZS50eXBlKSA+PSAwKSB7IHN0b3BBdXRvcGxheSgpOyB9XG5cbiAgICAgIHJ1bm5pbmcgPSB0cnVlO1xuICAgICAgdHJhbnNmb3JtQ29yZSgpO1xuICAgIH1cbiAgfVxuXG4gIC8qXG4gICAqIFRyYW5zZmVyIHByZWZpeGVkIHByb3BlcnRpZXMgdG8gdGhlIHNhbWUgZm9ybWF0XG4gICAqIENTUzogLVdlYmtpdC1UcmFuc2Zvcm0gPT4gd2Via2l0dHJhbnNmb3JtXG4gICAqIEpTOiBXZWJraXRUcmFuc2Zvcm0gPT4gd2Via2l0dHJhbnNmb3JtXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBzdHIgLSBwcm9wZXJ0eVxuICAgKlxuICAgKi9cbiAgZnVuY3Rpb24gc3RyVHJhbnMgKHN0cikge1xuICAgIHJldHVybiBzdHIudG9Mb3dlckNhc2UoKS5yZXBsYWNlKC8tL2csICcnKTtcbiAgfVxuXG4gIC8vIEFGVEVSIFRSQU5TRk9STVxuICAvLyBUaGluZ3MgbmVlZCB0byBiZSBkb25lIGFmdGVyIGEgdHJhbnNmZXI6XG4gIC8vIDEuIGNoZWNrIGluZGV4XG4gIC8vIDIuIGFkZCBjbGFzc2VzIHRvIHZpc2libGUgc2xpZGVcbiAgLy8gMy4gZGlzYWJsZSBjb250cm9scyBidXR0b25zIHdoZW4gcmVhY2ggdGhlIGZpcnN0L2xhc3Qgc2xpZGUgaW4gbm9uLWxvb3Agc2xpZGVyXG4gIC8vIDQuIHVwZGF0ZSBuYXYgc3RhdHVzXG4gIC8vIDUuIGxhenlsb2FkIGltYWdlc1xuICAvLyA2LiB1cGRhdGUgY29udGFpbmVyIGhlaWdodFxuICBmdW5jdGlvbiBvblRyYW5zaXRpb25FbmQgKGV2ZW50KSB7XG4gICAgLy8gY2hlY2sgcnVubmluZyBvbiBnYWxsZXJ5IG1vZGVcbiAgICAvLyBtYWtlIHN1cmUgdHJhbnRpb25lbmQvYW5pbWF0aW9uZW5kIGV2ZW50cyBydW4gb25seSBvbmNlXG4gICAgaWYgKGNhcm91c2VsIHx8IHJ1bm5pbmcpIHtcbiAgICAgIGV2ZW50cy5lbWl0KCd0cmFuc2l0aW9uRW5kJywgaW5mbyhldmVudCkpO1xuXG4gICAgICBpZiAoIWNhcm91c2VsICYmIHNsaWRlSXRlbXNPdXQubGVuZ3RoID4gMCkge1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNsaWRlSXRlbXNPdXQubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICB2YXIgaXRlbSA9IHNsaWRlSXRlbXNPdXRbaV07XG4gICAgICAgICAgLy8gc2V0IGl0ZW0gcG9zaXRpb25zXG4gICAgICAgICAgaXRlbS5zdHlsZS5sZWZ0ID0gJyc7XG5cbiAgICAgICAgICBpZiAoQU5JTUFUSU9OREVMQVkgJiYgVFJBTlNJVElPTkRFTEFZKSB7IFxuICAgICAgICAgICAgaXRlbS5zdHlsZVtBTklNQVRJT05ERUxBWV0gPSAnJztcbiAgICAgICAgICAgIGl0ZW0uc3R5bGVbVFJBTlNJVElPTkRFTEFZXSA9ICcnO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZW1vdmVDbGFzcyhpdGVtLCBhbmltYXRlT3V0KTtcbiAgICAgICAgICBhZGRDbGFzcyhpdGVtLCBhbmltYXRlTm9ybWFsKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvKiB1cGRhdGUgc2xpZGVzLCBuYXYsIGNvbnRyb2xzIGFmdGVyIGNoZWNraW5nIC4uLlxuICAgICAgICogPT4gbGVnYWN5IGJyb3dzZXJzIHdobyBkb24ndCBzdXBwb3J0ICdldmVudCcgXG4gICAgICAgKiAgICBoYXZlIHRvIGNoZWNrIGV2ZW50IGZpcnN0LCBvdGhlcndpc2UgZXZlbnQudGFyZ2V0IHdpbGwgY2F1c2UgYW4gZXJyb3IgXG4gICAgICAgKiA9PiBvciAnZ2FsbGVyeScgbW9kZTogXG4gICAgICAgKiAgICsgZXZlbnQgdGFyZ2V0IGlzIHNsaWRlIGl0ZW1cbiAgICAgICAqID0+IG9yICdjYXJvdXNlbCcgbW9kZTogXG4gICAgICAgKiAgICsgZXZlbnQgdGFyZ2V0IGlzIGNvbnRhaW5lciwgXG4gICAgICAgKiAgICsgZXZlbnQucHJvcGVydHkgaXMgdGhlIHNhbWUgd2l0aCB0cmFuc2Zvcm0gYXR0cmlidXRlXG4gICAgICAgKi9cbiAgICAgIGlmICghZXZlbnQgfHwgXG4gICAgICAgICAgIWNhcm91c2VsICYmIGV2ZW50LnRhcmdldC5wYXJlbnROb2RlID09PSBjb250YWluZXIgfHwgXG4gICAgICAgICAgZXZlbnQudGFyZ2V0ID09PSBjb250YWluZXIgJiYgc3RyVHJhbnMoZXZlbnQucHJvcGVydHlOYW1lKSA9PT0gc3RyVHJhbnModHJhbnNmb3JtQXR0cikpIHtcblxuICAgICAgICBpZiAoIXVwZGF0ZUluZGV4QmVmb3JlVHJhbnNmb3JtKSB7IFxuICAgICAgICAgIHZhciBpbmRleFRlbSA9IGluZGV4O1xuICAgICAgICAgIHVwZGF0ZUluZGV4KCk7XG4gICAgICAgICAgaWYgKGluZGV4ICE9PSBpbmRleFRlbSkgeyBcbiAgICAgICAgICAgIGV2ZW50cy5lbWl0KCdpbmRleENoYW5nZWQnLCBpbmZvKCkpO1xuXG4gICAgICAgICAgICBkb0NvbnRhaW5lclRyYW5zZm9ybVNpbGVudCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBcblxuICAgICAgICBpZiAobmVzdGVkID09PSAnaW5uZXInKSB7IGV2ZW50cy5lbWl0KCdpbm5lckxvYWRlZCcsIGluZm8oKSk7IH1cbiAgICAgICAgcnVubmluZyA9IGZhbHNlO1xuICAgICAgICBpbmRleENhY2hlZCA9IGluZGV4O1xuICAgICAgfVxuICAgIH1cblxuICB9XG5cbiAgLy8gIyBBQ1RJT05TXG4gIGZ1bmN0aW9uIGdvVG8gKHRhcmdldEluZGV4LCBlKSB7XG4gICAgaWYgKGZyZWV6ZSkgeyByZXR1cm47IH1cblxuICAgIC8vIHByZXYgc2xpZGVCeVxuICAgIGlmICh0YXJnZXRJbmRleCA9PT0gJ3ByZXYnKSB7XG4gICAgICBvbkNvbnRyb2xzQ2xpY2soZSwgLTEpO1xuXG4gICAgLy8gbmV4dCBzbGlkZUJ5XG4gICAgfSBlbHNlIGlmICh0YXJnZXRJbmRleCA9PT0gJ25leHQnKSB7XG4gICAgICBvbkNvbnRyb2xzQ2xpY2soZSwgMSk7XG5cbiAgICAvLyBnbyB0byBleGFjdCBzbGlkZVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAocnVubmluZykge1xuICAgICAgICBpZiAocHJldmVudEFjdGlvbldoZW5SdW5uaW5nKSB7IHJldHVybjsgfSBlbHNlIHsgb25UcmFuc2l0aW9uRW5kKCk7IH1cbiAgICAgIH1cblxuICAgICAgdmFyIGFic0luZGV4ID0gZ2V0QWJzSW5kZXgoKSwgXG4gICAgICAgICAgaW5kZXhHYXAgPSAwO1xuXG4gICAgICBpZiAodGFyZ2V0SW5kZXggPT09ICdmaXJzdCcpIHtcbiAgICAgICAgaW5kZXhHYXAgPSAtIGFic0luZGV4O1xuICAgICAgfSBlbHNlIGlmICh0YXJnZXRJbmRleCA9PT0gJ2xhc3QnKSB7XG4gICAgICAgIGluZGV4R2FwID0gY2Fyb3VzZWwgPyBzbGlkZUNvdW50IC0gaXRlbXMgLSBhYnNJbmRleCA6IHNsaWRlQ291bnQgLSAxIC0gYWJzSW5kZXg7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAodHlwZW9mIHRhcmdldEluZGV4ICE9PSAnbnVtYmVyJykgeyB0YXJnZXRJbmRleCA9IHBhcnNlSW50KHRhcmdldEluZGV4KTsgfVxuXG4gICAgICAgIGlmICghaXNOYU4odGFyZ2V0SW5kZXgpKSB7XG4gICAgICAgICAgLy8gZnJvbSBkaXJlY3RseSBjYWxsZWQgZ29UbyBmdW5jdGlvblxuICAgICAgICAgIGlmICghZSkgeyB0YXJnZXRJbmRleCA9IE1hdGgubWF4KDAsIE1hdGgubWluKHNsaWRlQ291bnQgLSAxLCB0YXJnZXRJbmRleCkpOyB9XG5cbiAgICAgICAgICBpbmRleEdhcCA9IHRhcmdldEluZGV4IC0gYWJzSW5kZXg7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gZ2FsbGVyeTogbWFrZSBzdXJlIG5ldyBwYWdlIHdvbid0IG92ZXJsYXAgd2l0aCBjdXJyZW50IHBhZ2VcbiAgICAgIGlmICghY2Fyb3VzZWwgJiYgaW5kZXhHYXAgJiYgTWF0aC5hYnMoaW5kZXhHYXApIDwgaXRlbXMpIHtcbiAgICAgICAgdmFyIGZhY3RvciA9IGluZGV4R2FwID4gMCA/IDEgOiAtMTtcbiAgICAgICAgaW5kZXhHYXAgKz0gKGluZGV4ICsgaW5kZXhHYXAgLSBzbGlkZUNvdW50KSA+PSBpbmRleE1pbiA/IHNsaWRlQ291bnQgKiBmYWN0b3IgOiBzbGlkZUNvdW50ICogMiAqIGZhY3RvciAqIC0xO1xuICAgICAgfVxuXG4gICAgICBpbmRleCArPSBpbmRleEdhcDtcblxuICAgICAgLy8gbWFrZSBzdXJlIGluZGV4IGlzIGluIHJhbmdlXG4gICAgICBpZiAoY2Fyb3VzZWwgJiYgbG9vcCkge1xuICAgICAgICBpZiAoaW5kZXggPCBpbmRleE1pbikgeyBpbmRleCArPSBzbGlkZUNvdW50OyB9XG4gICAgICAgIGlmIChpbmRleCA+IGluZGV4TWF4KSB7IGluZGV4IC09IHNsaWRlQ291bnQ7IH1cbiAgICAgIH1cblxuICAgICAgLy8gaWYgaW5kZXggaXMgY2hhbmdlZCwgc3RhcnQgcmVuZGVyaW5nXG4gICAgICBpZiAoZ2V0QWJzSW5kZXgoaW5kZXgpICE9PSBnZXRBYnNJbmRleChpbmRleENhY2hlZCkpIHtcbiAgICAgICAgcmVuZGVyKGUpO1xuICAgICAgfVxuXG4gICAgfVxuICB9XG5cbiAgLy8gb24gY29udHJvbHMgY2xpY2tcbiAgZnVuY3Rpb24gb25Db250cm9sc0NsaWNrIChlLCBkaXIpIHtcbiAgICBpZiAocnVubmluZykge1xuICAgICAgaWYgKHByZXZlbnRBY3Rpb25XaGVuUnVubmluZykgeyByZXR1cm47IH0gZWxzZSB7IG9uVHJhbnNpdGlvbkVuZCgpOyB9XG4gICAgfVxuICAgIHZhciBwYXNzRXZlbnRPYmplY3Q7XG5cbiAgICBpZiAoIWRpcikge1xuICAgICAgZSA9IGdldEV2ZW50KGUpO1xuICAgICAgdmFyIHRhcmdldCA9IGdldFRhcmdldChlKTtcblxuICAgICAgd2hpbGUgKHRhcmdldCAhPT0gY29udHJvbHNDb250YWluZXIgJiYgW3ByZXZCdXR0b24sIG5leHRCdXR0b25dLmluZGV4T2YodGFyZ2V0KSA8IDApIHsgdGFyZ2V0ID0gdGFyZ2V0LnBhcmVudE5vZGU7IH1cblxuICAgICAgdmFyIHRhcmdldEluID0gW3ByZXZCdXR0b24sIG5leHRCdXR0b25dLmluZGV4T2YodGFyZ2V0KTtcbiAgICAgIGlmICh0YXJnZXRJbiA+PSAwKSB7XG4gICAgICAgIHBhc3NFdmVudE9iamVjdCA9IHRydWU7XG4gICAgICAgIGRpciA9IHRhcmdldEluID09PSAwID8gLTEgOiAxO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChyZXdpbmQpIHtcbiAgICAgIGlmIChpbmRleCA9PT0gaW5kZXhNaW4gJiYgZGlyID09PSAtMSkge1xuICAgICAgICBnb1RvKCdsYXN0JywgZSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH0gZWxzZSBpZiAoaW5kZXggPT09IGluZGV4TWF4ICYmIGRpciA9PT0gMSkge1xuICAgICAgICBnb1RvKCdmaXJzdCcsIGUpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGRpcikge1xuICAgICAgaW5kZXggKz0gc2xpZGVCeSAqIGRpcjtcbiAgICAgIGlmIChhdXRvV2lkdGgpIHsgaW5kZXggPSBNYXRoLmZsb29yKGluZGV4KTsgfVxuICAgICAgLy8gcGFzcyBlIHdoZW4gY2xpY2sgY29udHJvbCBidXR0b25zIG9yIGtleWRvd25cbiAgICAgIHJlbmRlcigocGFzc0V2ZW50T2JqZWN0IHx8IChlICYmIGUudHlwZSA9PT0gJ2tleWRvd24nKSkgPyBlIDogbnVsbCk7XG4gICAgfVxuICB9XG5cbiAgLy8gb24gbmF2IGNsaWNrXG4gIGZ1bmN0aW9uIG9uTmF2Q2xpY2sgKGUpIHtcbiAgICBpZiAocnVubmluZykge1xuICAgICAgaWYgKHByZXZlbnRBY3Rpb25XaGVuUnVubmluZykgeyByZXR1cm47IH0gZWxzZSB7IG9uVHJhbnNpdGlvbkVuZCgpOyB9XG4gICAgfVxuICAgIFxuICAgIGUgPSBnZXRFdmVudChlKTtcbiAgICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGUpLCBuYXZJbmRleDtcblxuICAgIC8vIGZpbmQgdGhlIGNsaWNrZWQgbmF2IGl0ZW1cbiAgICB3aGlsZSAodGFyZ2V0ICE9PSBuYXZDb250YWluZXIgJiYgIWhhc0F0dHIodGFyZ2V0LCAnZGF0YS1uYXYnKSkgeyB0YXJnZXQgPSB0YXJnZXQucGFyZW50Tm9kZTsgfVxuICAgIGlmIChoYXNBdHRyKHRhcmdldCwgJ2RhdGEtbmF2JykpIHtcbiAgICAgIHZhciBuYXZJbmRleCA9IG5hdkNsaWNrZWQgPSBOdW1iZXIoZ2V0QXR0cih0YXJnZXQsICdkYXRhLW5hdicpKSxcbiAgICAgICAgICB0YXJnZXRJbmRleEJhc2UgPSBmaXhlZFdpZHRoIHx8IGF1dG9XaWR0aCA/IG5hdkluZGV4ICogc2xpZGVDb3VudCAvIHBhZ2VzIDogbmF2SW5kZXggKiBpdGVtcyxcbiAgICAgICAgICB0YXJnZXRJbmRleCA9IG5hdkFzVGh1bWJuYWlscyA/IG5hdkluZGV4IDogTWF0aC5taW4oTWF0aC5jZWlsKHRhcmdldEluZGV4QmFzZSksIHNsaWRlQ291bnQgLSAxKTtcbiAgICAgIGdvVG8odGFyZ2V0SW5kZXgsIGUpO1xuXG4gICAgICBpZiAobmF2Q3VycmVudEluZGV4ID09PSBuYXZJbmRleCkge1xuICAgICAgICBpZiAoYW5pbWF0aW5nKSB7IHN0b3BBdXRvcGxheSgpOyB9XG4gICAgICAgIG5hdkNsaWNrZWQgPSAtMTsgLy8gcmVzZXQgbmF2Q2xpY2tlZFxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIGF1dG9wbGF5IGZ1bmN0aW9uc1xuICBmdW5jdGlvbiBzZXRBdXRvcGxheVRpbWVyICgpIHtcbiAgICBhdXRvcGxheVRpbWVyID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xuICAgICAgb25Db250cm9sc0NsaWNrKG51bGwsIGF1dG9wbGF5RGlyZWN0aW9uKTtcbiAgICB9LCBhdXRvcGxheVRpbWVvdXQpO1xuXG4gICAgYW5pbWF0aW5nID0gdHJ1ZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHN0b3BBdXRvcGxheVRpbWVyICgpIHtcbiAgICBjbGVhckludGVydmFsKGF1dG9wbGF5VGltZXIpO1xuICAgIGFuaW1hdGluZyA9IGZhbHNlO1xuICB9XG5cbiAgZnVuY3Rpb24gdXBkYXRlQXV0b3BsYXlCdXR0b24gKGFjdGlvbiwgdHh0KSB7XG4gICAgc2V0QXR0cnMoYXV0b3BsYXlCdXR0b24sIHsnZGF0YS1hY3Rpb24nOiBhY3Rpb259KTtcbiAgICBhdXRvcGxheUJ1dHRvbi5pbm5lckhUTUwgPSBhdXRvcGxheUh0bWxTdHJpbmdzWzBdICsgYWN0aW9uICsgYXV0b3BsYXlIdG1sU3RyaW5nc1sxXSArIHR4dDtcbiAgfVxuXG4gIGZ1bmN0aW9uIHN0YXJ0QXV0b3BsYXkgKCkge1xuICAgIHNldEF1dG9wbGF5VGltZXIoKTtcbiAgICBpZiAoYXV0b3BsYXlCdXR0b24pIHsgdXBkYXRlQXV0b3BsYXlCdXR0b24oJ3N0b3AnLCBhdXRvcGxheVRleHRbMV0pOyB9XG4gIH1cblxuICBmdW5jdGlvbiBzdG9wQXV0b3BsYXkgKCkge1xuICAgIHN0b3BBdXRvcGxheVRpbWVyKCk7XG4gICAgaWYgKGF1dG9wbGF5QnV0dG9uKSB7IHVwZGF0ZUF1dG9wbGF5QnV0dG9uKCdzdGFydCcsIGF1dG9wbGF5VGV4dFswXSk7IH1cbiAgfVxuXG4gIC8vIHByb2dyYW1haXRjYWxseSBwbGF5L3BhdXNlIHRoZSBzbGlkZXJcbiAgZnVuY3Rpb24gcGxheSAoKSB7XG4gICAgaWYgKGF1dG9wbGF5ICYmICFhbmltYXRpbmcpIHtcbiAgICAgIHN0YXJ0QXV0b3BsYXkoKTtcbiAgICAgIGF1dG9wbGF5VXNlclBhdXNlZCA9IGZhbHNlO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBwYXVzZSAoKSB7XG4gICAgaWYgKGFuaW1hdGluZykge1xuICAgICAgc3RvcEF1dG9wbGF5KCk7XG4gICAgICBhdXRvcGxheVVzZXJQYXVzZWQgPSB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHRvZ2dsZUF1dG9wbGF5ICgpIHtcbiAgICBpZiAoYW5pbWF0aW5nKSB7XG4gICAgICBzdG9wQXV0b3BsYXkoKTtcbiAgICAgIGF1dG9wbGF5VXNlclBhdXNlZCA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0YXJ0QXV0b3BsYXkoKTtcbiAgICAgIGF1dG9wbGF5VXNlclBhdXNlZCA9IGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIG9uVmlzaWJpbGl0eUNoYW5nZSAoKSB7XG4gICAgaWYgKGRvYy5oaWRkZW4pIHtcbiAgICAgIGlmIChhbmltYXRpbmcpIHtcbiAgICAgICAgc3RvcEF1dG9wbGF5VGltZXIoKTtcbiAgICAgICAgYXV0b3BsYXlWaXNpYmlsaXR5UGF1c2VkID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGF1dG9wbGF5VmlzaWJpbGl0eVBhdXNlZCkge1xuICAgICAgc2V0QXV0b3BsYXlUaW1lcigpO1xuICAgICAgYXV0b3BsYXlWaXNpYmlsaXR5UGF1c2VkID0gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gbW91c2VvdmVyUGF1c2UgKCkge1xuICAgIGlmIChhbmltYXRpbmcpIHsgXG4gICAgICBzdG9wQXV0b3BsYXlUaW1lcigpO1xuICAgICAgYXV0b3BsYXlIb3ZlclBhdXNlZCA9IHRydWU7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gbW91c2VvdXRSZXN0YXJ0ICgpIHtcbiAgICBpZiAoYXV0b3BsYXlIb3ZlclBhdXNlZCkgeyBcbiAgICAgIHNldEF1dG9wbGF5VGltZXIoKTtcbiAgICAgIGF1dG9wbGF5SG92ZXJQYXVzZWQgPSBmYWxzZTtcbiAgICB9XG4gIH1cblxuICAvLyBrZXlkb3duIGV2ZW50cyBvbiBkb2N1bWVudCBcbiAgZnVuY3Rpb24gb25Eb2N1bWVudEtleWRvd24gKGUpIHtcbiAgICBlID0gZ2V0RXZlbnQoZSk7XG4gICAgdmFyIGtleUluZGV4ID0gW0tFWVMuTEVGVCwgS0VZUy5SSUdIVF0uaW5kZXhPZihlLmtleUNvZGUpO1xuXG4gICAgaWYgKGtleUluZGV4ID49IDApIHtcbiAgICAgIG9uQ29udHJvbHNDbGljayhlLCBrZXlJbmRleCA9PT0gMCA/IC0xIDogMSk7XG4gICAgfVxuICB9XG5cbiAgLy8gb24ga2V5IGNvbnRyb2xcbiAgZnVuY3Rpb24gb25Db250cm9sc0tleWRvd24gKGUpIHtcbiAgICBlID0gZ2V0RXZlbnQoZSk7XG4gICAgdmFyIGtleUluZGV4ID0gW0tFWVMuTEVGVCwgS0VZUy5SSUdIVF0uaW5kZXhPZihlLmtleUNvZGUpO1xuXG4gICAgaWYgKGtleUluZGV4ID49IDApIHtcbiAgICAgIGlmIChrZXlJbmRleCA9PT0gMCkge1xuICAgICAgICBpZiAoIXByZXZCdXR0b24uZGlzYWJsZWQpIHsgb25Db250cm9sc0NsaWNrKGUsIC0xKTsgfVxuICAgICAgfSBlbHNlIGlmICghbmV4dEJ1dHRvbi5kaXNhYmxlZCkge1xuICAgICAgICBvbkNvbnRyb2xzQ2xpY2soZSwgMSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gc2V0IGZvY3VzXG4gIGZ1bmN0aW9uIHNldEZvY3VzIChlbCkge1xuICAgIGVsLmZvY3VzKCk7XG4gIH1cblxuICAvLyBvbiBrZXkgbmF2XG4gIGZ1bmN0aW9uIG9uTmF2S2V5ZG93biAoZSkge1xuICAgIGUgPSBnZXRFdmVudChlKTtcbiAgICB2YXIgY3VyRWxlbWVudCA9IGRvYy5hY3RpdmVFbGVtZW50O1xuICAgIGlmICghaGFzQXR0cihjdXJFbGVtZW50LCAnZGF0YS1uYXYnKSkgeyByZXR1cm47IH1cblxuICAgIC8vIHZhciBjb2RlID0gZS5rZXlDb2RlLFxuICAgIHZhciBrZXlJbmRleCA9IFtLRVlTLkxFRlQsIEtFWVMuUklHSFQsIEtFWVMuRU5URVIsIEtFWVMuU1BBQ0VdLmluZGV4T2YoZS5rZXlDb2RlKSxcbiAgICAgICAgbmF2SW5kZXggPSBOdW1iZXIoZ2V0QXR0cihjdXJFbGVtZW50LCAnZGF0YS1uYXYnKSk7XG5cbiAgICBpZiAoa2V5SW5kZXggPj0gMCkge1xuICAgICAgaWYgKGtleUluZGV4ID09PSAwKSB7XG4gICAgICAgIGlmIChuYXZJbmRleCA+IDApIHsgc2V0Rm9jdXMobmF2SXRlbXNbbmF2SW5kZXggLSAxXSk7IH1cbiAgICAgIH0gZWxzZSBpZiAoa2V5SW5kZXggPT09IDEpIHtcbiAgICAgICAgaWYgKG5hdkluZGV4IDwgcGFnZXMgLSAxKSB7IHNldEZvY3VzKG5hdkl0ZW1zW25hdkluZGV4ICsgMV0pOyB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBuYXZDbGlja2VkID0gbmF2SW5kZXg7XG4gICAgICAgIGdvVG8obmF2SW5kZXgsIGUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGdldEV2ZW50IChlKSB7XG4gICAgZSA9IGUgfHwgd2luLmV2ZW50O1xuICAgIHJldHVybiBpc1RvdWNoRXZlbnQoZSkgPyBlLmNoYW5nZWRUb3VjaGVzWzBdIDogZTtcbiAgfVxuICBmdW5jdGlvbiBnZXRUYXJnZXQgKGUpIHtcbiAgICByZXR1cm4gZS50YXJnZXQgfHwgd2luLmV2ZW50LnNyY0VsZW1lbnQ7XG4gIH1cblxuICBmdW5jdGlvbiBpc1RvdWNoRXZlbnQgKGUpIHtcbiAgICByZXR1cm4gZS50eXBlLmluZGV4T2YoJ3RvdWNoJykgPj0gMDtcbiAgfVxuXG4gIGZ1bmN0aW9uIHByZXZlbnREZWZhdWx0QmVoYXZpb3IgKGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0ID8gZS5wcmV2ZW50RGVmYXVsdCgpIDogZS5yZXR1cm5WYWx1ZSA9IGZhbHNlO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0TW92ZURpcmVjdGlvbkV4cGVjdGVkICgpIHtcbiAgICByZXR1cm4gZ2V0VG91Y2hEaXJlY3Rpb24odG9EZWdyZWUobGFzdFBvc2l0aW9uLnkgLSBpbml0UG9zaXRpb24ueSwgbGFzdFBvc2l0aW9uLnggLSBpbml0UG9zaXRpb24ueCksIHN3aXBlQW5nbGUpID09PSBvcHRpb25zLmF4aXM7XG4gIH1cblxuICBmdW5jdGlvbiBvblBhblN0YXJ0IChlKSB7XG4gICAgaWYgKHJ1bm5pbmcpIHtcbiAgICAgIGlmIChwcmV2ZW50QWN0aW9uV2hlblJ1bm5pbmcpIHsgcmV0dXJuOyB9IGVsc2UgeyBvblRyYW5zaXRpb25FbmQoKTsgfVxuICAgIH1cblxuICAgIGlmIChhdXRvcGxheSAmJiBhbmltYXRpbmcpIHsgc3RvcEF1dG9wbGF5VGltZXIoKTsgfVxuICAgIFxuICAgIHBhblN0YXJ0ID0gdHJ1ZTtcbiAgICBpZiAocmFmSW5kZXgpIHtcbiAgICAgIGNhZihyYWZJbmRleCk7XG4gICAgICByYWZJbmRleCA9IG51bGw7XG4gICAgfVxuXG4gICAgdmFyICQgPSBnZXRFdmVudChlKTtcbiAgICBldmVudHMuZW1pdChpc1RvdWNoRXZlbnQoZSkgPyAndG91Y2hTdGFydCcgOiAnZHJhZ1N0YXJ0JywgaW5mbyhlKSk7XG5cbiAgICBpZiAoIWlzVG91Y2hFdmVudChlKSAmJiBbJ2ltZycsICdhJ10uaW5kZXhPZihnZXRMb3dlckNhc2VOb2RlTmFtZShnZXRUYXJnZXQoZSkpKSA+PSAwKSB7XG4gICAgICBwcmV2ZW50RGVmYXVsdEJlaGF2aW9yKGUpO1xuICAgIH1cblxuICAgIGxhc3RQb3NpdGlvbi54ID0gaW5pdFBvc2l0aW9uLnggPSAkLmNsaWVudFg7XG4gICAgbGFzdFBvc2l0aW9uLnkgPSBpbml0UG9zaXRpb24ueSA9ICQuY2xpZW50WTtcbiAgICBpZiAoY2Fyb3VzZWwpIHtcbiAgICAgIHRyYW5zbGF0ZUluaXQgPSBwYXJzZUZsb2F0KGNvbnRhaW5lci5zdHlsZVt0cmFuc2Zvcm1BdHRyXS5yZXBsYWNlKHRyYW5zZm9ybVByZWZpeCwgJycpKTtcbiAgICAgIHJlc2V0RHVyYXRpb24oY29udGFpbmVyLCAnMHMnKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBvblBhbk1vdmUgKGUpIHtcbiAgICBpZiAocGFuU3RhcnQpIHtcbiAgICAgIHZhciAkID0gZ2V0RXZlbnQoZSk7XG4gICAgICBsYXN0UG9zaXRpb24ueCA9ICQuY2xpZW50WDtcbiAgICAgIGxhc3RQb3NpdGlvbi55ID0gJC5jbGllbnRZO1xuXG4gICAgICBpZiAoY2Fyb3VzZWwpIHtcbiAgICAgICAgaWYgKCFyYWZJbmRleCkgeyByYWZJbmRleCA9IHJhZihmdW5jdGlvbigpeyBwYW5VcGRhdGUoZSk7IH0pOyB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAobW92ZURpcmVjdGlvbkV4cGVjdGVkID09PSAnPycpIHsgbW92ZURpcmVjdGlvbkV4cGVjdGVkID0gZ2V0TW92ZURpcmVjdGlvbkV4cGVjdGVkKCk7IH1cbiAgICAgICAgaWYgKG1vdmVEaXJlY3Rpb25FeHBlY3RlZCkgeyBwcmV2ZW50U2Nyb2xsID0gdHJ1ZTsgfVxuICAgICAgfVxuXG4gICAgICBpZiAocHJldmVudFNjcm9sbCkgeyBlLnByZXZlbnREZWZhdWx0KCk7IH1cbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBwYW5VcGRhdGUgKGUpIHtcbiAgICBpZiAoIW1vdmVEaXJlY3Rpb25FeHBlY3RlZCkge1xuICAgICAgcGFuU3RhcnQgPSBmYWxzZTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY2FmKHJhZkluZGV4KTtcbiAgICBpZiAocGFuU3RhcnQpIHsgcmFmSW5kZXggPSByYWYoZnVuY3Rpb24oKXsgcGFuVXBkYXRlKGUpOyB9KTsgfVxuXG4gICAgaWYgKG1vdmVEaXJlY3Rpb25FeHBlY3RlZCA9PT0gJz8nKSB7IG1vdmVEaXJlY3Rpb25FeHBlY3RlZCA9IGdldE1vdmVEaXJlY3Rpb25FeHBlY3RlZCgpOyB9XG4gICAgaWYgKG1vdmVEaXJlY3Rpb25FeHBlY3RlZCkge1xuICAgICAgaWYgKCFwcmV2ZW50U2Nyb2xsICYmIGlzVG91Y2hFdmVudChlKSkgeyBwcmV2ZW50U2Nyb2xsID0gdHJ1ZTsgfVxuXG4gICAgICB0cnkge1xuICAgICAgICBpZiAoZS50eXBlKSB7IGV2ZW50cy5lbWl0KGlzVG91Y2hFdmVudChlKSA/ICd0b3VjaE1vdmUnIDogJ2RyYWdNb3ZlJywgaW5mbyhlKSk7IH1cbiAgICAgIH0gY2F0Y2goZXJyKSB7fVxuXG4gICAgICB2YXIgeCA9IHRyYW5zbGF0ZUluaXQsXG4gICAgICAgICAgZGlzdCA9IGdldERpc3QobGFzdFBvc2l0aW9uLCBpbml0UG9zaXRpb24pO1xuICAgICAgaWYgKCFob3Jpem9udGFsIHx8IGZpeGVkV2lkdGggfHwgYXV0b1dpZHRoKSB7XG4gICAgICAgIHggKz0gZGlzdDtcbiAgICAgICAgeCArPSAncHgnO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIHBlcmNlbnRhZ2VYID0gVFJBTlNGT1JNID8gZGlzdCAqIGl0ZW1zICogMTAwIC8gKCh2aWV3cG9ydCArIGd1dHRlcikgKiBzbGlkZUNvdW50TmV3KTogZGlzdCAqIDEwMCAvICh2aWV3cG9ydCArIGd1dHRlcik7XG4gICAgICAgIHggKz0gcGVyY2VudGFnZVg7XG4gICAgICAgIHggKz0gJyUnO1xuICAgICAgfVxuXG4gICAgICBjb250YWluZXIuc3R5bGVbdHJhbnNmb3JtQXR0cl0gPSB0cmFuc2Zvcm1QcmVmaXggKyB4ICsgdHJhbnNmb3JtUG9zdGZpeDtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBvblBhbkVuZCAoZSkge1xuICAgIGlmIChwYW5TdGFydCkge1xuICAgICAgaWYgKHJhZkluZGV4KSB7XG4gICAgICAgIGNhZihyYWZJbmRleCk7XG4gICAgICAgIHJhZkluZGV4ID0gbnVsbDtcbiAgICAgIH1cbiAgICAgIGlmIChjYXJvdXNlbCkgeyByZXNldER1cmF0aW9uKGNvbnRhaW5lciwgJycpOyB9XG4gICAgICBwYW5TdGFydCA9IGZhbHNlO1xuXG4gICAgICB2YXIgJCA9IGdldEV2ZW50KGUpO1xuICAgICAgbGFzdFBvc2l0aW9uLnggPSAkLmNsaWVudFg7XG4gICAgICBsYXN0UG9zaXRpb24ueSA9ICQuY2xpZW50WTtcbiAgICAgIHZhciBkaXN0ID0gZ2V0RGlzdChsYXN0UG9zaXRpb24sIGluaXRQb3NpdGlvbik7XG5cbiAgICAgIGlmIChNYXRoLmFicyhkaXN0KSkge1xuICAgICAgICAvLyBkcmFnIHZzIGNsaWNrXG4gICAgICAgIGlmICghaXNUb3VjaEV2ZW50KGUpKSB7XG4gICAgICAgICAgLy8gcHJldmVudCBcImNsaWNrXCJcbiAgICAgICAgICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGUpO1xuICAgICAgICAgIGFkZEV2ZW50cyh0YXJnZXQsIHsnY2xpY2snOiBmdW5jdGlvbiBwcmV2ZW50Q2xpY2sgKGUpIHtcbiAgICAgICAgICAgIHByZXZlbnREZWZhdWx0QmVoYXZpb3IoZSk7XG4gICAgICAgICAgICByZW1vdmVFdmVudHModGFyZ2V0LCB7J2NsaWNrJzogcHJldmVudENsaWNrfSk7XG4gICAgICAgICAgfX0pOyBcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjYXJvdXNlbCkge1xuICAgICAgICAgIHJhZkluZGV4ID0gcmFmKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgaWYgKGhvcml6b250YWwgJiYgIWF1dG9XaWR0aCkge1xuICAgICAgICAgICAgICB2YXIgaW5kZXhNb3ZlZCA9IC0gZGlzdCAqIGl0ZW1zIC8gKHZpZXdwb3J0ICsgZ3V0dGVyKTtcbiAgICAgICAgICAgICAgaW5kZXhNb3ZlZCA9IGRpc3QgPiAwID8gTWF0aC5mbG9vcihpbmRleE1vdmVkKSA6IE1hdGguY2VpbChpbmRleE1vdmVkKTtcbiAgICAgICAgICAgICAgaW5kZXggKz0gaW5kZXhNb3ZlZDtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHZhciBtb3ZlZCA9IC0gKHRyYW5zbGF0ZUluaXQgKyBkaXN0KTtcbiAgICAgICAgICAgICAgaWYgKG1vdmVkIDw9IDApIHtcbiAgICAgICAgICAgICAgICBpbmRleCA9IGluZGV4TWluO1xuICAgICAgICAgICAgICB9IGVsc2UgaWYgKG1vdmVkID49IHNsaWRlUG9zaXRpb25zW3NsaWRlQ291bnROZXcgLSAxXSkge1xuICAgICAgICAgICAgICAgIGluZGV4ID0gaW5kZXhNYXg7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdmFyIGkgPSAwO1xuICAgICAgICAgICAgICAgIHdoaWxlIChpIDwgc2xpZGVDb3VudE5ldyAmJiBtb3ZlZCA+PSBzbGlkZVBvc2l0aW9uc1tpXSkge1xuICAgICAgICAgICAgICAgICAgaW5kZXggPSBpO1xuICAgICAgICAgICAgICAgICAgaWYgKG1vdmVkID4gc2xpZGVQb3NpdGlvbnNbaV0gJiYgZGlzdCA8IDApIHsgaW5kZXggKz0gMTsgfVxuICAgICAgICAgICAgICAgICAgaSsrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZW5kZXIoZSwgZGlzdCk7XG4gICAgICAgICAgICBldmVudHMuZW1pdChpc1RvdWNoRXZlbnQoZSkgPyAndG91Y2hFbmQnIDogJ2RyYWdFbmQnLCBpbmZvKGUpKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAobW92ZURpcmVjdGlvbkV4cGVjdGVkKSB7XG4gICAgICAgICAgICBvbkNvbnRyb2xzQ2xpY2soZSwgZGlzdCA+IDAgPyAtMSA6IDEpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIHJlc2V0XG4gICAgaWYgKG9wdGlvbnMucHJldmVudFNjcm9sbE9uVG91Y2ggPT09ICdhdXRvJykgeyBwcmV2ZW50U2Nyb2xsID0gZmFsc2U7IH1cbiAgICBpZiAoc3dpcGVBbmdsZSkgeyBtb3ZlRGlyZWN0aW9uRXhwZWN0ZWQgPSAnPyc7IH0gXG4gICAgaWYgKGF1dG9wbGF5ICYmICFhbmltYXRpbmcpIHsgc2V0QXV0b3BsYXlUaW1lcigpOyB9XG4gIH1cblxuICAvLyA9PT0gUkVTSVpFIEZVTkNUSU9OUyA9PT0gLy9cbiAgLy8gKHNsaWRlUG9zaXRpb25zLCBpbmRleCwgaXRlbXMpID0+IHZlcnRpY2FsX2NvbmVudFdyYXBwZXIuaGVpZ2h0XG4gIGZ1bmN0aW9uIHVwZGF0ZUNvbnRlbnRXcmFwcGVySGVpZ2h0ICgpIHtcbiAgICB2YXIgd3AgPSBtaWRkbGVXcmFwcGVyID8gbWlkZGxlV3JhcHBlciA6IGlubmVyV3JhcHBlcjtcbiAgICB3cC5zdHlsZS5oZWlnaHQgPSBzbGlkZVBvc2l0aW9uc1tpbmRleCArIGl0ZW1zXSAtIHNsaWRlUG9zaXRpb25zW2luZGV4XSArICdweCc7XG4gIH1cblxuICBmdW5jdGlvbiBnZXRQYWdlcyAoKSB7XG4gICAgdmFyIHJvdWdoID0gZml4ZWRXaWR0aCA/IChmaXhlZFdpZHRoICsgZ3V0dGVyKSAqIHNsaWRlQ291bnQgLyB2aWV3cG9ydCA6IHNsaWRlQ291bnQgLyBpdGVtcztcbiAgICByZXR1cm4gTWF0aC5taW4oTWF0aC5jZWlsKHJvdWdoKSwgc2xpZGVDb3VudCk7XG4gIH1cblxuICAvKlxuICAgKiAxLiB1cGRhdGUgdmlzaWJsZSBuYXYgaXRlbXMgbGlzdFxuICAgKiAyLiBhZGQgXCJoaWRkZW5cIiBhdHRyaWJ1dGVzIHRvIHByZXZpb3VzIHZpc2libGUgbmF2IGl0ZW1zXG4gICAqIDMuIHJlbW92ZSBcImhpZGRlblwiIGF0dHJ1YnV0ZXMgdG8gbmV3IHZpc2libGUgbmF2IGl0ZW1zXG4gICAqL1xuICBmdW5jdGlvbiB1cGRhdGVOYXZWaXNpYmlsaXR5ICgpIHtcbiAgICBpZiAoIW5hdiB8fCBuYXZBc1RodW1ibmFpbHMpIHsgcmV0dXJuOyB9XG5cbiAgICBpZiAocGFnZXMgIT09IHBhZ2VzQ2FjaGVkKSB7XG4gICAgICB2YXIgbWluID0gcGFnZXNDYWNoZWQsXG4gICAgICAgICAgbWF4ID0gcGFnZXMsXG4gICAgICAgICAgZm4gPSBzaG93RWxlbWVudDtcblxuICAgICAgaWYgKHBhZ2VzQ2FjaGVkID4gcGFnZXMpIHtcbiAgICAgICAgbWluID0gcGFnZXM7XG4gICAgICAgIG1heCA9IHBhZ2VzQ2FjaGVkO1xuICAgICAgICBmbiA9IGhpZGVFbGVtZW50O1xuICAgICAgfVxuXG4gICAgICB3aGlsZSAobWluIDwgbWF4KSB7XG4gICAgICAgIGZuKG5hdkl0ZW1zW21pbl0pO1xuICAgICAgICBtaW4rKztcbiAgICAgIH1cblxuICAgICAgLy8gY2FjaGUgcGFnZXNcbiAgICAgIHBhZ2VzQ2FjaGVkID0gcGFnZXM7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaW5mbyAoZSkge1xuICAgIHJldHVybiB7XG4gICAgICBjb250YWluZXI6IGNvbnRhaW5lcixcbiAgICAgIHNsaWRlSXRlbXM6IHNsaWRlSXRlbXMsXG4gICAgICBuYXZDb250YWluZXI6IG5hdkNvbnRhaW5lcixcbiAgICAgIG5hdkl0ZW1zOiBuYXZJdGVtcyxcbiAgICAgIGNvbnRyb2xzQ29udGFpbmVyOiBjb250cm9sc0NvbnRhaW5lcixcbiAgICAgIGhhc0NvbnRyb2xzOiBoYXNDb250cm9scyxcbiAgICAgIHByZXZCdXR0b246IHByZXZCdXR0b24sXG4gICAgICBuZXh0QnV0dG9uOiBuZXh0QnV0dG9uLFxuICAgICAgaXRlbXM6IGl0ZW1zLFxuICAgICAgc2xpZGVCeTogc2xpZGVCeSxcbiAgICAgIGNsb25lQ291bnQ6IGNsb25lQ291bnQsXG4gICAgICBzbGlkZUNvdW50OiBzbGlkZUNvdW50LFxuICAgICAgc2xpZGVDb3VudE5ldzogc2xpZGVDb3VudE5ldyxcbiAgICAgIGluZGV4OiBpbmRleCxcbiAgICAgIGluZGV4Q2FjaGVkOiBpbmRleENhY2hlZCxcbiAgICAgIGRpc3BsYXlJbmRleDogZ2V0Q3VycmVudFNsaWRlKCksXG4gICAgICBuYXZDdXJyZW50SW5kZXg6IG5hdkN1cnJlbnRJbmRleCxcbiAgICAgIG5hdkN1cnJlbnRJbmRleENhY2hlZDogbmF2Q3VycmVudEluZGV4Q2FjaGVkLFxuICAgICAgcGFnZXM6IHBhZ2VzLFxuICAgICAgcGFnZXNDYWNoZWQ6IHBhZ2VzQ2FjaGVkLFxuICAgICAgc2hlZXQ6IHNoZWV0LFxuICAgICAgaXNPbjogaXNPbixcbiAgICAgIGV2ZW50OiBlIHx8IHt9LFxuICAgIH07XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHZlcnNpb246ICcyLjkuMScsXG4gICAgZ2V0SW5mbzogaW5mbyxcbiAgICBldmVudHM6IGV2ZW50cyxcbiAgICBnb1RvOiBnb1RvLFxuICAgIHBsYXk6IHBsYXksXG4gICAgcGF1c2U6IHBhdXNlLFxuICAgIGlzT246IGlzT24sXG4gICAgdXBkYXRlU2xpZGVySGVpZ2h0OiB1cGRhdGVJbm5lcldyYXBwZXJIZWlnaHQsXG4gICAgcmVmcmVzaDogaW5pdFNsaWRlclRyYW5zZm9ybSxcbiAgICBkZXN0cm95OiBkZXN0cm95LFxuICAgIHJlYnVpbGQ6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRucyhleHRlbmQob3B0aW9ucywgb3B0aW9uc0VsZW1lbnRzKSk7XG4gICAgfVxuICB9O1xufTtcblxucmV0dXJuIHRucztcbn0pKCk7IiwiZnVuY3Rpb24gZ2V0UGFyYW1ldGVyQnlOYW1lKG5hbWUsIHVybCkge1xuICBpZiAoIXVybCkgdXJsID0gd2luZG93LmxvY2F0aW9uLmhyZWY7XG4gIG5hbWUgPSBuYW1lLnJlcGxhY2UoL1tcXFtcXF1dL2csIFwiXFxcXCQmXCIpO1xuICB2YXIgcmVnZXggPSBuZXcgUmVnRXhwKFwiWz8mXVwiICsgbmFtZSArIFwiKD0oW14mI10qKXwmfCN8JClcIik7XG4gIHZhciByZXN1bHRzID0gcmVnZXguZXhlYyh1cmwpO1xuICBpZiAoIXJlc3VsdHMpIHJldHVybiBudWxsO1xuICBpZiAoIXJlc3VsdHNbMl0pIHJldHVybiAnJztcbiAgcmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChyZXN1bHRzWzJdLnJlcGxhY2UoL1xcKy9nLCBcIiBcIikpO1xufTtcblxudmFyIHVwZGF0ZUZ1bGxZZWFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnV0aWxpdHktLXVwZGF0ZURhdGUnKTtcbnVwZGF0ZUZ1bGxZZWFyLmZvckVhY2goZnVuY3Rpb24odGV4dCkge1xuICB2YXIgbmV3RGF0ZSA9IG5ldyBEYXRlKCk7XG4gIHRleHQudGV4dENvbnRlbnQgPSBuZXdEYXRlLmdldEZ1bGxZZWFyKCk7XG59KTsiLCIoZnVuY3Rpb24oKXt2YXIgY291bnRkb3duLG1vbWVudCxyZWYscmVmMSxzbGljZT1bXS5zbGljZTtjb3VudGRvd249KHJlZj10eXBlb2YgcmVxdWlyZT09PVwiZnVuY3Rpb25cIj9yZXF1aXJlKFwiY291bnRkb3duXCIpOnZvaWQgMCkhPW51bGw/cmVmOnRoaXMuY291bnRkb3duO21vbWVudD0ocmVmMT10eXBlb2YgcmVxdWlyZT09PVwiZnVuY3Rpb25cIj9yZXF1aXJlKFwibW9tZW50XCIpOnZvaWQgMCkhPW51bGw/cmVmMTp0aGlzLm1vbWVudDttb21lbnQuZm4uY291bnRkb3duPWZ1bmN0aW9uKCl7dmFyIGFyZ3Msb3RoZXI7b3RoZXI9YXJndW1lbnRzWzBdLGFyZ3M9Mjw9YXJndW1lbnRzLmxlbmd0aD9zbGljZS5jYWxsKGFyZ3VtZW50cywxKTpbXTtyZXR1cm4gY291bnRkb3duLmFwcGx5KG51bGwsW3RoaXMudG9EYXRlKCksbW9tZW50KG90aGVyKS50b0RhdGUoKV0uY29uY2F0KHNsaWNlLmNhbGwoYXJncykpKX19KS5jYWxsKHRoaXMpOyIsIi8vIChmdW5jdGlvbigpIHtcblxuICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGNoZWNrTW9kYWwpO1xuICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGNsb3NlTW9kYWxDbGljayk7XG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgY2xvc2VNb2RhbEVzYyk7XG5cbiAgZnVuY3Rpb24gY2hlY2tNb2RhbChlKSB7XG4gICAgaWYgKCFlLnRhcmdldC5kYXRhc2V0Lm1vZGFsTGF1bmNoKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGxhdW5jaE1vZGFsKGUpO1xuICB9XG5cbiAgZnVuY3Rpb24gY2xvc2VNb2RhbENsaWNrKGUpIHtcbiAgICBpZiAoIWUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnbW9kYWwtLWNsb3NlJykgJiYgIWUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnbW9kYWwnKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjbG9zZU1vZGFsKGUpO1xuICB9XG5cbiAgZnVuY3Rpb24gY2xvc2VNb2RhbEVzYyhlKSB7XG4gICAgaWYgKGUua2V5Q29kZSAhPT0gMjcpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY2xvc2VNb2RhbChlKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNsb3NlTW9kYWwoZSkge1xuICAgIGlmICghZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QuY29udGFpbnMoJ21vZGFsLS1pcy1vcGVuJykpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1vZGFsLS1pcy1hY3RpdmUnKS5jbGFzc0xpc3QuYWRkKCdtb2RhbC0taXMtaGlkZGVuJyk7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1vZGFsLS1pcy1hY3RpdmUnKS5jbGFzc0xpc3QucmVtb3ZlKCdtb2RhbC0taXMtYWN0aXZlJyk7XG4gICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QucmVtb3ZlKCdtb2RhbC0taXMtb3BlbicpO1xuICB9XG5cbiAgZnVuY3Rpb24gbGF1bmNoTW9kYWwoZSkge1xuICAgIHZhciBtb2RhbFRhcmdldCA9IGUudGFyZ2V0LmRhdGFzZXQubW9kYWxMYXVuY2g7XG4gICAgaWYgKG1vZGFsVGFyZ2V0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIG1vZGFsVGFyZ2V0ID0gZS50YXJnZXQucGFyZW50RWxlbWVudC5kYXRhc2V0Lm1vZGFsTGF1bmNoO1xuICAgIH1cbiAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5hZGQoJ21vZGFsLS1pcy1vcGVuJyk7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1vZGFsLS0nICsgbW9kYWxUYXJnZXQpLmNsYXNzTGlzdC5yZW1vdmUoJ21vZGFsLS1pcy1oaWRkZW4nKTtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubW9kYWwtLScgKyBtb2RhbFRhcmdldCkuY2xhc3NMaXN0LmFkZCgnbW9kYWwtLWlzLWFjdGl2ZScpO1xuXG4gICAgaWYgKG1vZGFsVGFyZ2V0ID09PSAnc2VuZC1vcmRlci1jb21tZW50Jykge1xuICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaW5wdXRbbmFtZT1cIm9yZGVyX251bWJlclwiXScpLnZhbHVlID0gZS50YXJnZXQuZGF0YXNldC5vcmRlck51bWJlcjtcbiAgICAgIC8vIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2lucHV0W25hbWU9XCJjdXN0b21lcl9uYW1lXCJdJyk7XG4gICAgICBcbiAgICAgIHZhciByYWRpb0J1dHRvbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdpbnB1dFtuYW1lPVwiY29udGFjdF9wcmVmZXJlbmNlXCJdJyk7XG4gICAgICByYWRpb0J1dHRvbnMuZm9yRWFjaChmdW5jdGlvbihidXR0b24pIHtcbiAgICAgICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICB2YXIgdmFsdWUgPSBlLnRhcmdldC52YWx1ZTtcbiAgICAgICAgICB2YXIgYWxsQ29udGFjdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5jb250YWN0LXByZWZlcmVuY2UnKTtcbiAgICAgICAgICBhbGxDb250YWN0LmZvckVhY2goZnVuY3Rpb24oY29udGFjdFByZWZlcmVuY2UpIHtcbiAgICAgICAgICAgIGNvbnRhY3RQcmVmZXJlbmNlLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRhY3QtcHJlZmVyZW5jZS0tJyArIHZhbHVlKS5zdHlsZS5kaXNwbGF5ID0gJ2ZsZXgnO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuXG4gICAgICB2YXIgZm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNzdWJtaXRPcmRlckNvbW1lbnQnKTtcbiAgICAgIGZvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0Jywgc3VibWl0T3JkZXJDb21tZW50KTtcbiAgICAgIGZ1bmN0aW9uIHN1Ym1pdE9yZGVyQ29tbWVudChlKSB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgYXRvbWljKHdpbmRvdy5hamF4X29yZGVyX3RyYWNraW5nLmFqYXhfdXJsLCB7XG4gICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgYWN0aW9uOiAnc2VuZF9vcmRlcl9jb21tZW50JyxcbiAgICAgICAgICAgIF9hamF4X25vbmNlOiB3aW5kb3cuYWpheF9vcmRlcl90cmFja2luZy5ub25jZSxcbiAgICAgICAgICAgIGNvbnRhY3RfcHJlZmVyZW5jZTogZm9ybS5xdWVyeVNlbGVjdG9yKCdpbnB1dFtuYW1lPVwiY29udGFjdF9wcmVmZXJlbmNlXCJdOmNoZWNrZWQnKS52YWx1ZSxcbiAgICAgICAgICAgIGN1c3RvbWVyX25hbWU6IGZvcm0ucXVlcnlTZWxlY3RvcignaW5wdXRbbmFtZT1cImN1c3RvbWVyX25hbWVcIl0nKS52YWx1ZSxcbiAgICAgICAgICAgIGVtYWlsX2FkZHJlc3M6IGZvcm0ucXVlcnlTZWxlY3RvcignaW5wdXRbbmFtZT1cImVtYWlsX2FkZHJlc3NcIl0nKS52YWx1ZSxcbiAgICAgICAgICAgIHBob25lX251bWJlcjogZm9ybS5xdWVyeVNlbGVjdG9yKCdpbnB1dFtuYW1lPVwicGhvbmVfbnVtYmVyXCJdJykudmFsdWUsXG4gICAgICAgICAgICBtZXNzYWdlOiBmb3JtLnF1ZXJ5U2VsZWN0b3IoJ3RleHRhcmVhW25hbWU9XCJtZXNzYWdlXCJdJykudmFsdWUsXG4gICAgICAgICAgICBvcmRlcl9udW1iZXI6IGZvcm0ucXVlcnlTZWxlY3RvcignaW5wdXRbbmFtZT1cIm9yZGVyX251bWJlclwiXScpLnZhbHVlLFxuICAgICAgICAgIH1cbiAgICAgICAgfSkudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhLnN0YXR1cyA9PT0gJ3N1Y2Nlc3MnKSB7XG4gICAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5jb250YWN0X3ByZWZlcmVuY2UgPT09ICdwaG9uZScpIHtcbiAgICAgICAgICAgICAgdmFyIG1lc3NhZ2UgPSAnV2Ugd2lsbCBnaXZlIHlvdSBhIHBob25lIGNhbGwgc2hvcnRseSBhdCAnICsgcmVzcG9uc2UuZGF0YS5waG9uZV9udW1iZXIgKyAnLic7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICB2YXIgbWVzc2FnZSA9ICdXZSB3aWxsIHNlbmQgeW91IGFuIGVtYWlsIHNob3J0bHkgYXQgJyArIHJlc3BvbnNlLmRhdGEuZW1haWxfYWRkcmVzcyArICcuJztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIG1vZGFsQ29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbC1jb250ZW50Jyk7XG4gICAgICAgICAgICBtb2RhbENvbnRlbnQuaW5uZXJIVE1MID0gJzxoMj5UaGFua3MgJyArIHJlc3BvbnNlLmRhdGEubmFtZSArICchPC9oMj48cD4nICsgbWVzc2FnZSArICc8L3A+JztcbiAgICAgICAgICB9XG4gICAgICAgICAgLy8gaWYgKHJlc3BvbnNlLmRhdGEuKSB7fVxuICAgICAgICB9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnZmFpbGVkIGNhbGwnKTtcbiAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgfVxuXG4vLyB9KSgpOyIsIihmdW5jdGlvbigkKSB7XG5cbiAgdmFyIHRvcExldmVsID0gJCgnLm1lZ2EtbWVudS0tc2hvcC1ieS1wYXJ0ID4gbGknKTtcbiAgJC5lYWNoKHRvcExldmVsLCBmdW5jdGlvbigpIHtcbiAgICAkKHRoaXMpLmFkZENsYXNzKCdtZWdhLW1lbnUtLXBhcmVudC0taXMtaGlkZGVuIG1lZ2EtbWVudS0tcGFyZW50JykuY2hpbGRyZW4oJ3VsJykuYWRkQ2xhc3MoJ21lZ2EtbWVudS0tY2hpbGQtbGlzdCcpO1xuICB9KTtcbiAgdG9wTGV2ZWwuZmlyc3QoKS5yZW1vdmVDbGFzcygnbWVnYS1tZW51LS1wYXJlbnQtLWlzLWhpZGRlbicpO1xuXG5cbiAgdmFyIG1lZ2FNZW51cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5tZWdhLW1lbnUnKTtcbiAgXG4gIGlmICghbWVnYU1lbnVzKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIFxuICBtZWdhTWVudXMuZm9yRWFjaChmdW5jdGlvbihtZW51KSB7XG4gICAgbWVudS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWVudGVyJywgZnVuY3Rpb24oKSB7XG4gICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2NyZWVuJykuY2xhc3NMaXN0LnJlbW92ZSgnc2NyZWVuLS1pcy1oaWRkZW4nKTtcbiAgICB9LCBmYWxzZSk7XG4gICAgXG4gICAgbWVudS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWxlYXZlJywgZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3M6Zm9jdXMnKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2NyZWVuJykuY2xhc3NMaXN0LmFkZCgnc2NyZWVuLS1pcy1oaWRkZW4nKTtcbiAgICB9LCBmYWxzZSk7XG4gIH0pO1xuXG4gIHZhciBtZWdhTWVudVBhcmVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcubWVnYS1tZW51LS1wYXJlbnQnKTtcbiAgaWYgKCFtZWdhTWVudVBhcmVudHMpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBtZWdhTWVudVBhcmVudHMuZm9yRWFjaChmdW5jdGlvbihpdGVtKSB7XG4gICAgaWYgKHdpbmRvdy5pbm5lcldpZHRoID4gNzY5KSB7XG4gICAgICBpdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZW50ZXInLCBmdW5jdGlvbihlKSB7XG4gICAgICAgIG1lZ2FNZW51UGFyZW50cy5mb3JFYWNoKGZ1bmN0aW9uKGl0ZW0pIHtcbiAgICAgICAgICBpdGVtLmNsYXNzTGlzdC5hZGQoJ21lZ2EtbWVudS0tcGFyZW50LS1pcy1oaWRkZW4nKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ21lZ2EtbWVudS0tcGFyZW50LS1pcy1oaWRkZW4nKSkge1xuICAgICAgICAgICAgZS50YXJnZXQuY2xhc3NMaXN0LnJlbW92ZSgnbWVnYS1tZW51LS1wYXJlbnQtLWlzLWhpZGRlbicpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH0pO1xuXG4gIHZhciBuYXZCdXR0b25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLm5hdmlnYXRpb24tLWJ1dHRvbicpO1xuICBuYXZCdXR0b25zLmZvckVhY2goZnVuY3Rpb24oYnV0dG9uKSB7XG4gICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdG9nZ2xlU3ViTWVudSk7XG4gIH0pO1xuXG4gIGlmICh3aW5kb3cuaW5uZXJXaWR0aCA8IDc2OSkge1xuICAgIG1lZ2FNZW51UGFyZW50cy5mb3JFYWNoKGZ1bmN0aW9uKGl0ZW0pIHtcbiAgICAgIGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbihlKSB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgZS50YXJnZXQucGFyZW50RWxlbWVudC5jbGFzc0xpc3QudG9nZ2xlKCdtZWdhLW1lbnUtLXBhcmVudC0taXMtaGlkZGVuJyk7XG4gICAgICAgIGNvbnNvbGUubG9nKCdvcGVuIG1lIHVwJyk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIHZhciBlcXVpcG1lbnRCdXR0b25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLm1lZ2EtbWVudS0tZXF1aXBtZW50LXBhcmVudCcpO1xuICBlcXVpcG1lbnRCdXR0b25zLmZvckVhY2goZnVuY3Rpb24oYnV0dG9uKSB7XG4gICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc2hvd0NoaWxkRXF1aXBtZW50KTtcbiAgfSk7XG5cbiAgLy8gdmFyIGFsbEJhY2sgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZXF1aXBtZW50UmVzdWx0c0JhY2snKTtcbiAgLy8gYWxsQmFjay5mb3JFYWNoKGZ1bmN0aW9uKGJ1dHRvbikge1xuICAvLyAgIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcbiAgLy8gICAgIGUudGFyZ2V0LnBhcmVudEVsZW1lbnQuY2xhc3NMaXN0LmFkZCgndmlzdWFsbHktaGlkZGVuJyk7XG4gIC8vICAgICB2YXIgaXRlbXMgPSBlLnRhcmdldC5wYXJlbnRFbGVtZW50LnBhcmVudEVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLm1lZ2EtbWVudS0tY2hpbGQtaXRlbScpO1xuICAvLyAgICAgaXRlbXMuZm9yRWFjaChmdW5jdGlvbihpdGVtKSB7XG4gIC8vICAgICAgIGl0ZW0uY2xhc3NMaXN0LnJlbW92ZSgndmlzdWFsbHktaGlkZGVuJyk7XG4gIC8vICAgICB9KTtcbiAgLy8gICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lcXVpcG1lbnQtcmVzdWx0cyBoNCcpLnRleHRDb250ZW50ID0gJyc7XG4gIC8vICAgfSk7XG4gIC8vIH0pXG5cbiAgZnVuY3Rpb24gc2hvd0NoaWxkRXF1aXBtZW50KGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAkKHRoaXMpLnBhcmVudCgpLnNpYmxpbmdzKCkudG9nZ2xlKCk7XG4gICAgJCh0aGlzKS5uZXh0KCkudG9nZ2xlQ2xhc3MoJ3Zpc3VhbGx5LWhpZGRlbicpO1xuICAgICQodGhpcykudG9nZ2xlQ2xhc3MoJ2Rpc3BsYXktYmFjaycpO1xuXG4gIH1cblxuICBmdW5jdGlvbiB0b2dnbGVTdWJNZW51KGUpIHtcbiAgICBpZiAod2luZG93LmlubmVyV2lkdGggPCA3NjkpIHtcbiAgICAgIGUudGFyZ2V0Lm5leHRFbGVtZW50U2libGluZy5jbGFzc0xpc3QudG9nZ2xlKCdtb2JpbGUtb3BlbicpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHRvZ2dsZU1lbnUoKSB7XG4gICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QudG9nZ2xlKCdtZW51LW9wZW4nKTtcbiAgICB2YXIgbWVudUJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNoYW1idXJnZXInKTtcbiAgICBtZW51QnV0dG9uLmNsYXNzTGlzdC50b2dnbGUoJ2lzLWFjdGl2ZScpO1xuICAgIHZhciBoZWFkZXJIZWlnbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2l0ZS1oZWFkZXInKS5vZmZzZXRIZWlnaHQ7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm5hdmlnYXRpb24tLWxldmVsLXplcm8nKS5zdHlsZS50b3AgPSBoZWFkZXJIZWlnbnQgKyAncHgnO1xuICAgIGlmICh3aW5kb3cuaW5uZXJXaWR0aCA8IDc2OSkge1xuICAgICAgbWVnYU1lbnVQYXJlbnRzLmZvckVhY2goZnVuY3Rpb24oaXRlbSkge1xuICAgICAgICBpdGVtLmNsYXNzTGlzdC5hZGQoJ21lZ2EtbWVudS0tcGFyZW50LS1pcy1oaWRkZW4nKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2J1dHRvbiNoYW1idXJnZXInKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRvZ2dsZU1lbnUpO1xuXG59KShqUXVlcnkpOyIsIihmdW5jdGlvbigkKSB7XG5cbiAgLypcbiAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgQ0hBTkdFIFBBR0UgV0hFTiBTRUxFQ1RFRCBNT0RFTCBNT0RJRklFUlxuICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAqL1xuICB2YXIgbW9kZWxNb2RpZmVyU2VsZWN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI21vZGVsTW9kaWZpZXJzJyk7XG4gIHZhciBtYWluQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI21haW5fY29udGVudCcpO1xuXG4gIGlmIChtb2RlbE1vZGlmZXJTZWxlY3QpIHtcbiAgICBtb2RlbE1vZGlmZXJTZWxlY3QuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgZnVuY3Rpb24oZSkge1xuICAgICAgdmFyIGxvYyA9IGUudGFyZ2V0LnZhbHVlO1xuICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBsb2M7XG4gICAgfSk7XG4gIH1cblxuXG4gIC8qXG4gID09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgQUpBWCBGT1IgUFJJQ0VcbiAgPT09PT09PT09PT09PT09PT09PT09PT09PVxuICAqL1xuICB2YXIgYWxsUGFydHMgPSAkKCcuY2F0ZWdvcnktbWFpbnRlbmFuY2UtcmVtaW5kZXIgW2RhdGEtc2t1XScpO1xuICAkLmVhY2goYWxsUGFydHMsIGZ1bmN0aW9uKCkge1xuICAgIHZhciBlbGVtID0gJCh0aGlzKTtcbiAgICB2YXIgc2t1ID0gZWxlbS5kYXRhKCdza3UnKTtcbiAgICAkLmFqYXgoe1xuICAgICAgdXJsOiB3aW5kb3cuYWpheF9vcmRlcl90cmFja2luZy5hamF4X3VybCxcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgZGF0YToge1xuICAgICAgICBhY3Rpb246ICdnZXRfcHJvZHVjdF9pbmZvJyxcbiAgICAgICAgX2FqYXhfbm9uY2U6IHdpbmRvdy5hamF4X29yZGVyX3RyYWNraW5nLm5vbmNlLFxuICAgICAgICBza3U6IHNrdVxuICAgICAgfSxcbiAgICAgIGRhdGFUeXBlOiAnanNvbicsXG4gICAgICBzdWNjZXNzOiBmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgICB2YXIgcHJpY2UgPSBOdW1iZXIocmVzcG9uc2UucHJpY2UpLnRvRml4ZWQoMik7XG4gICAgICAgIHZhciBodG1sID0gZWxlbS5odG1sKCk7XG4gICAgICAgIGVsZW0uc2libGluZ3MoJ1tkYXRhLWhlYWRlcj1cIlByaWNlXCJdJykuaHRtbCgnJCcgKyBwcmljZSk7XG4gICAgICAgIGlmIChyZXNwb25zZS5pZCkge1xuICAgICAgICAgIGVsZW0uaHRtbCgnPGEgaHJlZj1cIi8/cD0nICsgcmVzcG9uc2UuaWQgKyAnXCI+JyArIGh0bWwgKyAnPC9hPicpO1xuICAgICAgICAgIGVsZW0ucGFyZW50KCkuZmluZCgnYnV0dG9uJykucmVtb3ZlQ2xhc3MoJ2Rpc2FibGVkJykuYWRkQ2xhc3MoJ2FkZC10by1jYXJ0JykudGV4dCgnQWRkIHRvIENhcnQnKS5hdHRyKCd2YWx1ZScsIHJlc3BvbnNlLmlkKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGVycm9yOiBmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSk7XG5cblxuICAvKlxuICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgU1RJQ0tZIE1BSU5URU5BTkNFIEtJVCBCVVkgTk9XXG4gID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAqL1xuXG4gIHZhciBtYWludGVuYW5jZUtpdENvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tYWludGVuYW5jZS1raXQtY29udGFpbmVyJyk7XG4gIGlmIChtYWludGVuYW5jZUtpdENvbnRhaW5lciAmJiB3aW5kb3cuaW5uZXJXaWR0aCA+IDEwODApIHtcbiAgICB3aW5kb3cub25sb2FkID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgb2Zmc2V0VG9wID0gbWFpbnRlbmFuY2VLaXRDb250YWluZXIub2Zmc2V0VG9wO1xuICAgICAgdmFyIGJhc2VGb250U2l6ZSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGRvY3VtZW50LmJvZHksIG51bGwpLmZvbnRTaXplO1xuICAgICAgYmFzZUZvbnRTaXplID0gcGFyc2VJbnQoYmFzZUZvbnRTaXplLnNwbGl0KCdweCcpWzBdKTtcblxuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgaWYgKHdpbmRvdy5zY3JvbGxZID4gKG9mZnNldFRvcCAtIChiYXNlRm9udFNpemUgKiAzKSkpIHtcbiAgICAgICAgICBtYWludGVuYW5jZUtpdENvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdtYWludGVuYW5jZS1raXQtY29udGFpbmVyLS1pcy1maXhlZCcpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh3aW5kb3cuc2Nyb2xsWSA8IChvZmZzZXRUb3AgLSAoYmFzZUZvbnRTaXplICogMykpKSB7XG4gICAgICAgICAgbWFpbnRlbmFuY2VLaXRDb250YWluZXIuY2xhc3NMaXN0LnJlbW92ZSgnbWFpbnRlbmFuY2Uta2l0LWNvbnRhaW5lci0taXMtZml4ZWQnKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gIH1cblxuXG59KShqUXVlcnkpO1xuXG5cbi8qXG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuUE9MWUZJTEwgRk9SIHN0ci5pbmNsdWRlcygpXG5ATElOSyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9TdHJpbmcvaW5jbHVkZXNcbj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4qL1xuaWYgKCFTdHJpbmcucHJvdG90eXBlLmluY2x1ZGVzKSB7XG4gIFN0cmluZy5wcm90b3R5cGUuaW5jbHVkZXMgPSBmdW5jdGlvbihzZWFyY2gsIHN0YXJ0KSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuICAgIGlmICh0eXBlb2Ygc3RhcnQgIT09ICdudW1iZXInKSB7XG4gICAgICBzdGFydCA9IDA7XG4gICAgfVxuICAgIFxuICAgIGlmIChzdGFydCArIHNlYXJjaC5sZW5ndGggPiB0aGlzLmxlbmd0aCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gdGhpcy5pbmRleE9mKHNlYXJjaCwgc3RhcnQpICE9PSAtMTtcbiAgICB9XG4gIH07XG59XG5cblxuLypcbj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuUE9MWUZJTEwgRk9SIG5vZGUucmVtb3ZlKClcbkBMSU5LIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9DaGlsZE5vZGUvcmVtb3ZlXG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiovXG4oZnVuY3Rpb24gKGFycikge1xuICBhcnIuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkge1xuICAgIGlmIChpdGVtLmhhc093blByb3BlcnR5KCdyZW1vdmUnKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoaXRlbSwgJ3JlbW92ZScsIHtcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICAgIGlmICh0aGlzLnBhcmVudE5vZGUgIT09IG51bGwpXG4gICAgICAgICAgdGhpcy5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXMpO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTtcbn0pKFtFbGVtZW50LnByb3RvdHlwZSwgQ2hhcmFjdGVyRGF0YS5wcm90b3R5cGUsIERvY3VtZW50VHlwZS5wcm90b3R5cGVdKTtcblxuXG5cbi8qXG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblBPTFlGSUxMIEZPUiBhcnJheS5pbmNsdWRlc1xuQExJTksgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvQXJyYXkvaW5jbHVkZXNcbj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuKi9cbmlmICghQXJyYXkucHJvdG90eXBlLmluY2x1ZGVzKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShBcnJheS5wcm90b3R5cGUsICdpbmNsdWRlcycsIHtcbiAgICB2YWx1ZTogZnVuY3Rpb24oc2VhcmNoRWxlbWVudCwgZnJvbUluZGV4KSB7XG5cbiAgICAgIGlmICh0aGlzID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignXCJ0aGlzXCIgaXMgbnVsbCBvciBub3QgZGVmaW5lZCcpO1xuICAgICAgfVxuXG4gICAgICAvLyAxLiBMZXQgTyBiZSA/IFRvT2JqZWN0KHRoaXMgdmFsdWUpLlxuICAgICAgdmFyIG8gPSBPYmplY3QodGhpcyk7XG5cbiAgICAgIC8vIDIuIExldCBsZW4gYmUgPyBUb0xlbmd0aCg/IEdldChPLCBcImxlbmd0aFwiKSkuXG4gICAgICB2YXIgbGVuID0gby5sZW5ndGggPj4+IDA7XG5cbiAgICAgIC8vIDMuIElmIGxlbiBpcyAwLCByZXR1cm4gZmFsc2UuXG4gICAgICBpZiAobGVuID09PSAwKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgLy8gNC4gTGV0IG4gYmUgPyBUb0ludGVnZXIoZnJvbUluZGV4KS5cbiAgICAgIC8vICAgIChJZiBmcm9tSW5kZXggaXMgdW5kZWZpbmVkLCB0aGlzIHN0ZXAgcHJvZHVjZXMgdGhlIHZhbHVlIDAuKVxuICAgICAgdmFyIG4gPSBmcm9tSW5kZXggfCAwO1xuXG4gICAgICAvLyA1LiBJZiBuIOKJpSAwLCB0aGVuXG4gICAgICAvLyAgYS4gTGV0IGsgYmUgbi5cbiAgICAgIC8vIDYuIEVsc2UgbiA8IDAsXG4gICAgICAvLyAgYS4gTGV0IGsgYmUgbGVuICsgbi5cbiAgICAgIC8vICBiLiBJZiBrIDwgMCwgbGV0IGsgYmUgMC5cbiAgICAgIHZhciBrID0gTWF0aC5tYXgobiA+PSAwID8gbiA6IGxlbiAtIE1hdGguYWJzKG4pLCAwKTtcblxuICAgICAgZnVuY3Rpb24gc2FtZVZhbHVlWmVybyh4LCB5KSB7XG4gICAgICAgIHJldHVybiB4ID09PSB5IHx8ICh0eXBlb2YgeCA9PT0gJ251bWJlcicgJiYgdHlwZW9mIHkgPT09ICdudW1iZXInICYmIGlzTmFOKHgpICYmIGlzTmFOKHkpKTtcbiAgICAgIH1cblxuICAgICAgLy8gNy4gUmVwZWF0LCB3aGlsZSBrIDwgbGVuXG4gICAgICB3aGlsZSAoayA8IGxlbikge1xuICAgICAgICAvLyBhLiBMZXQgZWxlbWVudEsgYmUgdGhlIHJlc3VsdCBvZiA/IEdldChPLCAhIFRvU3RyaW5nKGspKS5cbiAgICAgICAgLy8gYi4gSWYgU2FtZVZhbHVlWmVybyhzZWFyY2hFbGVtZW50LCBlbGVtZW50SykgaXMgdHJ1ZSwgcmV0dXJuIHRydWUuXG4gICAgICAgIGlmIChzYW1lVmFsdWVaZXJvKG9ba10sIHNlYXJjaEVsZW1lbnQpKSB7XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgLy8gYy4gSW5jcmVhc2UgayBieSAxLiBcbiAgICAgICAgaysrO1xuICAgICAgfVxuXG4gICAgICAvLyA4LiBSZXR1cm4gZmFsc2VcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH0pO1xufSIsIihmdW5jdGlvbigkKSB7XG5cbiAgdmFyIHJldmlld0xpbmsgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcud29vY29tbWVyY2UtcmV2aWV3LWxpbmsnKTtcbiAgaWYgKHJldmlld0xpbmspIHtcbiAgICByZXZpZXdMaW5rLmZvckVhY2goZnVuY3Rpb24obGluaykge1xuICAgICAgbGluay5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbiAgXG4gIC8qXG4gID09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgRklUTUVOVCBURVhUIEZJTFRFUlxuICA9PT09PT09PT09PT09PT09PT09PT09PT09XG4gICovXG5cbiAgLy8gR2V0IFZhcnNcbiAgdmFyIGZpdG1lbnRUZXh0RmlsdGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2ZpdG1lbnQtdGV4dC1maWx0ZXInKSxcbiAgICAgIHByb2R1Y3RGaXRtZW50VGFncyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5zaW5nbGUtLXBhcnQtZml0bWVudC1saXN0IGxpJyk7XG5cbiAgLy8gQ2hlY2sgdGhhdCBwYWdlIGhhcyB0ZXh0IGZpbHRlclxuICBpZiAoZml0bWVudFRleHRGaWx0ZXIpIHtcbiAgICBmaXRtZW50VGV4dEZpbHRlci5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsIGZ1bmN0aW9uKGUpIHtcbiAgICAgIHZhciB2YWx1ZSA9IGUudGFyZ2V0LnZhbHVlLnRvVXBwZXJDYXNlKCk7XG4gICAgICAvLyBMb29wIG92ZXIgYWxsIGZpdG1lbnQgYW5kIGFkZC9yZW1vdmUgaGlkZGVuIGNsYXNzXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHByb2R1Y3RGaXRtZW50VGFncy5sZW5ndGg7IGkrKykge1xuICAgICAgICBwcm9kdWN0Rml0bWVudFRhZ3NbaV0uY2xhc3NMaXN0LmFkZCgnaGlkZGVuJyk7XG4gICAgICAgIGlmIChwcm9kdWN0Rml0bWVudFRhZ3NbaV0udGV4dENvbnRlbnQudG9VcHBlckNhc2UoKS5pbmNsdWRlcyh2YWx1ZSkpIHtcbiAgICAgICAgICBwcm9kdWN0Rml0bWVudFRhZ3NbaV0uY2xhc3NMaXN0LnJlbW92ZSgnaGlkZGVuJyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG5cbiAgdmFyIHByb2R1Y3RUaHVtYnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcud29vY29tbWVyY2UtcHJvZHVjdC1nYWxsZXJ5X190aHVtYnMgbGknKTtcbiAgaWYgKHByb2R1Y3RUaHVtYnMpIHtcbiAgICBwcm9kdWN0VGh1bWJzLmZvckVhY2goZnVuY3Rpb24odGh1bWIpIHtcbiAgICAgIHRodW1iLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc3dhcEZlYXR1cmVkUGhvdG8pO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gc3dhcEZlYXR1cmVkUGhvdG8oZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB2YXIgbmV3SW1hZ2UgPSBlLnRhcmdldC5kYXRhc2V0LmZ1bGxJbWFnZTtcbiAgICB2YXIgd3JhcHBlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy53b29jb21tZXJjZS1wcm9kdWN0LWdhbGxlcnlfX3dyYXBwZXIgPiBhJyk7XG4gICAgd3JhcHBlci5ocmVmID0gbmV3SW1hZ2U7XG4gICAgd3JhcHBlci5xdWVyeVNlbGVjdG9yKCdpbWcnKS5zcmMgPSBuZXdJbWFnZTtcbiAgfVxuXG5cbiAgLy8gJCgnYm9keScpLm9uKCdpbml0JywgJyNyZXZpZXdzJywgZnVuY3Rpb24oKSB7XG4gIC8vICAgdmFyIHN0YXJzID0gJCgnLnN0YXJzIGEnKTtcbiAgLy8gICBzdGFycy5odG1sKCc8c3ZnIHZlcnNpb249XCIxLjFcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgeG1sbnM6eGxpbms9XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIgdmlld0JveD1cIjAgMCAzMDAgMjg0LjdcIiB4bWw6c3BhY2U9XCJwcmVzZXJ2ZVwiPjxwb2x5Z29uIHBvaW50cz1cIjE1MCwwIDE5NS44LDEwMCAzMDAsMTA4LjMgMjE5LjQsMTgzLjMgMjQzLjEsMjg0LjcgMTQ3LjIsMjMxLjkgNTYuOSwyODQuNyA3OS4yLDE3Ny44IDAsMTA4LjMgMTA4LjMsOTUuOCBcIi8+PC9zdmc+Jyk7XG4gIC8vICAgc3RhcnMub24oJ21vdXNlZW50ZXInLCBmdW5jdGlvbigpIHtcbiAgLy8gICAgICQodGhpcykucHJldkFsbCgpLmZpbmQoJ3BvbHlnb24nKS5jc3MoXCJmaWxsXCIsIFwiIzI5NjUyZFwiKTtcbiAgLy8gICB9KTtcbiAgLy8gICBzdGFycy5vbignbW91c2VsZWF2ZScsIGZ1bmN0aW9uKCkge1xuICAvLyAgICAgJCh0aGlzKS5wcmV2QWxsKCkuZmluZCgncG9seWdvbicpLmNzcyhcImZpbGxcIiwgXCJcIik7XG4gIC8vICAgfSk7XG4gIC8vICAgc3RhcnMub24oJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xuICAvLyAgICAgY29uc29sZS5sb2coJCh0aGlzKSk7XG4gIC8vICAgICAkKHRoaXMpLnNpYmxpbmdzKCkucmVtb3ZlQ2xhc3MoJ2hpZ2hsaWdodCcpO1xuICAvLyAgICAgJCh0aGlzKS5wcmV2QWxsKCkuYWRkQ2xhc3MoJ2hpZ2hsaWdodCcpO1xuICAvLyAgICAgdmFyIHZhbCA9ICQodGhpcykuaW5kZXgoKTtcbiAgLy8gICAgIHZhbCA9IFN0cmluZyh2YWwpO1xuICAvLyAgICAgJCgnc2VsZWN0I3JhdGluZycpLnZhbCh2YWwpO1xuICAvLyAgICAgLy8gZWxlbS5hdHRyKCdzZWxlY3RlZCcpO1xuICAvLyAgICAgY29uc29sZS5sb2codHlwZW9mIHZhbCk7XG4gIC8vICAgfSk7XG4gIC8vICAgJCgnLmNvbW1lbnQtZm9ybS1lbWFpbCBpbnB1dCcpLnJlbW92ZUF0dHIoJ3JlcXVpcmVkJykucmVtb3ZlQXR0cignYXJpYS1yZXF1aXJlZCcpO1xuICAvLyB9KVxuXG5cbiAgJCgnLndvb2NvbW1lcmNlLXByb2R1Y3QtZ2FsbGVyeV9fd3JhcHBlciBhJykub24oJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAkKCcubW9kYWwtLWRpc3BsYXktcHJvZHVjdC1pbWFnZSAubW9kYWwtY29udGFpbmVyJykuY3NzKCdtYXgtd2lkdGgnLCAnODAwcHgnKTtcbiAgICAkKCcubW9kYWwtLWRpc3BsYXktcHJvZHVjdC1pbWFnZSAubW9kYWwtY29udGVudCcpLmh0bWwoJzxpbWcgc3JjPVwiJyArIGUudGFyZ2V0LnNyYyArICdcIj4nKTtcbiAgICBsYXVuY2hNb2RhbChlKTtcbiAgfSk7XG5cblxuXG4gIC8vIGNvbW1lbnRGb3JtUmF0aW5nLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBmdW5jdGlvbigpIHtcbiAgLy8gICBjb25zb2xlLmxvZygnYXNkZicpO1xuICAvLyAgIGNvbnNvbGUubG9nKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5zdGFycyBhJykpO1xuICAvLyB9KVxuICAvLyBpZiAoY29tbWVudEZvcm1SYXRpbmcpIHtcbiAgLy8gICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAvLyAgICAgdmFyIHN0YXJzID0gY29tbWVudEZvcm1SYXRpbmcucXVlcnlTZWxlY3RvckFsbCgnLnN0YXJzIGEnKTtcbiAgLy8gICAgIHN0YXJzLmZvckVhY2goZnVuY3Rpb24oc3Rhcikge1xuICAvLyAgICAgICBzdGFyLmlubmVySFRNTCA9ICc8aW1nIHNyYz1cIi8vZmlsbG11cnJheS5jb20vMTAvMTBcIj4nO1xuICAvLyAgICAgfSk7XG4gIC8vICAgfSwgMTAwMCk7XG4gIC8vIH1cblxuICAvKlxuICA9PT09PT09PT09PT09PT09PT09PT09PT09XG4gIEFERCBQUk9EVUNUIFRPIENBUlRcbiAgPT09PT09PT09PT09PT09PT09PT09PT09PVxuICAqL1xuXG4gIC8vIEdldCBWYXJzXG4gIC8vIHZhciBwcm9kdWN0Rm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNzaW5nbGUtcHJvZHVjdC0tYWRkLXRvLWNhcnQtZm9ybScpLFxuICAvLyAgICAgYWRkUHJvZHVjdFRvQ2FydCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNzaW5nbGUtcHJvZHVjdC0tYWRkLXRvLWNhcnQnKTtcbiAgXG4gIC8vIGlmIChhZGRQcm9kdWN0VG9DYXJ0KSB7XG5cbiAgLy8gICBhZGRQcm9kdWN0VG9DYXJ0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xuICAvLyAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAvLyAgICAgdmFyIGFkZFRvQ2FydERyYXdlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hbGVydC0tYWRkLXRvLWNhcnQnKTtcbiAgICAgIFxuICAvLyAgICAgYXRvbWljKHdpbmRvdy5sb2NhdGlvbi5vcmlnaW4gKyAnP2FkZC10by1jYXJ0PScgKyBlLnRhcmdldC52YWx1ZSlcbiAgLy8gICAgICAgLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcbiAgLy8gICAgICAgICBhZGRUb0NhcnREcmF3ZXIuY2xhc3NMaXN0LmFkZCgnYWxlcnQtLWlzLWFjdGl2ZScpO1xuICAgICAgICAgIFxuICAvLyAgICAgICAgIGFkZFByb2R1Y3RUb0NhcnQoZS50YXJnZXQudmFsdWUpO1xuXG4gIC8vICAgICAgICAgZnVuY3Rpb24gYWRkUHJvZHVjdFRvQ2FydChwcm9kdWN0SUQpIHtcblxuICAvLyAgICAgICAgICAgLy8gQ2hlY2sgZm9yIGNhcnQgaXRlbSB0ZW1wbGF0ZSBhbmQgY29weSB0aGUgc3RydWN0dXJlXG4gIC8vICAgICAgICAgICB2YXIgYWxlcnRDYXJ0SXRlbVRlbXBsYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFsZXJ0LS1jYXJ0LWl0ZW0nKS5pbm5lckhUTUw7XG5cbiAgLy8gICAgICAgICAgIHZhciBhZGRJdGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggJ2xpJyApO1xuICAvLyAgICAgICAgICAgYWRkSXRlbS5jbGFzc0xpc3QuYWRkKCdhbGVydC0tY2FydC1pdGVtJyk7XG4gIC8vICAgICAgICAgICBhZGRJdGVtLmRhdGFzZXQucHJvZHVjdElEID0gcHJvZHVjdElEO1xuICAvLyAgICAgICAgICAgYWRkSXRlbS5pbm5lckhUTUwgPSBhbGVydENhcnRJdGVtVGVtcGxhdGU7XG5cbiAgLy8gICAgICAgICAgIHZhciBwcm9kdWN0TmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbnRyeS10aXRsZScpLmlubmVyVGV4dDtcbiAgLy8gICAgICAgICAgIHZhciBwcm9kdWN0U0tVID0gcHJvZHVjdE5hbWUuc3BsaXQoJyAnKS5zcGxpY2UoLTEsIDEpO1xuICAvLyAgICAgICAgICAgdmFyIGNvbnNvbGlkYXRlZFByb2R1Y3ROYW1lID0gcHJvZHVjdE5hbWUucmVwbGFjZSgnSm9obiBEZWVyZSAnLCAnJykucmVwbGFjZShwcm9kdWN0U0tVLCAnJyk7XG5cbiAgLy8gICAgICAgICAgIGFkZEl0ZW0ucXVlcnlTZWxlY3RvcignLmFsZXJ0LS1jYXJ0LXBhcnQtbnVtYmVyJykuaW5uZXJUZXh0ID0gd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lLnNwbGl0KCcvJylbMl0udG9VcHBlckNhc2UoKTtcbiAgLy8gICAgICAgICAgIGFkZEl0ZW0ucXVlcnlTZWxlY3RvcignLmFsZXJ0LS1jYXJ0LXBhcnQtdHlwZScpLmlubmVyVGV4dCA9IGNvbnNvbGlkYXRlZFByb2R1Y3ROYW1lO1xuXG4gIC8vICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWxlcnQtLWNhcnQtbGlzdCcpLmFwcGVuZENoaWxkKGFkZEl0ZW0pO1xuICAvLyAgICAgICAgIH1cbiAgLy8gICAgICAgfSlcblxuICAvLyAgIH0pXG4gIC8vIH1cblxuXG59KShqUXVlcnkpOyIsIihmdW5jdGlvbigkKSB7XG5cbiAgJCgnI2ZpbHRlci0tc2VsZWN0LWZpdG1lbnQnKS5vbignY2hhbmdlJywgZmlsdGVyUHJvZHVjdFJlc3VsdHMpO1xuXG4gIGZ1bmN0aW9uIGZpbHRlclByb2R1Y3RSZXN1bHRzKGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgZG9jdW1lbnQubG9jYXRpb24gPSB3aW5kb3cubG9jYXRpb24ub3JpZ2luICsgJy9wYXJ0LWNhdGFsb2cvJyArICQodGhpcykudmFsKCk7XG4gICAgLy8gJC5hamF4KHtcbiAgICAvLyAgIHVybDogd2luZG93LmxvY2F0aW9uLm9yaWdpbiArICcvcGFydC1jYXRhbG9nLycgKyAkKHRoaXMpLnZhbCgpLFxuICAgIC8vICAgc3VjY2VzczogZnVuY3Rpb24ocmVzKSB7XG4gICAgLy8gICAgIGNvbnNvbGUubG9nKHJlcyk7XG4gICAgLy8gICB9XG4gICAgLy8gfSlcbiAgfVxuXG59KShqUXVlcnkpOyIsIihmdW5jdGlvbigkKSB7XG4gIFxuICB2YXIgc3Bpbm5lciA9ICQoJy5wbGFjZWhvbGRlcicpO1xuICB2YXIgZm9ybSA9ICQoJy5xdWljay1vcmRlci1mb3JtJyk7XG4gIHZhciBwcm9kdWN0cyA9IGZvcm0uc2libGluZ3MoJy5nZnAtb3JkZXItZGV0YWlscy0tbGlzdCcpO1xuICB2YXIgY2hlY2tvdXQgPSBmb3JtLnNpYmxpbmdzKCcuY2hlY2tvdXQnKTtcblxuICBmb3JtLm9uKCdzdWJtaXQnLCBhZGRQYXJ0KTtcbiAgcHJvZHVjdHMub24oJ2NsaWNrJywgJy5yZW1vdmUnLCByZW1vdmVQYXJ0KTtcbiAgcHJvZHVjdHMub24oJ2tleXVwJywgJ2lucHV0W25hbWU9XCJwYXJ0LXF0eVwiXScsIGNoYW5nZVBhcnRRdHkpO1xuICBjaGVja291dC5vbignY2xpY2snLCAnYnV0dG9uJywgYnVpbGRDYXJ0KTtcblxuICBmdW5jdGlvbiBhZGRQYXJ0KGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgdmFyIHNrdUlucHV0ID0gJCh0aGlzKS5maW5kKCcjc2t1Jyk7XG4gICAgdmFyIHF0eUlucHV0ID0gJCh0aGlzKS5maW5kKCcjcXR5Jyk7XG4gICAgdmFyIHNrdSA9IHNrdUlucHV0LnZhbCgpO1xuICAgIHZhciBxdHkgPSBxdHlJbnB1dC52YWwoKTtcblxuICAgIHNrdUlucHV0LnZhbCgnJyk7XG4gICAgc2t1SW5wdXQuZm9jdXMoKTtcbiAgICBxdHlJbnB1dC52YWwoJzEnKTtcbiAgICBcbiAgICBzaG93U3Bpbm5lcigpO1xuICAgIGhpZGVFcnJvcnMoKTtcblxuICAgICQuYWpheCh7XG4gICAgICB1cmw6IHdpbmRvdy5hamF4X29yZGVyX3RyYWNraW5nLmFqYXhfdXJsLFxuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICBkYXRhOiB7XG4gICAgICAgIGFjdGlvbjogJ2dldF9wcm9kdWN0X2luZm8nLFxuICAgICAgICBfYWpheF9ub25jZTogd2luZG93LmFqYXhfb3JkZXJfdHJhY2tpbmcubm9uY2UsXG4gICAgICAgIHNrdTogc2t1LFxuICAgICAgICBxdHk6IHF0eVxuICAgICAgfSxcbiAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKHJlcykge1xuICAgICAgICBoaWRlU3Bpbm5lcigpO1xuICAgICAgICBzaG93UHJvZHVjdHMoKTtcbiAgICAgICAgZm9ybWF0UmVzdWx0cyhyZXMsIHF0eSk7XG4gICAgICB9XG4gICAgfSlcbiAgfVxuXG4gIGZ1bmN0aW9uIHNob3dTcGlubmVyKCkge1xuICAgIHNwaW5uZXIucmVtb3ZlQ2xhc3MoJ3Zpc3VhbGx5LWhpZGRlbicpO1xuICB9XG5cbiAgZnVuY3Rpb24gaGlkZVNwaW5uZXIoKSB7XG4gICAgc3Bpbm5lci5hZGRDbGFzcygndmlzdWFsbHktaGlkZGVuJyk7IFxuICB9XG5cbiAgZnVuY3Rpb24gaGlkZUVycm9ycygpIHtcbiAgICBwcm9kdWN0cy5maW5kKCcuZXJyb3InKS5yZW1vdmUoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHNob3dQcm9kdWN0cygpIHtcbiAgICBwcm9kdWN0cy5yZW1vdmVDbGFzcygndmlzdWFsbHktaGlkZGVuJyk7XG4gIH1cblxuICBmdW5jdGlvbiBmb3JtYXRSZXN1bHRzKHJlcywgcXR5KSB7XG4gICAgaWYgKHJlcy5zdGF0dXMgPT09ICdmYWlsZWQnKSB7XG4gICAgICBwcm9kdWN0cy5wcmVwZW5kKCc8bGkgY2xhc3M9XCJnZnAtb3JkZXItZGV0YWlscy0taXRlbSBlcnJvclwiPjxidXR0b24gY2xhc3M9XCJyZW1vdmVcIj4mdGltZXM7PC9idXR0b24+U29ycnksIHRoYXQgZG9lc25cXCd0IGxvb2sgbGlrZSBhIHBhcnQgd2UgY2FycnkuPGJyPlBsZWFzZSBkb3VibGUgY2hlY2sgeW91ciBwYXJ0IG51bWJlciBhbmQgdHJ5IGFnYWluLjwvbGk+Jyk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgcHJvZHVjdHMuYXBwZW5kKCc8bGkgY2xhc3M9XCJnZnAtb3JkZXItZGV0YWlscy0taXRlbVwiIGRhdGEtcHJvZHVjdC1pZD1cIicgKyByZXMuaWQgKyAnXCIgZGF0YS1wcm9kdWN0LXByaWNlPVwiJyArIHJlcy5wcmljZSArICdcIj48YnV0dG9uIGNsYXNzPVwicmVtb3ZlXCI+JnRpbWVzOzwvYnV0dG9uPjxkaXYgY2xhc3M9XCJnZnAtb3JkZXItZGV0YWlscy0taXRlbS1pbWFnZVwiPjxhIGhyZWY9XCInICsgcmVzLmxpbmsgKyAnXCI+JyArIHJlcy5pbWcgKyAnPC9hPjwvZGl2PjxkaXYgY2xhc3M9XCJnZnAtb3JkZXItZGV0YWlscy0taXRlbS1kZXRhaWxzXCI+PGRpdiBjbGFzcz1cImdmcC1vcmRlci1kZXRhaWxzLS1pdGVtLW5hbWVcIj48YSBocmVmPVwiJyArIHJlcy5saW5rICsgJ1wiPicgKyByZXMubmFtZSArICc8L2E+PC9kaXY+PGRpdiBjbGFzcz1cImdmcC1vcmRlci1kZXRhaWxzLS1pdGVtLXByaWNlXCI+JDxzcGFuIGNsYXNzPVwic3VidG90YWxcIj4nICsgKE51bWJlcihyZXMucHJpY2UpICogcXR5KS50b0ZpeGVkKDIpICsgJzwvc3Bhbj4gPHNwYW4gY2xhc3M9XCJlYWNoLXByaWNlXCI+LSAkJyArIE51bWJlcihyZXMucHJpY2UpLnRvRml4ZWQoMikgKyAnIGVhY2g8L3NwYW4+PC9kaXY+PGRpdiBjbGFzcz1cImdmcC1vcmRlci1kZXRhaWxzLS1pdGVtLXF1YW50aXR5XCI+UXVhbnRpdHk6IDxpbnB1dCB0eXBlPVwibnVtYmVyXCIgbWluPVwiMVwiIG1heD1cIjEwMFwiIG5hbWU9XCJwYXJ0LXF0eVwiIHZhbHVlPVwiJyArIHF0eSArICdcIiAvPjwvZGl2PjwvZGl2PjwvbGk+Jyk7XG5cbiAgICBzaG93Q2hlY2tvdXRCdXR0b24oKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlbW92ZVBhcnQoZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAkKHRoaXMpLnBhcmVudCgpLnJlbW92ZSgpO1xuICAgIHZhciBwcm9kdWN0SUQgPSAkKHRoaXMpLnBhcmVudHMoJy5nZnAtb3JkZXItZGV0YWlscy0taXRlbScpLmRhdGEoJ3Byb2R1Y3RJZCcpO1xuICB9XG5cbiAgZnVuY3Rpb24gc2hvd0NoZWNrb3V0QnV0dG9uKCkge1xuICAgIGNoZWNrb3V0LnJlbW92ZUNsYXNzKCd2aXN1YWxseS1oaWRkZW4nKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNoYW5nZVBhcnRRdHkoKSB7XG4gICAgdmFyIHByb2R1Y3RJRCA9ICQodGhpcykucGFyZW50cygnLmdmcC1vcmRlci1kZXRhaWxzLS1pdGVtJykuZGF0YSgncHJvZHVjdElkJyk7XG4gICAgdmFyIHByb2R1Y3RQcmljZSA9ICQodGhpcykucGFyZW50cygnLmdmcC1vcmRlci1kZXRhaWxzLS1pdGVtJykuZGF0YSgncHJvZHVjdFByaWNlJyk7XG4gICAgdmFyIG5ld1F0eSA9IE51bWJlcigkKHRoaXMpLnZhbCgpKTtcbiAgICB2YXIgbmV3U3VidG90YWwgPSBOdW1iZXIocHJvZHVjdFByaWNlKSAqIG5ld1F0eTtcbiAgICAkKHRoaXMpLnBhcmVudHMoJy5nZnAtb3JkZXItZGV0YWlscy0taXRlbScpLmZpbmQoJy5nZnAtb3JkZXItZGV0YWlscy0taXRlbS1wcmljZSAuc3VidG90YWwnKS50ZXh0KG5ld1N1YnRvdGFsLnRvRml4ZWQoMikpO1xuICB9XG5cbiAgZnVuY3Rpb24gYnVpbGRDYXJ0KGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgJCh0aGlzKS5wcm9wKCdkaXNhYmxlZCcsIHRydWUpLmh0bWwoJzxpbWcgc3JjPVwiJyArIHdpbmRvdy5sb2NhdGlvbi5vcmlnaW4gKyAnL3dwLWNvbnRlbnQvdGhlbWVzL2dmcC9kaXN0L2ltZy9zcGlubmVyLS1saWdodC5zdmdcIiBhbHQ9XCJzcGlubmVyXCIgY2xhc3M9XCJzcGlubmVyXCIgc3R5bGU9XCJ2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyBtYXgtd2lkdGg6IDI1cHg7IG1hcmdpbi1yaWdodDogMC41cmVtO1wiPiBBZGRpbmcgSXRlbXMgdG8gQ2FydCcpO1xuICAgIHZhciBpdGVtcyA9IHByb2R1Y3RzLmZpbmQoJ2xpJyk7XG4gICAgdmFyIHByb2R1Y3RzVG9BZGQgPSBbXTtcbiAgICAkLmVhY2goaXRlbXMsIGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGlkID0gJCh0aGlzKS5kYXRhKCdwcm9kdWN0SWQnKTtcbiAgICAgIHZhciBxdHkgPSAkKHRoaXMpLmZpbmQoJ2lucHV0W25hbWU9XCJwYXJ0LXF0eVwiXScpLnZhbCgpO1xuICAgICAgcHJvZHVjdHNUb0FkZC5wdXNoKHtcbiAgICAgICAgaWQ6IGlkLFxuICAgICAgICBxdHk6IE51bWJlcihxdHkpXG4gICAgICB9KVxuICAgIH0pO1xuICAgIFxuICAgICQuYWpheCh7XG4gICAgICB1cmw6IHdpbmRvdy5hamF4X29yZGVyX3RyYWNraW5nLmFqYXhfdXJsLFxuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICBkYXRhOiB7XG4gICAgICAgIGFjdGlvbjogJ2FkZF9tdWx0aXBsZV9pdGVtcycsXG4gICAgICAgIF9hamF4X25vbmNlOiB3aW5kb3cuYWpheF9vcmRlcl90cmFja2luZy5ub25jZSxcbiAgICAgICAgaXRlbXM6IHByb2R1Y3RzVG9BZGRcbiAgICAgIH0sXG4gICAgICBzdWNjZXNzOiBmdW5jdGlvbihyZXMpIHtcbiAgICAgICAgaWYgKHJlcy5zdWNjZXNzID09PSB0cnVlKSB7XG4gICAgICAgICAgZ2EoJ3NlbmQnLCAnZXZlbnQnLCB7XG4gICAgICAgICAgICBldmVudENhdGVnb3J5OiAnRm9ybScsXG4gICAgICAgICAgICBldmVudEFjdGlvbjogJ1F1aWNrIE9yZGVyIEZvcm0nLFxuICAgICAgICAgICAgZXZlbnRMYWJlbDogcHJvZHVjdHNUb0FkZC5sZW5ndGggKyAnIHByb2R1Y3RzJyxcbiAgICAgICAgICAgIGhpdENhbGxiYWNrOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgZG9jdW1lbnQubG9jYXRpb24gPSAnL2NhcnQvJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG5cbiAgICAvLyBjb25zb2xlLmxvZyhwcm9kdWN0c1RvQWRkKTtcbiAgfVxuXG59KShqUXVlcnkpOyIsIihmdW5jdGlvbigkKSB7XG5cbiAgdmFyIGNhcnREcmF3ZXIgPSAkKCcuZHJhd2VyLS1hZGQtdG8tY2FydCcpO1xuICB2YXIgY2FydEl0ZW1MaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmRyYXdlci0taXRlbXMtbGlzdCcpO1xuICB2YXIgY2xvc2VEcmF3ZXJCdXR0b24gPSAkKCcuY2xvc2UtZHJhd2VyJyk7XG4gIHZhciBvcGVuRHJhd2VyQnV0dG9uID0gJCgnLm9wZW4tZHJhd2VyJyk7XG4gIHZhciBhZGRUb0NhcnRCdXR0b24gPSAkKCcuYWRkLXRvLWNhcnQnKTtcbiAgdmFyIGJvZHkgPSAkKCdib2R5Jyk7XG4gIHZhciBjYXJ0U3VidG90YWwgPSAkKCcuZHJhd2VyLS1hZGQtdG8tY2FydCAuc3VidG90YWwtYW1vdW50Jyk7XG4gIHZhciBpdGVtQ291bnRUZXh0ID0gJCgnLmRyYXdlci0tYWRkLXRvLWNhcnQgLml0ZW0tY291bnQnKTtcbiAgLy8gdmFyIGNhcnRJdGVtQ291bnQgPSAwO1xuICAvLyB2YXIgaXRlbUlucHV0cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5kcmF3ZXItLWl0ZW0gLmRyYXdlci1pdGVtLWlucHV0Jyk7XG5cbiAgLy8gYm9keS5vbignY2xpY2snLCBmdW5jdGlvbigpIHtcbiAgLy8gICAkLmFqYXgoe1xuICAvLyAgICAgdXJsOiB3aW5kb3cubG9jYXRpb24ub3JpZ2luICsgJy93cC1hZG1pbi9hZG1pbi1hamF4LnBocCcsXG4gIC8vICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgLy8gICAgIGRhdGE6IHtcbiAgLy8gICAgICAgYWN0aW9uOiAnZ2V0X2NhcnQnLFxuICAvLyAgICAgfSxcbiAgLy8gICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKHJlc3VsdHMpIHtcbiAgLy8gICAgICAgY29uc29sZS5sb2cocmVzdWx0cyk7XG4gIC8vICAgICB9XG4gIC8vICAgfSlcbiAgLy8gfSk7XG5cblxuICBjbG9zZURyYXdlckJ1dHRvbi5vbignY2xpY2snLCBjbG9zZURyYXdlcik7XG5cbiAgYm9keS5vbignY2xpY2snLCAnLm9wZW4tZHJhd2VyJywgb3BlbkRyYXdlcik7XG4gIGJvZHkub24oJ2NsaWNrJywgJy5hZGQtdG8tY2FydCcsIGFkZExpbmVJdGVtKTtcblxuICAvLyBhZGRUb0NhcnRCdXR0b24ub24oJ2NsaWNrJywgYWRkTGluZUl0ZW0pO1xuXG4gIGJvZHkub24oJ2NoYW5nZScsICcuZHJhd2VyLS1pdGVtIC5kcmF3ZXItaXRlbS1pbnB1dCcsIGZ1bmN0aW9uKGUpIHtcbiAgICB2YXIgaXRlbSA9ICQodGhpcykucGFyZW50cygnLmRyYXdlci0taXRlbScpO1xuICAgIGNoYW5nZVF1YW50aXR5KGl0ZW0pO1xuICB9KVxuXG4gIGJvZHkub24oJ2tleXVwJywgZnVuY3Rpb24oZSkge1xuICAgIGlmICgoZS5rZXlDb2RlID09PSAyNykgJiYgYm9keS5oYXNDbGFzcygnY2FydC1kcmF3ZXItLW9wZW4nKSkge1xuICAgICAgY2xvc2VEcmF3ZXIoKTtcbiAgICB9XG4gIH0pO1xuXG4gIGNhcnREcmF3ZXIub24oJ2NsaWNrJywgJy5kcmF3ZXItcmVtb3ZlLWl0ZW0nLCBmdW5jdGlvbigpIHtcbiAgICB2YXIgZWxlbSA9ICQodGhpcyk7XG4gICAgcmVtb3ZlTGluZUl0ZW0oZWxlbSk7XG4gIH0pO1xuXG4gIGZ1bmN0aW9uIG9wZW5EcmF3ZXIoKSB7XG4gICAgaWYgKGJvZHkuaGFzQ2xhc3MoJ3dvb2NvbW1lcmNlLWNhcnQnKSkge1xuICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZChmYWxzZSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgICQoJ2JvZHknKS5hZGRDbGFzcygnY2FydC1kcmF3ZXItLW9wZW4nKS5yZW1vdmVDbGFzcygnY2FydC1kcmF3ZXItLWNsb3NlZCcpO1xuICB9XG5cbiAgZnVuY3Rpb24gY2xvc2VEcmF3ZXIoKSB7XG4gICAgYm9keS5yZW1vdmVDbGFzcygnY2FydC1kcmF3ZXItLW9wZW4nKS5hZGRDbGFzcygnY2FydC1kcmF3ZXItLWNsb3NlZCcpO1xuICB9XG5cbiAgZnVuY3Rpb24gdXBkYXRlQ2FydENvdW50KGl0ZW1zLCBzdWJ0b3RhbCkge1xuICAgIHZhciBjb3VudCA9IDA7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBpdGVtcy5sZW5ndGg7IGkrKykge1xuICAgICAgY291bnQgKz0gcGFyc2VJbnQoaXRlbXNbaV0ucHJvZHVjdFF0eSk7XG4gICAgfVxuICAgIGlmICgoY291bnQgPiAxKSB8fCAoY291bnQgPT09IDApKSB7XG4gICAgICBpdGVtQ291bnRUZXh0LnRleHQoY291bnQgKyAnIEl0ZW1zIGluIHlvdXIgQ2FydCcpO1xuICAgIH0gZWxzZSB7XG4gICAgICBpdGVtQ291bnRUZXh0LnRleHQoY291bnQgKyAnIEl0ZW0gaW4geW91ciBDYXJ0Jyk7XG4gICAgfVxuICAgICQoJy5jYXJ0LS1jb3VudCcpLnRleHQoY291bnQpO1xuXG4gICAgaWYgKCg0OS45OSAtIHN1YnRvdGFsKSA8IDAuMDEpIHtcbiAgICAgICQoJy5jb3VudGRvd24tdG8tZnJlZS1zaGlwcGluZyAuZnJlZScpLnNob3coKTtcbiAgICAgICQoJy5jb3VudGRvd24tdG8tZnJlZS1zaGlwcGluZyAubm90LWZyZWUnKS5oaWRlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgICQoJy5jb3VudGRvd24tdG8tZnJlZS1zaGlwcGluZyAuZnJlZScpLmhpZGUoKTtcbiAgICAgICQoJy5jb3VudGRvd24tdG8tZnJlZS1zaGlwcGluZyAubm90LWZyZWUnKS5zaG93KClcbiAgICAgICQoJy5jb3VudGRvd24tdG8tZnJlZS1zaGlwcGluZyAuY291bnRkb3duJykudGV4dCgoNDkuOTkgLSBzdWJ0b3RhbCkudG9GaXhlZCgyKSk7XG4gICAgICAkKCcucHJvZ3Jlc3MgLmJhciAuc3RhdHVzJykuYW5pbWF0ZSh7XG4gICAgICAgIHdpZHRoOiAoKHN1YnRvdGFsIC8gNDkuOTkpICogMTAwKS50b0ZpeGVkKDIpICsgJyUnXG4gICAgICB9KTtcbiAgICB9XG5cbiAgfVxuXG4gIGZ1bmN0aW9uIHVwZGF0ZUNhcnRTdWJ0b3RhbChhbW91bnQpIHtcbiAgICBjYXJ0U3VidG90YWwudGV4dCgnJCcgKyBhbW91bnQpO1xuICB9XG5cbiAgZnVuY3Rpb24gYWRkTGluZUl0ZW0oZSkge1xuICAgIC8vIGNvbnNvbGUubG9nKGUudGFyZ2V0KTtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgdmFyIHByb2R1Y3RJRCA9ICQodGhpcykuYXR0cigndmFsdWUnKTtcbiAgICAvLyBjb25zb2xlLmxvZyhwcm9kdWN0SUQpO1xuICAgICQuYWpheCh7XG4gICAgICB1cmw6IHdpbmRvdy5sb2NhdGlvbi5vcmlnaW4gKyAnL3dwLWFkbWluL2FkbWluLWFqYXgucGhwJyxcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgZGF0YToge1xuICAgICAgICBhY3Rpb246ICdhZGRfaXRlbV90b19jYXJ0JyxcbiAgICAgICAgX2FqYXhfbm9uY2U6IHdpbmRvdy5hamF4X29yZGVyX3RyYWNraW5nLm5vbmNlLFxuICAgICAgICBwcm9kdWN0X2lkOiBwcm9kdWN0SURcbiAgICAgIH0sXG4gICAgICBzdWNjZXNzOiBmdW5jdGlvbihyZXN1bHRzKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdHMpO1xuICAgICAgICBjYXJ0U3VidG90YWwudGV4dCgnJCcgKyByZXN1bHRzLnN1YnRvdGFsKTtcbiAgICAgICAgcG9wdWxhdGVDYXJ0KHJlc3VsdHMubGluZUl0ZW1zKTtcbiAgICAgICAgdXBkYXRlQ2FydENvdW50KHJlc3VsdHMubGluZUl0ZW1zLCByZXN1bHRzLnN1YnRvdGFsKTtcbiAgICAgIH1cbiAgICB9KVxuICAgIG9wZW5EcmF3ZXIoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlbW92ZUxpbmVJdGVtKGVsZW0pIHtcbiAgICB2YXIgcHJvZHVjdElEID0gZWxlbS5wYXJlbnRzKCcuZHJhd2VyLS1pdGVtJykuZGF0YSgncHJvZHVjdC1pZCcpO1xuICAgIHZhciBwcm9kdWN0S2V5ID0gZWxlbS5wYXJlbnRzKCcuZHJhd2VyLS1pdGVtJykuZGF0YSgncHJvZHVjdC1rZXknKTtcbiAgICBlbGVtLnBhcmVudHMoJy5kcmF3ZXItLWl0ZW0nKS5hZGRDbGFzcygncmVtb3ZlJyk7XG4gICAgZWxlbS5wYXJlbnRzKCcuZHJhd2VyLS1pdGVtJykub24oJ3RyYW5zaXRpb25lbmQnLCBmdW5jdGlvbigpIHtcbiAgICAgICQodGhpcykucmVtb3ZlKCk7XG4gICAgfSlcbiAgICAkLmFqYXgoe1xuICAgICAgdXJsOiB3aW5kb3cubG9jYXRpb24ub3JpZ2luICsgJy93cC1hZG1pbi9hZG1pbi1hamF4LnBocCcsXG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgYWN0aW9uOiAncmVtb3ZlX2l0ZW1fZnJvbV9jYXJ0JyxcbiAgICAgICAgX2FqYXhfbm9uY2U6IHdpbmRvdy5hamF4X29yZGVyX3RyYWNraW5nLm5vbmNlLFxuICAgICAgICBwcm9kdWN0X2lkOiBwcm9kdWN0SUQsXG4gICAgICAgIHByb2R1Y3Rfa2V5OiBwcm9kdWN0S2V5XG4gICAgICB9LFxuICAgICAgc3VjY2VzczogZnVuY3Rpb24ocmVzdWx0cykge1xuICAgICAgICBjYXJ0U3VidG90YWwudGV4dCgnJCcgKyByZXN1bHRzLnN1YnRvdGFsKTtcbiAgICAgICAgdXBkYXRlQ2FydENvdW50KHJlc3VsdHMubGluZUl0ZW1zLCByZXN1bHRzLnN1YnRvdGFsKTtcbiAgICAgIH0sXG4gICAgICBlcnJvcjogZnVuY3Rpb24oZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgICAgfVxuICAgIH0pXG4gIH1cblxuICBmdW5jdGlvbiBjaGFuZ2VRdWFudGl0eShpdGVtKSB7XG4gICAgdmFyIHByb2R1Y3RJRCA9IGl0ZW0uZGF0YSgncHJvZHVjdC1pZCcpO1xuICAgIHZhciBwcm9kdWN0S2V5ID0gaXRlbS5kYXRhKCdwcm9kdWN0LWtleScpO1xuICAgIHZhciB2YWwgPSBpdGVtLmZpbmQoJ2lucHV0LmRyYXdlci1pdGVtLWlucHV0JykudmFsKCk7XG4gICAgY29uc29sZS5sb2cocHJvZHVjdElELCBwcm9kdWN0S2V5LCB2YWwpO1xuICAgICQuYWpheCh7XG4gICAgICB1cmw6IHdpbmRvdy5sb2NhdGlvbi5vcmlnaW4gKyAnL3dwLWFkbWluL2FkbWluLWFqYXgucGhwJyxcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgZGF0YToge1xuICAgICAgICBhY3Rpb246ICdpbmNyZW1lbnRfaXRlbV9pbl9jYXJ0JyxcbiAgICAgICAgX2FqYXhfbm9uY2U6IHdpbmRvdy5hamF4X29yZGVyX3RyYWNraW5nLm5vbmNlLFxuICAgICAgICBwcm9kdWN0X2lkOiBwcm9kdWN0SUQsXG4gICAgICAgIHByb2R1Y3Rfa2V5OiBwcm9kdWN0S2V5LFxuICAgICAgICBxdHk6IHBhcnNlSW50KHZhbClcbiAgICAgIH0sXG4gICAgICBzdWNjZXNzOiBmdW5jdGlvbihyZXN1bHRzKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdHMpO1xuICAgICAgICBjYXJ0U3VidG90YWwudGV4dCgnJCcgKyByZXN1bHRzLnN1YnRvdGFsKTtcbiAgICAgICAgdXBkYXRlQ2FydENvdW50KHJlc3VsdHMubGluZUl0ZW1zLCByZXN1bHRzLnN1YnRvdGFsKTtcbiAgICAgIH0sXG4gICAgICBlcnJvcjogZnVuY3Rpb24oZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcG9wdWxhdGVDYXJ0KGxpbmVJdGVtcykge1xuICAgIGNvbnNvbGUubG9nKGxpbmVJdGVtcyk7XG4gICAgY2FydEl0ZW1MaXN0LmlubmVySFRNTCA9IGxpbmVJdGVtcy5tYXAoZnVuY3Rpb24oaXRlbSkge1xuICAgICAgaWYgKGl0ZW0uU2FsZVByaWNlICE9PSBcIlwiKSB7XG4gICAgICAgIHZhciBwcmljZUhUTUwgPSAnPHAgY2xhc3M9XCJkcmF3ZXItaXRlbS1wcmljZVwiPjxzcGFuIGNsYXNzPVwiZHJhd2VyLWl0ZW0tc2t1XCI+JyArIGl0ZW0ucHJvZHVjdFNrdSArICc8L3NwYW4+IC0gJCcgKyBpdGVtLnByb2R1Y3RSZWd1bGFyUHJpY2UgKyAnIGVhY2g8L3A+JztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciBwcmljZUhUTUwgPSAnPHAgY2xhc3M9XCJkcmF3ZXItaXRlbS1wcmljZVwiPlllcyBTYWxlPC9wPic7XG4gICAgICB9XG4gICAgICByZXR1cm4gKFxuICAgICAgICAnPGxpIGNsYXNzPVwiZHJhd2VyLS1pdGVtXCIgZGF0YS1wcm9kdWN0LWlkPVwiJyArIGl0ZW0ucHJvZHVjdElEICsgJ1wiIGRhdGEtcHJvZHVjdC1rZXk9XCInICsgaXRlbS5wcm9kdWN0S2V5ICsgJ1wiPicgKyBcbiAgICAgICAgICAnPGRpdiBjbGFzcz1cImRyYXdlci1pdGVtLWFjdGlvblwiPicgK1xuICAgICAgICAgICAgJzxidXR0b24gY2xhc3M9XCJkcmF3ZXItcmVtb3ZlLWl0ZW1cIj4mdGltZXM7PC9idXR0b24+JyArXG4gICAgICAgICAgJzwvZGl2PicgK1xuICAgICAgICAgICc8ZGl2IGNsYXNzPVwiZHJhd2VyLWl0ZW0taW1hZ2VcIj4nICtcbiAgICAgICAgICAgICc8YSBocmVmPVwiJyArIGl0ZW0ucHJvZHVjdFBlcm1hbGluayArICdcIj4nICtcbiAgICAgICAgICAgICAgaXRlbS5wcm9kdWN0SW1nICtcbiAgICAgICAgICAgICc8L2E+JyArXG4gICAgICAgICAgJzwvZGl2PicgK1xuICAgICAgICAgICc8ZGl2IGNsYXNzPVwiZHJhd2VyLWl0ZW0tY29udGVudFwiPicgK1xuICAgICAgICAgICAgJzxwIGNsYXNzPVwiZHJhd2VyLWl0ZW0tdGl0bGVcIj48YSBocmVmPVwiJyArIGl0ZW0ucHJvZHVjdFBlcm1hbGluayArICdcIj4nICsgaXRlbS5wcm9kdWN0TmFtZSArICc8L2E+PC9wPicgK1xuICAgICAgICAgICAgICBwcmljZUhUTUwgK1xuICAgICAgICAgICAgJzxsYWJlbCBmb3I9XCJcIiBjbGFzcz1cImRyYXdlci1pdGVtLWxhYmVsXCI+UXVhbnRpdHk6PC9sYWJlbD4nICtcbiAgICAgICAgICAgICc8aW5wdXQgdHlwZT1cIm51bWJlclwiIGNsYXNzPVwiZHJhd2VyLWl0ZW0taW5wdXRcIiBtaW49XCIxXCIgc3RlcD1cIjFcIiB2YWx1ZT1cIicgKyBpdGVtLnByb2R1Y3RRdHkgKyAnXCI+JyArXG4gICAgICAgICAgJzwvZGl2PicgK1xuICAgICAgICAnPC9saT4nXG4gICAgICApO1xuICAgIH0pLmpvaW4oJycpO1xuICB9XG5cbn0pKGpRdWVyeSk7IiwiKGZ1bmN0aW9uKCkge1xuICB2YXIgYWNjb3JkaWFuQnV0dG9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5hY2NvcmRpYW4tLXRpdGxlJyk7XG4gIGlmIChhY2NvcmRpYW5CdXR0b25zKSB7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFjY29yZGlhbkJ1dHRvbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGFjY29yZGlhbkJ1dHRvbnNbaV0ucGFyZW50RWxlbWVudC5jbGFzc0xpc3QuYWRkKCdhY2NvcmRpYW4tLWlzLWNvbGxhcHNlZCcpO1xuICAgICAgYWNjb3JkaWFuQnV0dG9uc1tpXS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgdmFyIGNvbnRhaW5pbmdFbGVtZW50ID0gZS50YXJnZXQucGFyZW50RWxlbWVudDtcbiAgICAgICAgaWYgKGNvbnRhaW5pbmdFbGVtZW50LmNsYXNzTGlzdC5jb250YWlucygnYWNjb3JkaWFuLS1pcy1jb2xsYXBzZWQnKSkge1xuICAgICAgICAgIGUudGFyZ2V0LnBhcmVudEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnYWNjb3JkaWFuLS1pcy1jb2xsYXBzZWQnKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBlLnRhcmdldC5wYXJlbnRFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2FjY29yZGlhbi0taXMtY29sbGFwc2VkJyk7XG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfVxuICB9XG59KSgpOyIsIihmdW5jdGlvbigpIHtcbiAgdmFyIGFsbFRvb2xUaXBzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnRvb2x0aXAtLXRvZ2dsZScpO1xuICBpZiAoYWxsVG9vbFRpcHMpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFsbFRvb2xUaXBzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBhbGxUb29sVGlwc1tpXS5uZXh0RWxlbWVudFNpYmxpbmcuY2xhc3NMaXN0LmFkZCgndG9vbHRpcC0taXMtaGlkZGVuJyk7XG5cbiAgICAgIGFsbFRvb2xUaXBzW2ldLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xuICAgICAgICBjb25zb2xlLmxvZyhlLnRhcmdldC5uZXh0RWxlbWVudFNpYmxpbmcuY2xhc3NMaXN0LnRvZ2dsZSgndG9vbHRpcC0taXMtaGlkZGVuJykpO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG59KSgpOyIsIi8vIGlmICh3aW5kb3cualF1ZXJ5ICYmIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmNvbnRhaW5zKCdzaW5nbGUtcG9zdCcpKSB7XG5cbiAgKGZ1bmN0aW9uKCQpIHtcblxuXG4gICAgJCgnI21jLWVtYmVkZGVkLXN1YnNjcmliZS1mb3JtJykub24oJ3N1Ym1pdCcsIGZ1bmN0aW9uKGUpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIFxuICAgICAgdmFyICR0aGlzID0gJCh0aGlzKTtcbiAgXG4gICAgICB2YXIgZW1haWwgPSAkdGhpcy5maW5kKCcjbWNlLUVNQUlMJykudmFsKCk7XG4gICAgICB2YXIgZmlyc3ROYW1lID0gJHRoaXMuZmluZCgnI21jZS1GTkFNRScpLnZhbCgpO1xuICAgICAgdmFyIGxhc3ROYW1lID0gJHRoaXMuZmluZCgnI21jZS1MTkFNRScpLnZhbCgpO1xuICAgICAgdmFyIG1vZGVsTnVtYmVyID0gJHRoaXMuZmluZCgnI21jZS1NT0RFTCcpLnZhbCgpO1xuICAgICAgdmFyIGN1cnJlbnRIb3VycyA9ICR0aGlzLmZpbmQoJyNtY2UtQ1VSUkVOVF9IUicpLnZhbCgpO1xuICAgICAgdmFyIG1vd2luZ1RpbWUgPSAkdGhpcy5maW5kKCcjbWNlLU1PV0lOR19USU0nKS52YWwoKTtcbiAgICAgIG1vd2luZ1RpbWUgPSBtb3dpbmdUaW1lLnNwbGl0KCcoJylbMV0uc3BsaXQoJyknKVswXS50b0xvd2VyQ2FzZSgpO1xuICBcbiAgICAgICQuYWpheCh7XG4gICAgICAgIHR5cGU6ICR0aGlzLmF0dHIoJ21ldGhvZCcpLFxuICAgICAgICB1cmw6ICR0aGlzLmF0dHIoJ2FjdGlvbicpLFxuICAgICAgICBkYXRhOiAkdGhpcy5zZXJpYWxpemUoKSxcbiAgICAgICAgY2FjaGU6IGZhbHNlLFxuICAgICAgICBkYXRhVHlwZTogJ2pzb24nLFxuICAgICAgICBjb250ZW50VHlwZTogXCJhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04XCIsXG4gICAgICAgIGVycm9yOiBmdW5jdGlvbihlcnIpIHtcbiAgXG4gICAgICAgIH0sXG4gICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICBpZiAoZGF0YS5yZXN1bHQgIT0gJ3N1Y2Nlc3MnKSB7XG4gICAgICAgICAgICAkKCcjbWNfZW1iZWRfc2lnbnVwX3Njcm9sbCcpLnByZXBlbmQoJzxwIHN0eWxlPVwiYm9yZGVyOiAxcHggc29saWQgcmVkOyBwYWRkaW5nOiAxcmVtO1wiPicgKyBkYXRhLm1zZyArICc8L3A+Jyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICR0aGlzLmhpZGUoKTtcbiAgICAgICAgICAgICQoJ2RpdltkYXRhLW1vZGFsPVwic2lnbi11cC1mb3JtXCJdIC5tb2RhbC1oZWFkaW5nJykudGV4dCgnR3JlYXQgJyArIGZpcnN0TmFtZSArICchJykubmV4dCgpLnRleHQoJ1lvdSB3aWxsIHJlY2VpdmUgYSBjb25maXJtYXRpb24gZW1haWwgc29vbiBhbmQgd2Ugd2lsbCBrZWVwIHlvdSB1cCB0byBkYXRlIG9uIHlvdXIgbmVlZGVkIHBhcnRzLicpO1xuICAgICAgICAgIH1cbiAgICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgdHlwZTogJ1BPU1QnLFxuICAgICAgICAgICAgdXJsOiAnaHR0cHM6Ly9hcGkuZmxvY2suY29tL2hvb2tzL3NlbmRNZXNzYWdlLzg1NTgzMmNkLWJkNzktNDM2ZC05ZjFmLWRjZjAwMjAyNTFkZCcsXG4gICAgICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICAgIFwidGV4dFwiOiBmaXJzdE5hbWUgKyBcIiBcIiArIGxhc3ROYW1lICsgXCIgaGFzIGEgXCIgKyBtb2RlbE51bWJlciArIFwiIHdpdGggXCIgKyBjdXJyZW50SG91cnMgKyBcIiBob3VycyBhbmQgdGFrZXMgXCIgKyBtb3dpbmdUaW1lICsgXCIgdG8gbW93LiBDb250YWN0IFwiICsgZmlyc3ROYW1lICsgXCIgYXQgXCIgKyBlbWFpbFxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICBkYXRhVHlwZTogJ2pzb24nLFxuICAgICAgICAgICAgY29udGVudFR5cGU6IFwiYXBwbGljYXRpb24vanNvblwiXG4gICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgfSk7XG4gIFxuICAgIH0pO1xuICBcbiAgfSkoalF1ZXJ5KTtcblxuLy8gfSIsIihmdW5jdGlvbigpIHtcblxuICB2YXIgYmFzZUZvbnRTaXplID0gcGFyc2VJbnQod2luZG93LmdldENvbXB1dGVkU3R5bGUoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYm9keScpKS5nZXRQcm9wZXJ0eVZhbHVlKCdmb250LXNpemUnKSk7XG5cbiAgdmFyIG5hdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNzdGlja3lOYXYnKTtcblxuICBpZiAobmF2KSB7XG5cbiAgICB2YXIgc2Nyb2xsWSA9IHdpbmRvdy5zY3JvbGxZO1xuICAgIHZhciBuYXZPZmZzZXQgPSBuYXYub2Zmc2V0VG9wO1xuICAgIHZhciBuYXZXaWR0aCA9IG5hdi5jbGllbnRXaWR0aDtcblxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBmdW5jdGlvbigpIHtcbiAgICAgIG5hdk9mZnNldCA9IG5hdi5vZmZzZXRUb3A7XG4gICAgICBjb25zb2xlLmxvZyhuYXZPZmZzZXQpO1xuICAgIH0pO1xuXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgZnVuY3Rpb24oKSB7XG4gICAgICBzY3JvbGxZID0gd2luZG93LnNjcm9sbFk7XG4gICAgICB2YXIgbWFrZVN0aWNreSA9IHNjcm9sbFkgPiAobmF2T2Zmc2V0IC0gKGJhc2VGb250U2l6ZSAqIDMpKTtcblxuICAgICAgaWYgKG1ha2VTdGlja3kpIHtcbiAgICAgICAgbmF2LmNsYXNzTGlzdC5hZGQoJ25hdi0taXMtc3RpY2t5Jyk7XG4gICAgICAgIG5hdi5zdHlsZS5tYXhXaWR0aCA9IG5hdldpZHRoICsgJ3B4JztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5hdi5jbGFzc0xpc3QucmVtb3ZlKCduYXYtLWlzLXN0aWNreScpO1xuICAgICAgfVxuXG5cbiAgICB9KTtcblxuICB9XG5cbn0pKCk7ICIsIihmdW5jdGlvbigpIHtcblxuICB2YXIgYmFzZUZvbnRTaXplID0gcGFyc2VJbnQod2luZG93LmdldENvbXB1dGVkU3R5bGUoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYm9keScpKS5nZXRQcm9wZXJ0eVZhbHVlKCdmb250LXNpemUnKSk7XG4gIHZhciBzdGlja3lDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc3RpY2t5LS1jb250YWluZXInKTtcbiAgdmFyIHN0aWNreUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc3RpY2t5LS1lbGVtZW50Jyk7XG5cbiAgLy8gSWYgZWxlbWVudHMgYXJlIG5vdCBvbiBwYWdlIG9yIHNtYWxsZXIgc2NyZWVuLCBleGl0IGZ1bmN0aW9uXG4gIGlmICghc3RpY2t5Q29udGFpbmVyIHx8ICFzdGlja3lFbGVtZW50IHx8ICh3aW5kb3cuaW5uZXJXaWR0aCA8IDk2MCkpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvLyAgR0VUIFNJQkxJTkcgV0lEVEhcbiAgdmFyIHN0aWNreVNpYmxpbmcgPSBzdGlja3lDb250YWluZXIucGFyZW50RWxlbWVudC5jaGlsZHJlbjtcbiAgQXJyYXkuZnJvbShzdGlja3lTaWJsaW5nKS5mb3JFYWNoKGZ1bmN0aW9uKGNoaWxkKSB7XG4gICAgaWYgKGNoaWxkLmNsYXNzTGlzdC5jb250YWlucygnc3RpY2t5LS1jb250YWluZXInKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBzdGlja3lTaWJsaW5nID0gY2hpbGQ7XG4gIH0pXG4gIHZhciBzdGlja3lTaWJsaW5nV2lkdGggPSBzdGlja3lTaWJsaW5nLm9mZnNldFdpZHRoO1xuXG5cbiAgLy8gZ2V0IHNpemVzIG9mIGVsZW1lbnRzXG4gIHZhciBzdGlja3lDb250YWluZXJIZWlnaHQgPSBzdGlja3lDb250YWluZXIub2Zmc2V0SGVpZ2h0O1xuICB2YXIgc3RpY2t5Q29udGFpbmVyVG9wID0gc3RpY2t5Q29udGFpbmVyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcDtcbiAgLy8gaWYgKHN0aWNreUNvbnRhaW5lclRvcCA8IDApIHtcbiAgLy8gICBjb25zb2xlLmRpcihzdGlja3lDb250YWluZXIpO1xuICAvLyAgIHN0aWNreUNvbnRhaW5lclRvcCA9IHN0aWNreUNvbnRhaW5lci5vZmZzZXRUb3A7XG4gIC8vIH1cbiAgdmFyIHN0aWNreUVsZW1lbnRXaWR0aCA9IHN0aWNreUVsZW1lbnQub2Zmc2V0V2lkdGg7XG4gIHZhciBzdGlja3lFbGVtZW50SGVpZ2h0ID0gc3RpY2t5RWxlbWVudC5vZmZzZXRIZWlnaHQ7XG5cbiAgXG5cbiAgdmFyIHNjcm9sbFkgPSB3aW5kb3cuc2Nyb2xsWTtcblxuICAvLyBmdW4gb24gcGFnZSBsb2FkXG4gIHNldFRpbWVvdXQod2F0Y2hGb3JTdGlja3ksIDUwMCk7XG4gIFxuICAvLyBjb25zb2xlLmxvZyhzdGlja3lDb250YWluZXJUb3ApO1xuICAvLyAgIGNvbnNvbGUubG9nKHN0aWNreUNvbnRhaW5lci5vZmZzZXRUb3ApO1xuXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCBmdW5jdGlvbihlKSB7XG4gICAgc2Nyb2xsWSA9IHdpbmRvdy5zY3JvbGxZO1xuICAgIHdhdGNoRm9yU3RpY2t5KCk7XG4gIH0pO1xuXG4gIGZ1bmN0aW9uIHdhdGNoRm9yU3RpY2t5KCkge1xuXG4gICAgaWYgKHNjcm9sbFkgPiAoc3RpY2t5Q29udGFpbmVyVG9wIC0gKGJhc2VGb250U2l6ZSAqIDMpKSkge1xuICAgICAgc3RpY2t5RWxlbWVudC5jbGFzc0xpc3QuYWRkKCdzdGlja3ktLWVsZW1lbnQtLWlzLWZpeGVkJyk7XG4gICAgICBzdGlja3lFbGVtZW50LnN0eWxlLm1heFdpZHRoID0gc3RpY2t5RWxlbWVudFdpZHRoICsgJ3B4JztcbiAgICAgIHN0aWNreUVsZW1lbnQuc3R5bGUudHJhbnNmb3JtID0gJ3RyYW5zbGF0ZVkoJyArIChiYXNlRm9udFNpemUgKiAzKSArICdweCknO1xuICAgICAgc3RpY2t5U2libGluZy5zdHlsZS5tYXhXaWR0aCA9IHN0aWNreVNpYmxpbmdXaWR0aCArICdweCc7XG5cbiAgICAgIC8vIGlmIChzY3JvbGxZID4gKHN0aWNreUNvbnRhaW5lckhlaWdodCAtIHN0aWNreUNvbnRhaW5lclRvcCkpIHtcbiAgICAgIC8vICAgY29uc29sZS5sb2coJ3Njcm9sbCcpO1xuICAgICAgICAvLyB2YXIgc2Nyb2xsVHJhbnNmb3JtQW1vdW50ID0gc2Nyb2xsWSAtIHN0aWNreUNvbnRhaW5lckhlaWdodCArIHN0aWNreUNvbnRhaW5lclRvcCArIChiYXNlRm9udFNpemUgKiAzKTtcbiAgICAgICAgLy8gY29uc29sZS5sb2coc2Nyb2xsVHJhbnNmb3JtQW1vdW50KTtcbiAgICAgICAgLy8gc3RpY2t5RWxlbWVudC5zdHlsZS50cmFuc2Zvcm0gPSAndHJhbnNsYXRlWSgtJyArIHNjcm9sbFRyYW5zZm9ybUFtb3VudCArICdweCknO1xuICAgICAgLy8gfVxuXG4gICAgfVxuXG4gICAgaWYgKChzY3JvbGxZIDwgKHN0aWNreUNvbnRhaW5lclRvcCAtIChiYXNlRm9udFNpemUgKiAzKSkpIHx8IChzY3JvbGxZIDwgKHN0aWNreUNvbnRhaW5lci5wYXJlbnRFbGVtZW50Lm9mZnNldFRvcCkpKSB7XG4gICAgICBzdGlja3lFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ3N0aWNreS0tZWxlbWVudC0taXMtZml4ZWQnKTtcbiAgICAgIHN0aWNreUVsZW1lbnQuc3R5bGUudHJhbnNmb3JtID0gJ3RyYW5zbGF0ZVkoMCknO1xuICAgIH1cblxuICB9XG4gIFxuICBcbn0pKCk7IiwiKGZ1bmN0aW9uKCQpIHtcblxuICBpZiAoIWRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmNvbnRhaW5zKCd3b29jb21tZXJjZS1jYXJ0JykpIHtcbiAgICByZXR1cm47XG4gIH1cblxuXG4gIHZhciBjYXJ0TGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5nZnAtb3JkZXItZGV0YWlscy0tbGlzdCcpO1xuICB2YXIgdXBkYXRlQ2FydEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2J1dHRvbltuYW1lPVwidXBkYXRlX2NhcnRcIl0nKTtcbiAgdmFyIGNhcnRTdWJ0b3RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJ0LXN1YnRvdGFsIHRkJyk7XG4gIHZhciBjYXJ0VG90YWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcub3JkZXItdG90YWwgdGQgc3Ryb25nJyk7XG4gIHZhciBjb3Vwb25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmNhcnQtZGlzY291bnQnKTtcblxuXG4gIC8vIFJFTU9WRSBVUERBVEUgQ0FSVCBCVVRUT04gSUYgSlMgRU5BQkxFRFxuICBpZiAodXBkYXRlQ2FydEJ1dHRvbikge1xuICAgIHVwZGF0ZUNhcnRCdXR0b24ucmVtb3ZlKCk7XG4gIH1cblxuICBcbiAgLypcbiAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gIEhhbmRsZSBEaXNhYmxlIG9mIFwiVXBkYXRlIENhcnRcIiBCdXR0b25cbiAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICovIFxuICBjYXJ0TGlzdC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBmdW5jdGlvbihlKSB7XG4gICAgaWYgKGUudGFyZ2V0LnRhZ05hbWUgIT09ICdJTlBVVCcpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdXBkYXRlTGluZUl0ZW1QcmljZShlLnRhcmdldCk7XG4gICAgLy8gdXBkYXRlQ2FydFRvdGFscygpO1xuICB9KTtcblxuICBmdW5jdGlvbiB1cGRhdGVMaW5lSXRlbVByaWNlKGl0ZW0pIHtcbiAgICBjb25zb2xlLmxvZygndXBkYXRlIGxpbmUgaXRlbSBwcmljZScpO1xuXG4gICAgLy8gY29uc29sZS5sb2coKTtcbiAgICBcbiAgICB2YXIgaXRlbURldGFpbHMgPSBpdGVtLnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50O1xuICAgIHZhciByZWd1bGFyUHJpY2UgPSBpdGVtRGV0YWlscy5xdWVyeVNlbGVjdG9yKCcucmVndWxhci1wcmljZScpO1xuICAgIHZhciBzYWxlUHJpY2UgPSBpdGVtRGV0YWlscy5xdWVyeVNlbGVjdG9yKCcuc2FsZS1wcmljZScpO1xuICAgIFxuICAgIHJlZ3VsYXJQcmljZS50ZXh0Q29udGVudCA9IChyZWd1bGFyUHJpY2UuZGF0YXNldC5wcmljZSAqIGl0ZW0udmFsdWUpLnRvRml4ZWQoMik7XG4gICAgXG4gICAgaWYgKHNhbGVQcmljZSkge1xuICAgICAgc2FsZVByaWNlLnRleHRDb250ZW50ID0gJyQnICsgKHNhbGVQcmljZS5kYXRhc2V0LnNhbGVQcmljZSAqIGl0ZW0udmFsdWUpLnRvRml4ZWQoMik7XG4gICAgfVxuXG4gICAgY2FydFN1YnRvdGFsLnRleHRDb250ZW50ID0gJ1VwZGF0aW5nLi4uJztcbiAgICBjYXJ0VG90YWwudGV4dENvbnRlbnQgPSAnVXBkYXRpbmcuLi4nO1xuICAgIGNvdXBvbnMuZm9yRWFjaChmdW5jdGlvbihjb3Vwb24pIHtcbiAgICAgIHZhciBjb3Vwb25UeXBlID0gY291cG9uLmRhdGFzZXQuZGlzY291bnRUeXBlO1xuICAgICAgaWYgKGNvdXBvblR5cGUgPT09ICdjb3Vwb24tcGVyY2VudCcpIHtcbiAgICAgICAgY291cG9uLnF1ZXJ5U2VsZWN0b3IoJ3RkW2RhdGEtdGl0bGVdJykudGV4dENvbnRlbnQgPSAnVXBkYXRpbmcuLi4nO1xuICAgICAgfVxuICAgIH0pO1xuXG5cbiAgICBhdG9taWMod2luZG93LmxvY2F0aW9uLm9yaWdpbiArICcvd3AtYWRtaW4vYWRtaW4tYWpheC5waHAnLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgYWN0aW9uOiAnaW5jcmVtZW50X2l0ZW1faW5fY2FydCcsXG4gICAgICAgIF9hamF4X25vbmNlOiB3aW5kb3cuYWpheF9vcmRlcl90cmFja2luZy5ub25jZSxcbiAgICAgICAgcHJvZHVjdF9rZXk6ICQoaXRlbSkucGFyZW50cygnLmdmcC1vcmRlci1kZXRhaWxzLS1pdGVtJykuZGF0YSgncHJvZHVjdEtleScpLFxuICAgICAgICBxdHk6IGl0ZW0udmFsdWVcbiAgICAgIH1cbiAgICB9KS50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgdXBkYXRlQ2FydFRvdGFscygpO1xuICAgIH0pO1xuXG4gIH1cblxuICBmdW5jdGlvbiB1cGRhdGVDYXJ0VG90YWxzKCkge1xuICAgIGNvbnNvbGUubG9nKCd1cGRhdGUgY2FydCB0b3RhbHMnKTtcbiAgICAkLmFqYXgoe1xuICAgICAgdXJsOiB3aW5kb3cuYWpheF9vcmRlcl90cmFja2luZy5hamF4X3VybCxcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgZGF0YToge1xuICAgICAgICBhY3Rpb246ICdnZXRfY2FydCcsXG4gICAgICAgIF9hamF4X25vbmNlOiB3aW5kb3cuYWpheF9vcmRlcl90cmFja2luZy5ub25jZSxcbiAgICAgIH0sXG4gICAgICBzdWNjZXNzOiBmdW5jdGlvbihyZXMpIHtcbiAgICAgICAgLy8gY29uc29sZS5sb2cocmVzKTtcbiAgICAgICAgY2FydFN1YnRvdGFsLnRleHRDb250ZW50ID0gJyQnICsgcmVzLnRvdGFscy5zdWJ0b3RhbDtcbiAgICAgICAgY2FydFRvdGFsLnRleHRDb250ZW50ID0gJyQnICsgcmVzLnRvdGFscy50b3RhbDtcbiAgICAgIH1cbiAgICB9KVxuXG5cbiAgICAvLyBhdG9taWMod2luZG93LmxvY2F0aW9uLm9yaWdpbiArICcvd3AtYWRtaW4vYWRtaW4tYWpheC5waHAnLCB7XG4gICAgLy8gICBtZXRob2Q6ICdQT1NUJyxcbiAgICAvLyAgIGRhdGE6IHtcbiAgICAvLyAgICAgYWN0aW9uOiAnZ2V0X2NhcnQnLFxuICAgIC8vICAgICBfYWpheF9ub25jZTogd2luZG93LmFqYXhfb3JkZXJfdHJhY2tpbmcubm9uY2UsXG4gICAgLy8gICB9XG4gICAgLy8gfSkudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xuICAgIC8vICAgY29uc29sZS5sb2cocmVzcG9uc2UpO1xuICAgIC8vICAgdmFyIGNhcnQgPSBPYmplY3QudmFsdWVzKEpTT04ucGFyc2UocmVzcG9uc2UuZGF0YS5zbGljZSgwLC0xKSkpO1xuICAgIC8vICAgdmFyIGNhcnRTdWJ0b3RhbEFtb3VudCA9IDA7XG4gICAgLy8gICB2YXIgY2FydFRvdGFsQW1vdW50ID0gMDtcbiAgICAgIFxuICAgIC8vICAgY2FydC5mb3JFYWNoKGZ1bmN0aW9uKGl0ZW0pIHtcbiAgICAvLyAgICAgY2FydFN1YnRvdGFsQW1vdW50ID0gY2FydFN1YnRvdGFsQW1vdW50ICsgaXRlbS5saW5lX3N1YnRvdGFsO1xuICAgIC8vICAgICBjYXJ0VG90YWxBbW91bnQgPSBjYXJ0VG90YWxBbW91bnQgKyBpdGVtLmxpbmVfdG90YWw7XG4gICAgLy8gICB9KTtcblxuICAgIC8vICAgY291cG9ucy5mb3JFYWNoKGZ1bmN0aW9uKGNvdXBvbikge1xuICAgIC8vICAgICB2YXIgY291cG9uVHlwZSA9IGNvdXBvbi5kYXRhc2V0LmRpc2NvdW50VHlwZTtcbiAgICAvLyAgICAgdmFyIGNvdXBvbkFtb3VudCA9IGNvdXBvbi5kYXRhc2V0LmRpc2NvdW50QW1vdW50O1xuICAgIC8vICAgICAvLyBjb25zb2xlLmxvZyhjb3Vwb25BbW91bnQpO1xuICAgIC8vICAgICBpZiAoY291cG9uVHlwZSA9PT0gJ2NvdXBvbi1wZXJjZW50Jykge1xuICAgIC8vICAgICAgIHZhciBkaXNjb3VudCA9IGNhcnRTdWJ0b3RhbEFtb3VudCAqIChjb3Vwb25BbW91bnQgLyAxMDApO1xuICAgIC8vICAgICAgIGNvdXBvbi5xdWVyeVNlbGVjdG9yKCd0ZFtkYXRhLXRpdGxlXScpLnRleHRDb250ZW50ID0gJy0kJyArIGRpc2NvdW50LnRvRml4ZWQoMik7XG4gICAgLy8gICAgIH1cbiAgICAvLyAgIH0pO1xuXG4gICAgLy8gICBjYXJ0U3VidG90YWwudGV4dENvbnRlbnQgPSAnJCcgKyBjYXJ0U3VidG90YWxBbW91bnQudG9GaXhlZCgyKS5yZXBsYWNlKC9cXGQoPz0oXFxkezN9KStcXC4pL2csICckJiwnKTtcbiAgICAvLyAgIGNhcnRUb3RhbC50ZXh0Q29udGVudCA9ICckJyArIGNhcnRUb3RhbEFtb3VudC50b0ZpeGVkKDIpLnJlcGxhY2UoL1xcZCg/PShcXGR7M30pK1xcLikvZywgJyQmLCcpO1xuICAgIC8vIH0pO1xuICB9XG5cblxuICAvKlxuICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gIFJFTU9WRSBBTiBJVEVNIEZST00gVEhFIENBUlRcbiAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAqL1xuICBjYXJ0TGlzdC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcbiAgICAvLyBodHRwOi8vbG9jYWxob3N0OjMwMDAvY2FydC8/cmVtb3ZlX2l0ZW09ZTcyMWE1NGE4Y2YxOGM4NTQzZDQ0NzgyZDllZjY4MWYmX3dwbm9uY2U9YzEzOTg5NzhjY1xuICAgIGlmIChlLnRhcmdldC5jbGFzc05hbWUgIT09ICdyZW1vdmUnKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBjYXJ0U3VidG90YWwudGV4dENvbnRlbnQgPSAnVXBkYXRpbmcuLi4nO1xuICAgIGNhcnRUb3RhbC50ZXh0Q29udGVudCA9ICdVcGRhdGluZy4uLic7XG4gICAgJC5hamF4KHtcbiAgICAgIHVybDogd2luZG93LmFqYXhfb3JkZXJfdHJhY2tpbmcuYWpheF91cmwsXG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgYWN0aW9uOiAncmVtb3ZlX2l0ZW1fZnJvbV9jYXJ0JyxcbiAgICAgICAgX2FqYXhfbm9uY2U6IHdpbmRvdy5hamF4X29yZGVyX3RyYWNraW5nLm5vbmNlLFxuICAgICAgICBwcm9kdWN0X2tleTogZS50YXJnZXQuZGF0YXNldC5wcm9kdWN0S2V5XG4gICAgICB9LFxuICAgICAgc3VjY2VzczogZnVuY3Rpb24ocmVzcG9uc2UpIHtcbiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7XG4gICAgICAgIGUudGFyZ2V0LnBhcmVudEVsZW1lbnQucmVtb3ZlKCk7XG4gICAgICAgIHVwZGF0ZUNhcnRUb3RhbHMoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICAvLyBhdG9taWMod2luZG93LmxvY2F0aW9uLm9yaWdpbiArICcvd3AtYWRtaW4vYWRtaW4tYWpheC5waHAnLCB7XG4gICAgLy8gICBtZXRob2Q6ICdQT1NUJyxcbiAgICAvLyAgIGRhdGE6IHtcbiAgICAvLyAgICAgYWN0aW9uOiAncmVtb3ZlX2l0ZW1fZnJvbV9jYXJ0JyxcbiAgICAvLyAgICAgcHJvZHVjdF9pZDogZS50YXJnZXQuZGF0YXNldC5wcm9kdWN0X2lkXG4gICAgLy8gICB9XG4gICAgLy8gfSlcbiAgICAvLyAgIC50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgLy8gICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpO1xuICAgIC8vICAgICBlLnRhcmdldC5wYXJlbnRFbGVtZW50LnJlbW92ZSgpO1xuICAgIC8vICAgICB1cGRhdGVDYXJ0VG90YWxzKCk7XG4gICAgLy8gICB9KTtcbiAgfSk7XG5cbn0pKGpRdWVyeSk7IiwiKGZ1bmN0aW9uKCQpIHtcbiAgXG4gIHZhciBzaGlwVG9EaWZmZXJlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjc2hpcC10by1kaWZmZXJlbnQtYWRkcmVzcy1jaGVja2JveCcpO1xuICB2YXIgc2hpcERldGFpbHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2hpcHBpbmctZGV0YWlscy0taXMtaGlkZGVuJyk7XG4gIFxuICBpZiAoc2hpcFRvRGlmZmVyZW50KSB7XG4gICAgc2hpcFRvRGlmZmVyZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGZ1bmN0aW9uKGUpIHtcbiAgICAgIGlmICghc2hpcFRvRGlmZmVyZW50LmNoZWNrZWQpIHtcbiAgICAgICAgc2hpcERldGFpbHMuY2xhc3NMaXN0LmFkZCgnc2hpcHBpbmctZGV0YWlscy0taXMtaGlkZGVuJyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHNoaXBEZXRhaWxzLmNsYXNzTGlzdC5yZW1vdmUoJ3NoaXBwaW5nLWRldGFpbHMtLWlzLWhpZGRlbicpO1xuICAgIH0pO1xuICB9XG5cbiAgbWFpbGNoaW1wT3B0SW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbWFpbGNoaW1wX3dvb2NvbW1lcmNlX25ld3NsZXR0ZXInKTtcbiAgaWYgKG1haWxjaGltcE9wdEluKSB7XG4gICAgbWFpbGNoaW1wT3B0SW4uY2hlY2tlZCA9IHRydWU7XG4gIH1cblxufSkoalF1ZXJ5KTsiLCJ2YXIgc2VhcmNoUmVzdWx0Q291bnQgPSAnJztcbihmdW5jdGlvbigkKSB7XG5cbiAgdmFyIGRvbXB1cmlmeSA9IHdpbmRvdy5ET01QdXJpZnk7XG5cbiAgdmFyIHNlYXJjaEJhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5nbG9iYWwtc2VhcmNoLWJhciBmb3JtJyk7XG4gIGlmICghc2VhcmNoQmFyKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIHNlYXJjaElucHV0ID0gc2VhcmNoQmFyLnF1ZXJ5U2VsZWN0b3IoJ2lucHV0W3R5cGU9XCJ0ZXh0XCJdJyk7XG4gIHZhciBkZWZhdWx0VGV4dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5nbG9iYWwtc2VhcmNoLWJhciAuZGVmYXVsdCcpO1xuICB2YXIgc2VhcmNoUmVzdWx0cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5nbG9iYWwtc2VhcmNoLWJhciAuc2VhcmNoLXJlc3VsdHMnKTtcbiAgdmFyIHBvc3RTZWFyY2hSZXN1bHRzID0gc2VhcmNoUmVzdWx0cy5xdWVyeVNlbGVjdG9yKCcuc2VhcmNoLXJlc3VsdHMtLXBvc3RzIHVsJyk7XG4gIHZhciBwcm9kdWN0U2VhcmNoUmVzdWx0cyA9IHNlYXJjaFJlc3VsdHMucXVlcnlTZWxlY3RvcignLnNlYXJjaC1yZXN1bHRzLS1wcm9kdWN0cyB1bCcpO1xuICB2YXIgY2F0ZWdvcmllc1NlYXJjaFJlc3VsdHMgPSBzZWFyY2hSZXN1bHRzLnF1ZXJ5U2VsZWN0b3IoJy5zZWFyY2gtcmVzdWx0cy0tY2F0ZWdvcmllcyB1bCcpO1xuICB2YXIgbW9kZWxzU2VhcmNoUmVzdWx0cyA9IHNlYXJjaFJlc3VsdHMucXVlcnlTZWxlY3RvcignLnNlYXJjaC1yZXN1bHRzLS1tb2RlbHMgdWwnKTtcbiAgdmFyIHZpZXdBbGxTZWFyY2hSZXN1bHRzID0gc2VhcmNoUmVzdWx0cy5xdWVyeVNlbGVjdG9yKCcuc2VhcmNoLXJlc3VsdHMtLXZpZXctYWxsJyk7XG5cbiAgLy8gc2VhcmNoSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCBoYW5kbGVDaGFuZ2UpO1xuICB2YXIgc2VhcmNoUmVxdWVzdCA9IG51bGw7XG4gIHZhciBkZWJvdW5jZVRpbWVvdXQgPSBudWxsO1xuXG4gICQoJy5nbG9iYWwtc2VhcmNoLWJhciBpbnB1dCNzJykub24oJ2tleXVwJywgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICBjbGVhclRpbWVvdXQoZGVib3VuY2VUaW1lb3V0KTtcbiAgICBkZWJvdW5jZVRpbWVvdXQgPSBzZXRUaW1lb3V0KGhhbmRsZUNoYW5nZSwgMTAwMCk7XG4gICAgdmFyIHNlYXJjaElucHV0VmFsdWUgPSAkKCcuZ2xvYmFsLXNlYXJjaC1iYXIgaW5wdXQjcycpLnZhbCgpO1xuICAgIHNlYXJjaFJlc3VsdHMuY2xhc3NMaXN0LnJlbW92ZSgndmlzdWFsbHktaGlkZGVuJyk7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNjcmVlbicpLmNsYXNzTGlzdC5yZW1vdmUoJ3NjcmVlbi0taXMtaGlkZGVuJyk7XG4gICAgc2VhcmNoSW5wdXQuc3R5bGUucG9zaXRpb24gPSAncmVsYXRpdmUnO1xuICAgIHNlYXJjaElucHV0LnN0eWxlLnpJbmRleCA9IDk5O1xuICAgIHNlYXJjaFJlc3VsdHMuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gICAgdmlld0FsbFNlYXJjaFJlc3VsdHMucXVlcnlTZWxlY3RvcignLnNlYXJjaC10ZXJtJykudGV4dENvbnRlbnQgPSBzZWFyY2hJbnB1dFZhbHVlO1xuICAgIHZpZXdBbGxTZWFyY2hSZXN1bHRzLmhyZWYgPSAnLz9zPScgKyBzZWFyY2hJbnB1dFZhbHVlO1xuICB9KVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUNoYW5nZShlKSB7XG5cbiAgICB2YXIgc2VhcmNoSW5wdXRWYWx1ZSA9ICQoJy5nbG9iYWwtc2VhcmNoLWJhciBpbnB1dCNzJykudmFsKCk7XG5cbiAgICBpZiAoIXNlYXJjaElucHV0VmFsdWUpIHtcbiAgICAgIC8vIHNlYXJjaFJlc3VsdHMuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBzZWFyY2hSZXN1bHRDb3VudCA9IHNlYXJjaElucHV0VmFsdWU7XG5cblxuICAgIHBvc3RTZWFyY2hSZXN1bHRzLmlubmVySFRNTCA9ICc8bGkgY2xhc3M9XCJzZWFyY2gtcmVzdWx0LWl0ZW0tLWVtcHR5XCI+PGltZyBzcmM9XCIvd3AtY29udGVudC90aGVtZXMvZ2ZwL2Rpc3QvaW1nL3NwaW5uZXIuc3ZnXCIgY2xhc3M9XCJzcGlubmVyXCIgc3R5bGU9XCJtYXgtd2lkdGg6IDUwcHg7XCI+PC9saT4nO1xuICAgIHByb2R1Y3RTZWFyY2hSZXN1bHRzLmlubmVySFRNTCA9ICc8bGkgY2xhc3M9XCJzZWFyY2gtcmVzdWx0LWl0ZW0tLWVtcHR5XCI+PGltZyBzcmM9XCIvd3AtY29udGVudC90aGVtZXMvZ2ZwL2Rpc3QvaW1nL3NwaW5uZXIuc3ZnXCIgY2xhc3M9XCJzcGlubmVyXCIgc3R5bGU9XCJtYXgtd2lkdGg6IDUwcHg7XCI+PC9saT4nO1xuICAgIGNhdGVnb3JpZXNTZWFyY2hSZXN1bHRzLmlubmVySFRNTCA9ICc8bGkgY2xhc3M9XCJzZWFyY2gtcmVzdWx0LWl0ZW0tLWVtcHR5XCI+PGltZyBzcmM9XCIvd3AtY29udGVudC90aGVtZXMvZ2ZwL2Rpc3QvaW1nL3NwaW5uZXIuc3ZnXCIgY2xhc3M9XCJzcGlubmVyXCIgc3R5bGU9XCJtYXgtd2lkdGg6IDUwcHg7XCI+PC9saT4nO1xuICAgIG1vZGVsc1NlYXJjaFJlc3VsdHMuaW5uZXJIVE1MID0gJzxsaSBjbGFzcz1cInNlYXJjaC1yZXN1bHQtaXRlbS0tZW1wdHlcIj48aW1nIHNyYz1cIi93cC1jb250ZW50L3RoZW1lcy9nZnAvZGlzdC9pbWcvc3Bpbm5lci5zdmdcIiBjbGFzcz1cInNwaW5uZXJcIiBzdHlsZT1cIm1heC13aWR0aDogNTBweDtcIj48L2xpPic7XG5cbiAgICBpZiAoc2VhcmNoUmVxdWVzdCkge1xuICAgICAgc2VhcmNoUmVxdWVzdC5hYm9ydCgpO1xuICAgIH1cbiAgICBzZWFyY2hSZXF1ZXN0ID0gJC5hamF4KHtcbiAgICAgIHVybDogJy93cC1qc29uL2dmcC92MS9zZWFyY2g/cz0nICsgc2VhcmNoSW5wdXRWYWx1ZSxcbiAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTtcbiAgICAgICAgc2VhcmNoUmVzdWx0c0hUTUwocmVzcG9uc2UsIHNlYXJjaElucHV0VmFsdWUpO1xuICAgICAgfSxcbiAgICAgIGVycm9yOiBmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIC8vIGF0b21pYygnL3dwLWpzb24vZ2ZwL3YxL3NlYXJjaD9zPScgKyB0aGlzLnZhbHVlKVxuICAgIC8vICAgLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcbiAgICAvLyAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7XG4gICAgLy8gICAgIGlmIChyZXNwb25zZS5kYXRhWzBdLnRlcm0ubGVuZ3RoIDwgc2VhcmNoUmVzdWx0Q291bnQubGVuZ3RoKSByZXR1cm47XG4gICAgLy8gICAgIHNlYXJjaFJlc3VsdHNIVE1MKHJlc3BvbnNlLmRhdGEsIHNlYXJjaElucHV0VmFsdWUpO1xuICAgIC8vICAgfSlcbiAgICAvLyAgIC5jYXRjaChmdW5jdGlvbihlcnIpIHtcbiAgICAvLyAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAvLyAgIH0pXG4gIH1cblxuICBmdW5jdGlvbiBzZWFyY2hSZXN1bHRzSFRNTChyZXN1bHRzLCB2YWx1ZSkge1xuICAgIHZhciBwb3N0cyA9IFtdO1xuICAgIHZhciBwcm9kdWN0cyA9IFtdO1xuICAgIHZhciBjYXRlZ29yaWVzID0gW107XG4gICAgdmFyIG1vZGVscyA9IFtdO1xuICAgIHJlc3VsdHMuZm9yRWFjaChmdW5jdGlvbihyZXN1bHQsIGkpIHtcbiAgICAgICAgaWYgKHJlc3VsdC50eXBlID09PSAncG9zdCcpIHtcbiAgICAgICAgICBwb3N0cy5wdXNoKHJlc3VsdCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlc3VsdC50eXBlID09PSAncHJvZHVjdCcpIHtcbiAgICAgICAgICBwcm9kdWN0cy5wdXNoKHJlc3VsdCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlc3VsdC50eXBlID09PSAnY2F0ZWdvcnknKSB7XG4gICAgICAgICAgY2F0ZWdvcmllcy5wdXNoKHJlc3VsdCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlc3VsdC50eXBlID09PSAnbW9kZWwnKSB7XG4gICAgICAgICAgbW9kZWxzLnB1c2gocmVzdWx0KTtcbiAgICAgICAgfVxuICAgIH0pXG5cbiAgICBpZiAocG9zdHMubGVuZ3RoIDwgMSkge1xuICAgICAgcG9zdFNlYXJjaFJlc3VsdHMuaW5uZXJIVE1MID0gJzxsaSBjbGFzcz1cInNlYXJjaC1yZXN1bHQtaXRlbS0tZW1wdHlcIj5ObyByZXN1bHQgZm9yICcgKyB2YWx1ZSArICc8L2xpPic7XG4gICAgfSBlbHNlIHtcbiAgICAgIHBvc3RTZWFyY2hSZXN1bHRzLmlubmVySFRNTCA9IHBvc3RzLm1hcChmdW5jdGlvbihwb3N0KSB7XG4gICAgICAgIHJldHVybiAnPGxpIGNsYXNzPVwic2VhcmNoLXJlc3VsdC1pdGVtLS1wb3N0XCI+PGEgaHJlZj1cIicgKyBwb3N0LmxpbmsgKyAnXCI+JyArIHBvc3QudGl0bGUgKyAnPC9hPjwvbGk+JztcbiAgICAgIH0pLmpvaW4oJycpO1xuICAgIH1cblxuICAgIGlmIChwcm9kdWN0cy5sZW5ndGggPCAxKSB7XG4gICAgICBwcm9kdWN0U2VhcmNoUmVzdWx0cy5pbm5lckhUTUwgPSAnPGxpIGNsYXNzPVwic2VhcmNoLXJlc3VsdC1pdGVtLS1lbXB0eVwiPk5vIHJlc3VsdCBmb3IgJyArIHZhbHVlICsgJzwvbGk+JztcbiAgICB9IGVsc2Uge1xuICAgICAgcHJvZHVjdFNlYXJjaFJlc3VsdHMuaW5uZXJIVE1MID0gcHJvZHVjdHMubWFwKGZ1bmN0aW9uKHByb2R1Y3QpIHtcbiAgICAgICAgcmV0dXJuICc8bGkgY2xhc3M9XCJzZWFyY2gtcmVzdWx0LWl0ZW0tLXByb2R1Y3RcIj48YSBocmVmPVwiJyArIHByb2R1Y3QubGluayArICdcIj48ZGl2IGNsYXNzPVwic2VhcmNoLXJlc3VsdHMtLXByb2R1Y3QtaW1hZ2VcIj4nICsgcHJvZHVjdC5pbWFnZSArICc8L2Rpdj4nICsgcHJvZHVjdC50aXRsZSArICc8L2E+PC9saT4nO1xuICAgICAgfSkuam9pbignJyk7XG4gICAgfVxuXG4gICAgaWYgKGNhdGVnb3JpZXMubGVuZ3RoIDwgMSkge1xuICAgICAgY2F0ZWdvcmllc1NlYXJjaFJlc3VsdHMuaW5uZXJIVE1MID0gJzxsaSBjbGFzcz1cInNlYXJjaC1yZXN1bHQtaXRlbS0tZW1wdHlcIj5ObyByZXN1bHQgZm9yICcgKyB2YWx1ZSArICc8L2xpPic7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNhdGVnb3JpZXNTZWFyY2hSZXN1bHRzLmlubmVySFRNTCA9IGNhdGVnb3JpZXMubWFwKGZ1bmN0aW9uKGNhdGVnb3J5KSB7XG4gICAgICAgIHJldHVybiAnPGxpIGNsYXNzPVwic2VhcmNoLXJlc3VsdC1pdGVtLS1jYXRlZ29yeVwiPjxhIGhyZWY9XCInICsgY2F0ZWdvcnkubGluayArICdcIj48ZGl2IGNsYXNzPVwic2VhcmNoLXJlc3VsdHMtLXByb2R1Y3QtaW1hZ2VcIj48aW1nIHNyYz1cIicgKyBjYXRlZ29yeS5pbWFnZSArICdcIiAvPjwvZGl2PicgKyBjYXRlZ29yeS50aXRsZSArICc8L2E+PC9saT4nO1xuICAgICAgfSkuam9pbignJyk7XG4gICAgfVxuXG4gICAgaWYgKG1vZGVscy5sZW5ndGggPCAxKSB7XG4gICAgICBtb2RlbHNTZWFyY2hSZXN1bHRzLmlubmVySFRNTCA9ICc8bGkgY2xhc3M9XCJzZWFyY2gtcmVzdWx0LWl0ZW0tLWVtcHR5XCI+Tm8gcmVzdWx0IGZvciAnICsgdmFsdWUgKyAnPC9saT4nO1xuICAgIH0gZWxzZSB7XG4gICAgICBtb2RlbHNTZWFyY2hSZXN1bHRzLmlubmVySFRNTCA9IG1vZGVscy5tYXAoZnVuY3Rpb24obW9kZWxzKSB7XG4gICAgICAgIHJldHVybiAnPGxpIGNsYXNzPVwic2VhcmNoLXJlc3VsdC1pdGVtLS1tb2RlbFwiPjxhIGhyZWY9XCInICsgbW9kZWxzLmxpbmsgKyAnXCI+PGRpdiBjbGFzcz1cInNlYXJjaC1yZXN1bHRzLS1wcm9kdWN0LWltYWdlXCI+PGltZyBzcmM9XCInICsgbW9kZWxzLmltYWdlICsgJ1wiIC8+PC9kaXY+JyArIG1vZGVscy50aXRsZSArICc8L2E+PC9saT4nO1xuICAgICAgfSkuam9pbignJyk7XG4gICAgfVxuXG4gIH1cblxuICAkKCcuZ2xvYmFsLXNlYXJjaC1iYXIgLnNlYXJjaC1yZXN1bHRzJykub24oJ2NsaWNrJywgJ2EnLCBzZW5kR0FFdmVudCk7XG5cbiAgJCgnLmdsb2JhbC1zZWFyY2gtYmFyIGZvcm0nKS5vbignc3VibWl0Jywgc29tZXRoaW5nKTtcblxuICBmdW5jdGlvbiBzb21ldGhpbmcoZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB2YXIgc2VhcmNoVGVybSA9ICQodGhpcykuZmluZCgnaW5wdXQnKS52YWwoKTtcbiAgICBnYSgnc2VuZCcsICdldmVudCcsIHtcbiAgICAgIGV2ZW50Q2F0ZWdvcnk6ICdsaXZlLXNlYXJjaCcsXG4gICAgICBldmVudEFjdGlvbjogJ3ZpZXctYWxsJyxcbiAgICAgIGV2ZW50TGFiZWw6IHNlYXJjaFRlcm0sXG4gICAgICBoaXRDYWxsYmFjazogZnVuY3Rpb24oKSB7XG4gICAgICAgIGRvY3VtZW50LmxvY2F0aW9uID0gJy8/cz0nICsgc2VhcmNoVGVybTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHNlbmRHQUV2ZW50KGUpIHtcbiAgICBjb25zb2xlLmxvZygnY2xpY2tlZCcpO1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB2YXIgbGluaztcbiAgICBpZiAoZS50YXJnZXQudGFnTmFtZSAhPT0gJ0EnKSB7XG4gICAgICBpZiAoZS50YXJnZXQudGFnTmFtZSA9PT0gJ0lNRycpIHtcbiAgICAgICAgbGluayA9IGUudGFyZ2V0LnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudDtcbiAgICAgIH1cbiAgICAgIGlmIChlLnRhcmdldC50YWdOYW1lID09PSAnRElWJykge1xuICAgICAgICBsaW5rID0gZS50YXJnZXQucGFyZW50RWxlbWVudDtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgbGluayA9IGUudGFyZ2V0O1xuICAgIH1cbiAgICB2YXIgc2VhcmNoTGlua0NhdGVnb3J5ID0gbGluay5wYXJlbnRFbGVtZW50LmNsYXNzTGlzdFswXS5zcGxpdCgnLS0nKVsxXTtcbiAgICAvLyBjb25zb2xlLmxvZyhsaW5rLmh0ZXJtKTtcbiAgICBpZiAobGluay5ocmVmLmluY2x1ZGVzKCc/cz0nKSkge1xuICAgICAgc2VhcmNoTGlua0NhdGVnb3J5ID0gJ3ZpZXctYWxsJ1xuICAgIH1cbiAgICB2YXIgc2VhcmNoTGlua1RleHQgPSBsaW5rLnRleHRDb250ZW50O1xuICAgIGlmIChsaW5rLnRhZ05hbWUgPT09ICdBJykge1xuICAgICAgaWYgKCF3aW5kb3cuZ2EpIHtcbiAgICAgICAgZG9jdW1lbnQubG9jYXRpb24gPSBsaW5rO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBnYSgnc2VuZCcsICdldmVudCcsIHtcbiAgICAgICAgZXZlbnRDYXRlZ29yeTogJ2xpdmUtc2VhcmNoJyxcbiAgICAgICAgZXZlbnRBY3Rpb246IHNlYXJjaExpbmtDYXRlZ29yeSxcbiAgICAgICAgZXZlbnRMYWJlbDogc2VhcmNoTGlua1RleHQsXG4gICAgICAgIGhpdENhbGxiYWNrOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICBkb2N1bWVudC5sb2NhdGlvbiA9IGxpbms7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgY2xvc2VTZWFyY2hCYXIpO1xuICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGNsb3NlU2VhcmNoQmFyQ2xpY2spO1xuXG4gIGZ1bmN0aW9uIGNsb3NlU2VhcmNoQmFyKGUpIHtcbiAgICBpZiAoZS5rZXlDb2RlICE9PSAyNyB8fCAhZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3M6Zm9jdXMnKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBzZWFyY2hSZXN1bHRzLmNsYXNzTGlzdC5hZGQoJ3Zpc3VhbGx5LWhpZGRlbicpO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zY3JlZW4nKS5jbGFzc0xpc3QuYWRkKCdzY3JlZW4tLWlzLWhpZGRlbicpO1xuICB9XG5cbiAgZnVuY3Rpb24gY2xvc2VTZWFyY2hCYXJDbGljayhlKSB7XG4gICAgaWYgKCFlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3NjcmVlbicpIHx8IChkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5jb250YWlucygnY2FydC1kcmF3ZXItLW9wZW4nKSkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgc2VhcmNoUmVzdWx0cy5jbGFzc0xpc3QuYWRkKCd2aXN1YWxseS1oaWRkZW4nKTtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2NyZWVuJykuY2xhc3NMaXN0LmFkZCgnc2NyZWVuLS1pcy1oaWRkZW4nKTtcbiAgfVxuXG5cbn0pKGpRdWVyeSk7IiwiKGZ1bmN0aW9uKCQpIHtcblxuICB2YXIgZWFjaENvdW50ZG93biA9ICQoJy5wcm9tby1jb3VudGRvd24nKTtcblxuICBzZXRJbnRlcnZhbChmdW5jdGlvbigpe1xuICAgIGVhY2hDb3VudGRvd24uZWFjaChmdW5jdGlvbihpLCBlbGVtKSB7XG4gICAgICB2YXIgZGF0ZSA9ICQoZWxlbSkuZGF0YSgnZXhwaXJlcycpO1xuICAgICAgdmFyIGZvcm1hdHRlZERhdGUgPSBtb21lbnQoZGF0ZSwgJ1lZWVlNTUREJykuY291bnRkb3duKCk7XG4gICAgICBpZiAoZm9ybWF0dGVkRGF0ZS5kYXlzID4gNikge1xuICAgICAgICAkKGVsZW0pLnRleHQoJ29uICcgKyBtb21lbnQoZGF0ZSwgJ1lZWVlNTUREJykuZm9ybWF0KCdNTU1NIEQsIFlZWVknKSk7XG4gICAgICB9IGVsc2UgaWYgKGZvcm1hdHRlZERhdGUuZGF5cyA+IDApIHtcbiAgICAgICAgaWYgKGZvcm1hdHRlZERhdGUuZGF5cyA8PSAxKSB7XG4gICAgICAgICAgJChlbGVtKS5wYXJlbnQoKS5hZGRDbGFzcygnZXhwaXJpbmcnKTtcbiAgICAgICAgICAkKGVsZW0pLnRleHQoJ3RvbW9ycm93LicpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICQoZWxlbSkudGV4dCgnaW4gJyArIGZvcm1hdHRlZERhdGUuZGF5cyArICcgZGF5cy4nKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgJChlbGVtKS5wYXJlbnQoKS5hZGRDbGFzcygnZXhwaXJpbmcnKTtcbiAgICAgICAgXG4gICAgICAgIHZhciBtaW51dGVzID0gU3RyaW5nKGZvcm1hdHRlZERhdGUubWludXRlcyk7XG4gICAgICAgIGlmIChtaW51dGVzLmxlbmd0aCA8PSAxKSB7XG4gICAgICAgICAgbWludXRlcyA9ICcwJyArIG1pbnV0ZXM7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgc2Vjb25kcyA9IFN0cmluZyhmb3JtYXR0ZWREYXRlLnNlY29uZHMpO1xuICAgICAgICBpZiAoc2Vjb25kcy5sZW5ndGggPD0gMSkge1xuICAgICAgICAgIHNlY29uZHMgPSAnMCcgKyBzZWNvbmRzO1xuICAgICAgICB9XG5cbiAgICAgICAgJChlbGVtKS50ZXh0KCdpbiAnICsgZm9ybWF0dGVkRGF0ZS5ob3VycyArICc6JyArIG1pbnV0ZXMgKyAnOicgKyBzZWNvbmRzICsgJy4nKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSwgMTAwMClcblxuICAvLyB2YXIgY3VycmVudFByb21vdGlvbnNMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmN1cnJlbnQtcHJvbW90aW9ucy0tbGlzdCcpO1xuICAvLyBpZiAoIWN1cnJlbnRQcm9tb3Rpb25zTGlzdCkgeyByZXR1cm47IH1cblxuICAvLyB2YXIgY3VycmVudFByb21vdGlvbnMgPSBjdXJyZW50UHJvbW90aW9uc0xpc3QucXVlcnlTZWxlY3RvckFsbCgnLmN1cnJlbnQtcHJvbW90aW9ucy0taXRlbScpO1xuICAvLyBjdXJyZW50UHJvbW90aW9ucy5mb3JFYWNoKGZ1bmN0aW9uKHByb21vdGlvbikge1xuICAgIFxuICAvLyAgIGlmICghcHJvbW90aW9uLmRhdGFzZXQub2ZmZXJFeHBpcnkpIHtcbiAgLy8gICAgIHJldHVybjtcbiAgLy8gICB9XG5cbiAgLy8gICB2YXIgZXhwaXJ5ID0gcHJvbW90aW9uLmRhdGFzZXQub2ZmZXJFeHBpcnk7XG4gIC8vICAgaWYgKCFwcm9tb3Rpb24ucXVlcnlTZWxlY3RvcignLmN1cnJlbnQtcHJvbW90aW9ucy0tYm9keS1jb3B5JykpIHtcbiAgLy8gICAgIHByb21vdGlvbi5jbGFzc0xpc3QuYWRkKCdjdXJyZW50LXByb21vdGlvbnMtLWl0ZW1fX2hhcy1ib2R5LWNvcHknKTtcbiAgLy8gICAgIHZhciBleGlwcnlFbGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAvLyAgICAgZXhpcHJ5RWxlbS5jbGFzc0xpc3QuYWRkKCdjdXJyZW50LXByb21vdGlvbnMtLWJvZHktY29weScpO1xuICAvLyAgICAgcHJvbW90aW9uLnF1ZXJ5U2VsZWN0b3IoJy5jdXJyZW50LXByb21vdGlvbnMtLWNvbnRlbnQnKS5hcHBlbmRDaGlsZChleGlwcnlFbGVtKTtcbiAgLy8gICB9IGVsc2Uge1xuICAvLyAgICAgdmFyIGV4aXByeUVsZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gIC8vICAgICBwcm9tb3Rpb24ucXVlcnlTZWxlY3RvcignLmN1cnJlbnQtcHJvbW90aW9ucy0tYm9keS1jb3B5JykuYXBwZW5kQ2hpbGQoZXhpcHJ5RWxlbSk7XG4gIC8vICAgfVxuXG4gIC8vICAgc2V0SW50ZXJ2YWwodXBkYXRlUHJvbW9FeGlwcnksIDEwMDApO1xuICAvLyAgIC8vIHVwZGF0ZVByb21vRXhpcHJ5KHByb21vdGlvbik7XG5cbiAgLy8gICBmdW5jdGlvbiB1cGRhdGVQcm9tb0V4aXByeSgpIHsgICBcbiAgLy8gICAgICAgdmFyIGV4cGlyZUFycmF5ID0gbW9tZW50KGV4cGlyeSwgJ1lZWVlNTURELCBISDptIGEnKS5jb3VudGRvd24oKTtcbiAgLy8gICAgICAgZXhpcHJ5RWxlbS50ZXh0Q29udGVudCA9ICcgT2ZmZXIgZXhwaXJlcyBpbiAnICsgZXhwaXJlQXJyYXkudG9TdHJpbmcoKTsgICAgICAgIFxuICAvLyAgIH0gICAgXG5cbiAgLy8gfSk7XG5cblxuICAvLyAvKlxuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gIC8vIEhBTkRMRSBQUk9NT1RJT04gSEVSTyBDT1VOVERPV05cbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAvLyAqL1xuICAvLyB2YXIgaGVyb1Byb21vdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5oZXJvLS1pcy1zYWxlJyk7XG4gIC8vIGlmICghaGVyb1Byb21vdGlvbikgeyByZXR1cm47IH1cbiAgLy8gdmFyIGV4cGlyeSA9IGhlcm9Qcm9tb3Rpb24uZGF0YXNldC5vZmZlckV4cGlyeTtcbiAgLy8gdmFyIGNvdW50RG93biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5oZXJvLS1pcy1zYWxlIGgyJyk7XG4gIC8vIHNldEludGVydmFsKGZ1bmN0aW9uKCl7XG4gIC8vICAgY291bnREb3duLnRleHRDb250ZW50ID0gbW9tZW50KGV4cGlyeSwgJ1lZWVlNTURELCBISDptIGEnKS5jb3VudGRvd24oKS50b1N0cmluZygpO1xuICAvLyB9LCAxMDAwKVxuICBcblxufSkoalF1ZXJ5KTsiLCIoZnVuY3Rpb24oKSB7XG4gIFxuICB2YXIgZm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNvcmRlcl90cmFja2luZ19mb3JtJyk7XG5cbiAgaWYgKCFmb3JtKSB7IFxuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciByZXN1bHRzQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm9yZGVyLXJlc3VsdHMtLWNvbnRhaW5lcicpO1xuICB2YXIgb3JkZXJEZXRhaWxzQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm9yZGVyLXJlc3VsdHMtLWRldGFpbHMnKTtcbiAgdmFyIHJlc3VsdHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcub3JkZXItcmVzdWx0cy0tbGlzdCcpO1xuICB2YXIgb3JkZXJzID0gW107XG5cbiAgZnVuY3Rpb24gZm9ybVN1Ym1pc3Npb24oZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBvcmRlcnMgPSBbXTtcbiAgICByZXN1bHRzLmlubmVySFRNTCA9ICcnO1xuICAgIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjc2hvd0FsbE9yZGVycycpKSB7XG4gICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjc2hvd0FsbE9yZGVycycpLnJlbW92ZSgpO1xuICAgIH1cbiAgICB2YXIgc3Bpbm5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHNwaW5uZXIuY2xhc3NMaXN0LmFkZCgnaGFzLXRleHQtY2VudGVyJywgJ2xvYWRpbmcnKTtcbiAgICBzcGlubmVyLmlubmVySFRNTCA9ICc8aW1nIHNyYz1cIi93cC1jb250ZW50L3RoZW1lcy9nZnAvZGlzdC9pbWcvc3Bpbm5lci5zdmdcIiBjbGFzcz1cInNwaW5uZXJcIj4nO1xuICAgIHJlc3VsdHNDb250YWluZXIuYXBwZW5kQ2hpbGQoc3Bpbm5lcik7XG4gICAgcmVzdWx0c0NvbnRhaW5lci5jbGFzc0xpc3QucmVtb3ZlKCd2aXN1YWxseS1oaWRkZW4nKTtcblxuICAgIHZhciBhbGxDdXJyZW50RXJyb3JzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmZvcm0tZXJyb3JzJyk7XG4gICAgaWYgKGFsbEN1cnJlbnRFcnJvcnMpIHtcbiAgICAgIGFsbEN1cnJlbnRFcnJvcnMuZm9yRWFjaChmdW5jdGlvbihlcnJvcikge1xuICAgICAgICBlcnJvci5yZW1vdmUoKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICBhdG9taWMod2luZG93LmFqYXhfb3JkZXJfdHJhY2tpbmcuYWpheF91cmwsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgZGF0YToge1xuICAgICAgICBhY3Rpb246ICdnZXRfb3JkZXJzJyxcbiAgICAgICAgX2FqYXhfbm9uY2U6IHdpbmRvdy5hamF4X29yZGVyX3RyYWNraW5nLm5vbmNlLFxuICAgICAgICBlbWFpbF9hZGRyZXNzOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdpbnB1dFtuYW1lPVwiZW1haWxfYWRkcmVzc1wiXScpLnZhbHVlLFxuICAgICAgICB6aXBjb2RlOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdpbnB1dFtuYW1lPVwiemlwY29kZVwiXScpLnZhbHVlXG4gICAgICB9XG4gICAgfSkudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xuXG4gICAgICB2YXIgbG9hZGluZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5sb2FkaW5nJyk7XG4gICAgICBpZiAobG9hZGluZy5sZW5ndGggPiAwKSB7XG4gICAgICAgIGxvYWRpbmcuZm9yRWFjaChmdW5jdGlvbihsb2FkKSB7XG4gICAgICAgICAgbG9hZC5yZW1vdmUoKTtcbiAgICAgICAgfSlcbiAgICAgIH1cbiAgICAgIFxuICAgICAgaWYgKHJlc3BvbnNlLmRhdGEuc3RhdHVzID09PSAnZXJyb3InKSB7XG4gICAgICAgIHZhciBhbGxFcnJvcnMgPSByZXNwb25zZS5kYXRhLm1lc3NhZ2VzO1xuICAgICAgICB2YXIgZXJyb3JzTGlzdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3VsJyk7XG4gICAgICAgIGVycm9yc0xpc3Quc3R5bGUubGlzdFN0eWxlVHlwZSA9ICdub25lJztcbiAgICAgICAgZXJyb3JzTGlzdC5pbm5lckhUTUwgPSBPYmplY3QudmFsdWVzKGFsbEVycm9ycykubWFwKGZ1bmN0aW9uKGVycm9yKSB7XG4gICAgICAgICAgcmV0dXJuICc8bGkgY2xhc3M9XCJmb3JtLWVycm9yc1wiPjxidXR0b24gY2xhc3M9XCJmb3JtLWVycm9ycy0tY2xvc2VcIiBvbmNsaWNrPVwidGhpcy5wYXJlbnRFbGVtZW50LnJlbW92ZSgpO1wiPiZ0aW1lczwvYnV0dG9uPicgKyBlcnJvciArICc8L2xpPidcbiAgICAgICAgfSkuam9pbignJyk7XG4gICAgICAgIHJlc3VsdHNDb250YWluZXIucHJlcGVuZChlcnJvcnNMaXN0KTtcbiAgICAgICAgb3JkZXJEZXRhaWxzQ29udGFpbmVyLmlubmVySFRNTCA9ICcnO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7XG4gICAgICAgIHZhciByZXNwb25zZU9yZGVycyA9IHJlc3BvbnNlLmRhdGEub3JkZXJzO1xuICAgICAgICByZXNwb25zZU9yZGVycy5mb3JFYWNoKGZ1bmN0aW9uKG9yZGVyKSB7XG4gICAgICAgICAgb3JkZXJzLnB1c2gob3JkZXIpO1xuICAgICAgICB9KTtcbiAgICAgICAgb3JkZXJEZXRhaWxzQ29udGFpbmVyLmlubmVySFRNTCA9ICcnO1xuICAgICAgICB1cGRhdGVNb2RhbFZhbHVlcyhyZXNwb25zZS5kYXRhLnVzZXIpO1xuICAgICAgICBmb3JtYXRPcmRlcnMoKTtcbiAgICAgIH1cbiAgICB9KVxuICB9XG5cbiAgZnVuY3Rpb24gZGlzcGxheUluZGl2aWR1YWxPcmRlcihlKSB7XG4gICAgaWYgKCFlLnRhcmdldC5kYXRhc2V0Lm9yZGVySWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIG9yZGVySUQgPSBlLnRhcmdldC5kYXRhc2V0Lm9yZGVySWQ7XG4gICAgdmFyIGluZGV4ID0gZS50YXJnZXQuZGF0YXNldC5pbmRleDtcbiAgICB2YXIgb3JkZXIgPSBvcmRlcnNbaW5kZXhdO1xuICAgIHZhciBvcmRlclN0YXR1cyA9IG9yZGVyLnBvc3Rfc3RhdHVzLnNwbGl0KCd3Yy0nKVsxXTtcbiAgICBvcmRlclN0YXR1cyA9IG9yZGVyU3RhdHVzLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgb3JkZXJTdGF0dXMuc2xpY2UoMSk7XG5cbiAgICB2YXIgYnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgYnV0dG9uLmlkID0gJ3Nob3dBbGxPcmRlcnMnO1xuICAgIGJ1dHRvbi5pbm5lckhUTUwgPSAnJmxhcnI7IFNob3cgQWxsIE9yZGVycyc7XG4gICAgYnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2J0bi1zb2xpZC0tYnJhbmQnKTtcbiAgICByZXN1bHRzQ29udGFpbmVyLnByZXBlbmQoYnV0dG9uKTtcbiAgICByZXN1bHRzLmlubmVySFRNTCA9ICcnO1xuXG4gICAgdmFyIG9yZGVyTWV0YSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIG9yZGVyTWV0YS5jbGFzc0xpc3QuYWRkKCdvcmRlci1yZXN1bHRzLS1tZXRhJyk7XG4gICAgb3JkZXJNZXRhLmlubmVySFRNTCA9ICc8aDI+T3JkZXI6ICcgKyBvcmRlci5mYW5jeSArICc8L2gyPjx0aW1lIGNsYXNzPVwib3JkZXItZGF0ZVwiPk9yZGVyIERhdGU6ICcgKyBtb21lbnQob3JkZXIucG9zdF9kYXRlX2dtdCwgXCJZWVlZLU1NLUREIGhoOm1tOnNzIGFcIikuZm9ybWF0KCdMTCcpICsgJzwvdGltZT48cCBjbGFzcz1cIm9yZGVyLXN0YXR1c1wiPk9yZGVyIFN0YXR1czogJyArIG9yZGVyU3RhdHVzICsgJzwvcD48aDM+SGF2ZSBBIFF1ZXN0aW9uPzwvaDM+PGJ1dHRvbiBjbGFzcz1cImJ0bi1zb2xpZC0tYnJhbmQtdHdvXCIgZGF0YS1tb2RhbC1sYXVuY2g9XCJzZW5kLW9yZGVyLWNvbW1lbnRcIiBkYXRhLW9yZGVyLW51bWJlcj1cIicgKyBvcmRlci5JRCArICdcIj5Bc2sgVXMhPC9idXR0b24+JztcbiAgICBvcmRlckRldGFpbHNDb250YWluZXIuYXBwZW5kQ2hpbGQob3JkZXJNZXRhKTtcblxuICAgIHZhciBvcmRlckNvbnRlbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBvcmRlckNvbnRlbnQuY2xhc3NMaXN0LmFkZCgnb3JkZXItcmVzdWx0cy0tY29udGVudCcpO1xuICAgIG9yZGVyRGV0YWlsc0NvbnRhaW5lci5hcHBlbmRDaGlsZChvcmRlckNvbnRlbnQpO1xuXG4gICAgdmFyIG9yZGVyRGV0YWlsc0xpc3RDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBvcmRlckRldGFpbHNMaXN0Q29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2JveC0td2l0aC1oZWFkZXInKTtcbiAgICBvcmRlckRldGFpbHNMaXN0Q29udGFpbmVyLmlubmVySFRNTCA9ICc8aGVhZGVyPjxoMz5PcmRlciBEZXRhaWxzPC9oMz48L2hlYWRlcj48ZGl2IGNsYXNzPVwiaGFzLXRleHQtY2VudGVyXCI+PGltZyBzcmM9XCIvd3AtY29udGVudC90aGVtZXMvZ2ZwL2Rpc3QvaW1nL3NwaW5uZXIuc3ZnXCIgY2xhc3M9XCJzcGlubmVyXCI+PC9kaXY+JztcbiAgICBvcmRlckNvbnRlbnQuYXBwZW5kQ2hpbGQob3JkZXJEZXRhaWxzTGlzdENvbnRhaW5lcik7XG5cbiAgICB2YXIgb3JkZXJOb3Rlc0xpc3RDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBvcmRlck5vdGVzTGlzdENvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdib3gtLXdpdGgtaGVhZGVyJyk7XG4gICAgb3JkZXJOb3Rlc0xpc3RDb250YWluZXIuaW5uZXJIVE1MID0gJzxoZWFkZXI+PGgzPk9yZGVyIE5vdGVzPC9oMz48L2hlYWRlcj48ZGl2IGNsYXNzPVwiaGFzLXRleHQtY2VudGVyXCI+PGltZyBzcmM9XCIvd3AtY29udGVudC90aGVtZXMvZ2ZwL2Rpc3QvaW1nL3NwaW5uZXIuc3ZnXCIgY2xhc3M9XCJzcGlubmVyXCI+PC9kaXY+JztcbiAgICBvcmRlckNvbnRlbnQuYXBwZW5kQ2hpbGQob3JkZXJOb3Rlc0xpc3RDb250YWluZXIpO1xuXG4gICAgYXRvbWljKHdpbmRvdy5hamF4X29yZGVyX3RyYWNraW5nLmFqYXhfdXJsLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgYWN0aW9uOiAnZ2V0X29yZGVyX2RldGFpbHMnLFxuICAgICAgICBfYWpheF9ub25jZTogd2luZG93LmFqYXhfb3JkZXJfdHJhY2tpbmcubm9uY2UsXG4gICAgICAgIG9yZGVySUQ6IG9yZGVySURcbiAgICAgIH1cbiAgICB9KS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgICB2YXIgb3JkZXJEZXRhaWxzID0gcmVzcG9uc2UuZGF0YTtcbiAgICAgIFxuICAgICAgdmFyIG9yZGVyRGV0YWlsc0xpc3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd1bCcpO1xuICAgICAgb3JkZXJEZXRhaWxzTGlzdC5jbGFzc0xpc3QuYWRkKCdnZnAtb3JkZXItZGV0YWlscy0tbGlzdCcpO1xuICAgICAgb3JkZXJEZXRhaWxzTGlzdC5pbm5lckhUTUwgPSBvcmRlckRldGFpbHMubWFwKGZ1bmN0aW9uKGl0ZW0pIHtcbiAgICAgICAgcmV0dXJuICc8bGkgY2xhc3M9XCJnZnAtb3JkZXItZGV0YWlscy0taXRlbVwiPjxkaXYgY2xhc3M9XCJnZnAtb3JkZXItZGV0YWlscy0taXRlbS1pbWFnZVwiPjxhIGhyZWY9XCInICsgaXRlbS5saW5rICsgJ1wiPicgKyBpdGVtLmltYWdlICsgJzwvYT48L2Rpdj48ZGl2IGNsYXNzPVwiZ2ZwLW9yZGVyLWRldGFpbHMtLWl0ZW0tZGV0YWlsc1wiPjxwIGNsYXNzPVwiZ2ZwLW9yZGVyLWRldGFpbHMtLWl0ZW0tbmFtZVwiPjxhIGhyZWY9XCInICsgaXRlbS5saW5rICsgJ1wiPicgKyBpdGVtLm5hbWUgKyAnPC9hPjwvcD48cCBjbGFzcz1cImdmcC1vcmRlci1kZXRhaWxzLS1pdGVtLXByaWNlXCI+UHJpY2U6ICZuYnNwOyQ8c3BhbiBjbGFzcz1cInJlZ3VsYXItcHJpY2VcIj4nICsgaXRlbS5zdWJ0b3RhbCArICcgPHNwYW4gY2xhc3M9XCJlYWNoLXByaWNlXCI+Jm5kYXNoOyAkJyArIGl0ZW0udW5pdF9wcmljZSArICcgZWFjaDwvc3Bhbj48L3NwYW4+PC9wPjxwIGNsYXNzPVwiZ2ZwLW9yZGVyLWRldGFpbHMtLWl0ZW0tcXVhbnRpdHlcIj5RdWFudGl0eTogJm5ic3A7JyArIGl0ZW0ucXR5ICsgJzwvcD4gPC9kaXY+PC9saT4nO1xuICAgICAgfSkuam9pbignJyk7XG4gICAgICBvcmRlckRldGFpbHNMaXN0Q29udGFpbmVyLmFwcGVuZENoaWxkKG9yZGVyRGV0YWlsc0xpc3QpO1xuICAgICAgb3JkZXJEZXRhaWxzQ29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJy5oYXMtdGV4dC1jZW50ZXInKS5yZW1vdmUoKTtcblxuICAgIH0pO1xuXG4gICAgYXRvbWljKHdpbmRvdy5hamF4X29yZGVyX3RyYWNraW5nLmFqYXhfdXJsLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgYWN0aW9uOiAnZ2V0X29yZGVyX25vdGVzJyxcbiAgICAgICAgX2FqYXhfbm9uY2U6IHdpbmRvdy5hamF4X29yZGVyX3RyYWNraW5nLm5vbmNlLFxuICAgICAgICBvcmRlcklEOiBvcmRlcklEXG4gICAgICB9XG4gICAgfSkudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgdmFyIG9yZGVyTm90ZXMgPSByZXNwb25zZS5kYXRhO1xuICAgICAgLy8gY29uc29sZS5sb2cob3JkZXJOb3Rlcyk7XG5cbiAgICAgIGlmIChvcmRlck5vdGVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgdmFyIG9yZGVyTm90ZXNMaXN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb2wnKTtcbiAgICAgICAgb3JkZXJOb3Rlc0xpc3QuY2xhc3NMaXN0LmFkZCgnd29vY29tbWVyY2UtT3JkZXJVcGRhdGVzJywgJ2NvbW1lbnRsaXN0JywgJ25vdGVzJyk7XG4gICAgICAgIG9yZGVyTm90ZXNMaXN0LmlubmVySFRNTCA9IG9yZGVyTm90ZXMubWFwKGZ1bmN0aW9uKG5vdGUpIHtcbiAgICAgICAgICByZXR1cm4gJzxsaSBjbGFzcz1cIndvb2NvbW1lcmNlLU9yZGVyVXBkYXRlIGNvbW1lbnQgbm90ZVwiPjxkaXYgY2xhc3M9XCJ3b29jb21tZXJjZS1PcmRlclVwZGF0ZS1pbm5lciBjb21tZW50X2NvbnRhaW5lclwiPjxkaXYgY2xhc3M9XCJ3b29jb21tZXJjZS1PcmRlclVwZGF0ZS10ZXh0IGNvbW1lbnQtdGV4dFwiPjxkaXYgY2xhc3M9XCJ3b29jb21tZXJjZS1PcmRlclVwZGF0ZS1kZXNjcmlwdGlvbiBkZXNjcmlwdGlvblwiPicgKyBub3RlLmNvbW1lbnRDb250ZW50ICsgJzwvZGl2PicgKyBub3RlLmNvbW1lbnRBdXRob3JJbWcgKyAnPHAgY2xhc3M9XCJ3b29jb21tZXJjZS1PcmRlclVwZGF0ZS1tZXRhIG1ldGFcIj4nICsgbm90ZS5jb21tZW50QXV0aG9yICsgJzxicj4nICsgbW9tZW50KG5vdGUuY29tbWVudERhdGUsICBcIllZWVktTU0tREQgaGg6bW06c3MgYVwiKS5mb3JtYXQoJ0xMJykgKyAnPC9wPjwvZGl2PjwvZGl2PjwvbGk+JztcbiAgICAgICAgfSkuam9pbignJyk7XG4gICAgICAgIG9yZGVyTm90ZXNMaXN0Q29udGFpbmVyLmFwcGVuZENoaWxkKG9yZGVyTm90ZXNMaXN0KTtcbiAgICAgICAgb3JkZXJOb3Rlc0xpc3RDb250YWluZXIucXVlcnlTZWxlY3RvcignLmhhcy10ZXh0LWNlbnRlcicpLnJlbW92ZSgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb3JkZXJOb3Rlc0xpc3RDb250YWluZXIucXVlcnlTZWxlY3RvcignLmhhcy10ZXh0LWNlbnRlcicpLmlubmVySFRNTCA9ICdObyBub3RlcyBoYXZlIGJlZW4gYWRkZWQgdG8gdGhpcyBvcmRlcic7XG4gICAgICB9XG5cbiAgICB9KTtcblxuXG4gIH1cblxuICBmdW5jdGlvbiBkaXNwbGF5QWxsT3JkZXJzKGUpIHtcbiAgICBpZiAoZS50YXJnZXQuaWQgIT09ICdzaG93QWxsT3JkZXJzJykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBmb3JtYXRPcmRlcnMoKTtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjc2hvd0FsbE9yZGVycycpLnJlbW92ZSgpO1xuICAgIG9yZGVyRGV0YWlsc0NvbnRhaW5lci5pbm5lckhUTUwgPSAnJztcbiAgfVxuXG4gIGZ1bmN0aW9uIGZvcm1hdE9yZGVycygpIHtcbiAgICB2YXIgbG9hZGluZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5sb2FkaW5nJyk7XG4gICAgaWYgKGxvYWRpbmcpIHtcbiAgICAgIGxvYWRpbmcucmVtb3ZlKCk7XG4gICAgfVxuICAgIHJlc3VsdHMuaW5uZXJIVE1MID0gb3JkZXJzLm1hcChmdW5jdGlvbihvcmRlciwgaW5kZXgpIHtcbiAgICAgIHJldHVybiAnPGxpIGNsYXNzPVwib3JkZXItcmVzdWx0cy0taXRlbVwiPjxwIGNsYXNzPVwib3JkZXItcmVzdWx0cy0tb3JkZXItbnVtYmVyXCI+T3JkZXI6ICcgKyBvcmRlci5mYW5jeSArICc8L3A+PHRpbWUgY2xhc3M9XCJvcmRlci1yZXN1bHRzLS1vcmRlci10aW1lXCIgZGF0ZXRpbWU9XCInICsgb3JkZXIucG9zdF9kYXRlX2dtdCArICdcIj4nICsgbW9tZW50KG9yZGVyLnBvc3RfZGF0ZV9nbXQsIFwiWVlZWS1NTS1ERCBoaDptbTpzcyBhXCIpLmZvcm1hdCgnTEwnKSArICc8L3RpbWU+PGJ1dHRvbiBjbGFzcz1cImJ0bi1zb2xpZC0tYnJhbmQtdHdvXCIgZGF0YS1pbmRleD1cIicgKyBpbmRleCArICdcIiBkYXRhLW9yZGVyLWlkPVwiJyArIG9yZGVyLklEICsgJ1wiPlZpZXcgT3JkZXI8L2J1dHRvbj48L2xpPic7XG4gICAgfSkuam9pbignJyk7XG4gIH1cblxuICBmdW5jdGlvbiB1cGRhdGVNb2RhbFZhbHVlcyh1c2VyKSB7XG4gICAgdmFyIGRpc3BsYXlOYW1lID0gdXNlci5kaXNwbGF5X25hbWUsXG4gICAgICAgIHBob25lTnVtYmVyID0gdXNlci5waG9uZV9udW1iZXJcbiAgICAgICAgZW1haWxBZGRyZXNzID0gdXNlci5lbWFpbF9hZGRyZXNzO1xuXG4gICAgdmFyIGZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjc3VibWl0T3JkZXJDb21tZW50Jyk7XG5cbiAgICBmb3JtLnF1ZXJ5U2VsZWN0b3IoJ2lucHV0W25hbWU9XCJjdXN0b21lcl9uYW1lXCJdJykudmFsdWUgPSBkaXNwbGF5TmFtZTtcbiAgICBmb3JtLnF1ZXJ5U2VsZWN0b3IoJ2lucHV0W25hbWU9XCJwaG9uZV9udW1iZXJcIl0nKS52YWx1ZSA9IHBob25lTnVtYmVyO1xuICAgIGZvcm0ucXVlcnlTZWxlY3RvcignaW5wdXRbbmFtZT1cImVtYWlsX2FkZHJlc3NcIl0nKS52YWx1ZSA9IGVtYWlsQWRkcmVzcztcbiAgfVxuXG4gIGZvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgZm9ybVN1Ym1pc3Npb24pO1xuICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGRpc3BsYXlJbmRpdmlkdWFsT3JkZXIpO1xuICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGRpc3BsYXlBbGxPcmRlcnMpXG5cblxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XG4gIFxuICBpZiAoZ2V0UGFyYW1ldGVyQnlOYW1lKCdzdWNjZXNzJykgPT09ICcxJykge1xuICAgIHZhciBhbGVydCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGFsZXJ0LmNsYXNzTGlzdC5hZGQoJ2FsZXJ0JywgJ2FsZXJ0LS1zdWNjZXNzJyk7XG4gICAgYWxlcnQuaW5uZXJIVE1MID0gJzxidXR0b24gY2xhc3M9XCJhbGVydC0tY2xvc2VcIiBvbmNsaWNrPVwidGhpcy5wYXJlbnRFbGVtZW50LnJlbW92ZSgpXCI+JnRpbWVzOzwvYnV0dG9uPjxkaXYgY2xhc3M9XCJhbGVydC0tY29udGVudFwiPjxoND5HcmVhdCE8L2g0PjxwPldlXFwndmUgcmVjZWl2ZWQgeW91ciBtZXNzYWdlIGFuZCB3aWxsIHJlc3BvbmQgc2hvcnRseS48L3A+PC9kaXY+JztcbiAgICBkb2N1bWVudC5ib2R5LnByZXBlbmQoYWxlcnQpO1xuICB9XG5cbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xuICBcbiAgZnVuY3Rpb24gbmF2aWdhdGlvbkxpbmtzKCkge1xuICAgIFxuICAgIHZhciBhY2NvdW50TmF2aWdhdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy53b29jb21tZXJjZS1NeUFjY291bnQtbmF2aWdhdGlvbicpO1xuICAgIGlmICghYWNjb3VudE5hdmlnYXRpb24pIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgXG4gICAgdmFyIGFjY291bnROYXZpZ2F0aW9uTGlzdCA9IGFjY291bnROYXZpZ2F0aW9uLnF1ZXJ5U2VsZWN0b3IoJ3VsJyk7XG4gICAgdmFyIHRvZ2dsZUFjY291bnROYXZpZ2F0aW9uID0gYWNjb3VudE5hdmlnYXRpb24ucXVlcnlTZWxlY3RvcignYnV0dG9uJyk7XG4gICAgXG5cbiAgICBmdW5jdGlvbiB0b2dnbGVNZW51KGUpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHRoaXMuY2xhc3NMaXN0LnRvZ2dsZSgnaXMtYWN0aXZlJyk7XG4gICAgICBhY2NvdW50TmF2aWdhdGlvbkxpc3QuY2xhc3NMaXN0LnRvZ2dsZSgnaXMtb3BlbicpO1xuICAgIH1cblxuICAgIHRvZ2dsZUFjY291bnROYXZpZ2F0aW9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdG9nZ2xlTWVudSk7XG5cbiAgfVxuXG4gIG5hdmlnYXRpb25MaW5rcygpO1xuXG59KSgpOyIsIihmdW5jdGlvbigpIHtcblxuICB2YXIgbG9hZE1vcmUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbG9hZE1vcmVQb3N0cycpO1xuICBpZiAoIWxvYWRNb3JlKSB7IHJldHVybjsgfVxuXG4gIHZhciBvZmZzZXQgPSAxMDtcbiAgdmFyIHBvc3RzTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3N0LWxpc3RpbmctLXJlc3VsdHMnKTtcblxuICBsb2FkTW9yZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGdldFBvc3RzKTtcblxuICBmdW5jdGlvbiBnZXRQb3N0cyhlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGUudGFyZ2V0LmRpc2FibGVkID0gdHJ1ZTtcbiAgICBlLnRhcmdldC5jbGFzc0xpc3QuYWRkKCdkaXNhYmxlZCcpO1xuICAgIHZhciBzcGlubmVyID0gZS50YXJnZXQucGFyZW50RWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuc3Bpbm5lcicpXG4gICAgc3Bpbm5lci5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICBjb25zb2xlLmxvZygnZmV0Y2hpbmcgcG9zdHMnKTtcbiAgICBhdG9taWMod2luZG93LmxvY2F0aW9uLm9yaWdpbiArICcvd3AtanNvbi93cC92Mi9wb3N0cz9vZmZzZXQ9JyArIG9mZnNldCArICcmY2F0ZWdvcmllcz0nICsgY3VycmVudENhdGVnb3J5KVxuICAgICAgLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcbiAgICAgICAgb2Zmc2V0ICs9IDEwO1xuICAgICAgICBsb2FkTW9yZS5kaXNhYmxlZCA9IGZhbHNlO1xuICAgICAgICBsb2FkTW9yZS5jbGFzc0xpc3QucmVtb3ZlKCdkaXNhYmxlZCcpO1xuICAgICAgICBzcGlubmVyLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICAgIGNvbnNvbGUubG9nKCdwb3N0cyBmZXRjaGVkJyk7XG4gICAgICAgIGZvcm1hdFBvc3RzKHJlc3BvbnNlLmRhdGEpO1xuICAgICAgICBhcHBlbmRQb3N0cygpO1xuICAgICAgfSlcbiAgfVxuXG4gIGZ1bmN0aW9uIGZvcm1hdFBvc3RzKHBvc3RzKSB7XG4gICAgY29uc29sZS5sb2coJ2Zvcm1hdCBQb3N0cycpO1xuICAgIHBvc3RzLmZvckVhY2goZnVuY3Rpb24ocG9zdCkge1xuICAgICAgdmFyIGNhcmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgIGNhcmQuY2xhc3NMaXN0LmFkZCgnY2FyZCcpO1xuICAgICAgY2FyZC5pbm5lckhUTUwgPSAnPGRpdiBjbGFzcz1cImNhcmQtY29udGVudFwiPjxwIGNsYXNzPVwiY2FyZC1jYXRlZ29yeVwiPjxhIGhyZWY9XCInICsgcG9zdC5saW5rICsgJ1wiPicgKyBjYXRlZ29yeU5hbWUgICsgJzwvYT48L3A+PGg0IGNsYXNzPVwiY2FyZC10aXRsZVwiPjxhIGhyZWY9XCInICsgcG9zdC5saW5rICsgJ1wiPicgKyBwb3N0LnRpdGxlLnJlbmRlcmVkICsgJzwvYT48L2g0PjxwIGNsYXNzPVwiY2FyZC1kZXNjcmlwdGlvblwiPicgKyBwb3N0LmV4Y2VycHQucmVuZGVyZWQuc2xpY2UoMywgLTUpICsgJzwvcD48L2Rpdj4nO1xuICAgICAgcG9zdHNMaXN0LmFwcGVuZENoaWxkKGNhcmQpO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gYXBwZW5kUG9zdHMoKSB7XG4gICAgY29uc29sZS5sb2coJ2FwcGVuZFBvc3RzJyk7XG4gIH1cblxufSkoKTsiXX0=
