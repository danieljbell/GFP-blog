!function(e,t){"function"==typeof define&&define.amd?define([],function(){return t(e)}):"object"==typeof exports?module.exports=t(e):window.atomic=t(e)}("undefined"!=typeof global?global:"undefined"!=typeof window?window:this,function(n){"use strict";var a,o={method:"GET",username:null,password:null,data:{},headers:{"Content-type":"application/x-www-form-urlencoded"},responseType:"text",timeout:null,withCredentials:!1},i=function(){for(var n={},e=0;e<arguments.length;e++){!function(e){for(var t in e)e.hasOwnProperty(t)&&("[object Object]"===Object.prototype.toString.call(e[t])?n[t]=i(n[t],e[t]):n[t]=e[t])}(arguments[e])}return n},r=function(o){var i=new XMLHttpRequest,e=new Promise(function(e,t){for(var n in i.onreadystatechange=function(){4===i.readyState&&(200<=i.status&&i.status<300?e(function(t){var n;if("text"!==a.responseType&&""!==a.responseType)return{data:t.response,xhr:t};try{n=JSON.parse(t.responseText)}catch(e){n=t.responseText}return{data:n,xhr:t}}(i)):t({status:i.status,statusText:i.statusText}))},i.open(a.method,o,!0,a.username,a.password),i.responseType=a.responseType,a.headers)a.headers.hasOwnProperty(n)&&i.setRequestHeader(n,a.headers[n]);a.timeout&&(i.timeout=a.timeout,i.ontimeout=function(e){t({status:408,statusText:"Request timeout"})}),a.withCredentials&&(i.withCredentials=!0),i.send(function(e){if("string"==typeof e||"[object FormData]"===Object.prototype.toString.call(e))return e;if(/application\/json/i.test(a.headers["Content-type"])||"[object Array]"===Object.prototype.toString.call(e))return JSON.stringify(e);var t=[];for(var n in e)e.hasOwnProperty(n)&&t.push(encodeURIComponent(n)+"="+encodeURIComponent(e[n]));return t.join("&")}(a.data))});return e.cancel=function(){i.abort()},e};return function(e,t){if(!("XMLHttpRequest"in n&&"JSON"in n&&"Promise"in n))throw"Atomic: This browser does not support the methods used in this plugin.";return a=i(o,t||{}),r(e)}}),window.innerWidth,document.querySelector("button#hamburger").addEventListener("click",function(e){toggleMenu();var t=document.querySelector(".site-header").offsetHeight;document.querySelector(".navigation--level-zero").style.top=t+"px"});for(var headerTopButtons=document.querySelectorAll(".navigation--button"),navLevelOne=document.querySelectorAll(".navigation--level-one"),i=0;i<navLevelOne.length;i++)navLevelOne[i].querySelector("li:first-child a").classList.add("active");for(i=0;i<headerTopButtons.length;i++)headerTopButtons[i].addEventListener("click",function(e){e.preventDefault();var t=e.target,n=t.nextElementSibling.querySelector(".navigation--level-one");n.classList.contains("active")?(n.classList.remove("active"),t.nextElementSibling.classList.remove("active")):(t.parentElement.classList.add("active"),t.nextElementSibling.classList.add("active"),t.nextElementSibling.querySelector(".navigation--level-one").classList.add("active"))});var allLevelOneLinks=document.querySelectorAll(".navigation--level-one > li > a");for(i=0;i<allLevelOneLinks.length;i++)allLevelOneLinks[i].addEventListener("click",function(e){e.preventDefault();for(var t=document.querySelectorAll(".navigation--level-one > li > a"),n=0;n<t.length;n++)t[n].classList.remove("active");e.target.classList.add("active")});function toggleMenu(){document.body.classList.toggle("menu-open"),document.querySelector("#hamburger").classList.toggle("is-active")}!function(){var e=document.querySelector("#modelModifiers");document.querySelector("#main_content");if(e&&e.addEventListener("change",function(e){var t=e.target.value;window.location.href=t}),document.body.classList.contains("single-post"))for(var t=document.querySelectorAll("table tr"),n=0;n<t.length;n++)t[n].addEventListener("mouseenter",function(e){if(!(window.innerWidth<1080||"false"===e.target.querySelector("td:first-child").dataset.productSold)){var t=e.target.querySelector("td:first-child .product-image-container");if(t)t.classList.remove("product-image--is-hidden");else{var n=e.target.querySelector("td:first-child").dataset.productImage,o=document.createElement("img");o.classList.add("product-image"),o.src=void 0===n?"https://cdn3.volusion.com/yxhfe.dfqew/v/vspfiles/templates/gfp-test/images/nophoto.gif":n;var i=document.createElement("div");i.classList.add("product-image-container"),i.appendChild(o);e.target.querySelector("td:first-child").appendChild(i)}}}),t[n].addEventListener("mouseleave",function(e){e.target.querySelector("td:first-child .product-image-container").classList.add("product-image--is-hidden")});var o=document.querySelector(".maintenance-kit-container");o&&1080<window.innerWidth&&(window.onload=function(){var t=o.offsetTop,n=window.getComputedStyle(document.body,null).fontSize;n=parseInt(n.split("px")[0]),window.addEventListener("scroll",function(e){window.scrollY>t-3*n&&o.classList.add("maintenance-kit-container--is-fixed"),window.scrollY<t-3*n&&o.classList.remove("maintenance-kit-container--is-fixed")})})}(),String.prototype.includes||(String.prototype.includes=function(e,t){"use strict";return"number"!=typeof t&&(t=0),!(t+e.length>this.length)&&-1!==this.indexOf(e,t)}),[Element.prototype,CharacterData.prototype,DocumentType.prototype].forEach(function(e){e.hasOwnProperty("remove")||Object.defineProperty(e,"remove",{configurable:!0,enumerable:!0,writable:!0,value:function(){null!==this.parentNode&&this.parentNode.removeChild(this)}})}),Array.prototype.includes||Object.defineProperty(Array.prototype,"includes",{value:function(e,t){if(null==this)throw new TypeError('"this" is null or not defined');var n=Object(this),o=n.length>>>0;if(0===o)return!1;var i,a,r=0|t,s=Math.max(0<=r?r:o-Math.abs(r),0);for(;s<o;){if((i=n[s])===(a=e)||"number"==typeof i&&"number"==typeof a&&isNaN(i)&&isNaN(a))return!0;s++}return!1}}),function(){var e=document.querySelector("#fitment-text-filter"),o=document.querySelectorAll(".single--part-fitment-list a");e&&e.addEventListener("keyup",function(e){for(var t=e.target.value.toUpperCase(),n=0;n<o.length;n++)o[n].parentElement.classList.add("hidden"),o[n].textContent.includes(t)&&o[n].parentElement.classList.remove("hidden")})}(),function(){var e=document.querySelector(".single-comments"),t=document.querySelector("#respond");document.querySelector("#commentform");if(t){var n=document.createElement("button");n.innerHTML="Add Comment",n.id="addComment",t.style.visibility="hidden",t.style.maxHeight="0px",t.style.padding="0px",t.style.marginTop="0px",e.appendChild(n),document.querySelector("#addComment").addEventListener("click",function(e){e.preventDefault(),e.target.style.opacity="0",t.style.visibility="visible",t.style.maxHeight="1000px",t.style.padding="1rem",t.style.marginTop="3rem"})}}(),function(){var i=document.querySelector("#loadMorePosts");if(i){var o=1,l=document.querySelector(".post-listing--list");i.addEventListener("click",function(e){var t=window.location.origin+"/wp-json/wp/v2/posts?offset="+10*o;if(document.body.classList.contains("category")){var n=document.body.classList;console.log(n)}i.disabled=!0,i.classList.add("disabled"),atomic(t).then(function(e){for(var t=[],n=e.data,o=0;o<n.length;o++)t.push({date:n[o].date,author:n[o].author,category:n[o].categories[0],title:n[o].title.rendered,tags:n[o].tags,link:n[o].link,description:n[o].excerpt.rendered.slice(3,-5)});return i.disabled=!1,i.classList.remove("disabled"),e.data.length<10&&(i.textContent="All Posts Loaded",i.disabled=!0,i.classList.add("disabled")),t}).then(function(e){for(var t=0;t<e.length;t++){var n=e[t].date,o=new Date(n);o=o.toDateString().slice(3);var i=e[t].title,a="Uncategorized",r=e[t].link,s=e[t].description;switch(e[t].category){case 17:a="Maintenance Reminder";break;case 63:a="Service Intervals";break;case 65:a="Troubleshooting";break;case 6:a="Talk With A Tech"}var c=document.createElement("div");c.classList.add("card"),c.innerHTML='<div class="card-content">'+i+"</div>",c.querySelector(".card-content").innerHTML='<p class="card-category"><a href="/?cat='+e[t].category+'">'+a+'</a></p><h4 class="card-title"><a href="'+r+'">'+i+'</a></h4><p class="card-description">'+s+'</p><ul class="single-tags--list"></ul>',l.appendChild(c)}}).catch(function(e){console.log(e)}),o++})}}(),function(){if(!document.body.classList.contains("woocommerce-cart")&&!document.body.classList.contains("woocommerce-checkout")){var t=document.querySelector(".alert--add-to-cart"),o=document.querySelector(".alert--cart-list"),e=document.querySelector(".alert--header");o.addEventListener("click",function(e){if(e.preventDefault(),!e.target.matches("button"))return;var t=e.target.dataset.index,n=o.querySelector('[data-index="'+t+'"]');n.remove(),atomic(window.location.origin+"/wp-admin/admin-ajax.php",{method:"POST",data:{action:"remove_item_from_cart",product_id:n.dataset.productid}}).then(function(e){console.log(e)})}),e.addEventListener("click",function(e){n()}),n(!0)}function n(e){t?(e=void 0!==e&&e)?t.classList.add("alert--is-minimized"):(t.classList.toggle("alert--is-minimized"),t.classList.add("alert--is-active")):console.error("Cart Markup is not on the page")}}(),function(){var e=document.querySelectorAll(".accordian--title");if(e)for(var t=0;t<e.length;t++)e[t].parentElement.classList.add("accordian--is-collapsed"),e[t].addEventListener("click",function(e){e.target.parentElement.classList.contains("accordian--is-collapsed")?e.target.parentElement.classList.remove("accordian--is-collapsed"):e.target.parentElement.classList.add("accordian--is-collapsed")})}(),function(){var e=document.querySelectorAll(".tooltip--toggle");if(e)for(var t=0;t<e.length;t++)e[t].nextElementSibling.classList.add("tooltip--is-hidden"),e[t].addEventListener("click",function(e){console.log(e.target.nextElementSibling.classList.toggle("tooltip--is-hidden"))})}(),function(){var e=document.querySelectorAll(".modal--close"),t=document.querySelectorAll("button[data-modal-launch]");if(e){for(var n=0;n<t.length;n++)t[n].addEventListener("click",function(e){var t=e.target.dataset.modalLaunch;if(document.querySelector(".modal[data-modal="+t+"]").classList.remove("modal--is-hidden"),document.body.classList.add("modal--is-open"),t="sign-up-form")for(var n=document.querySelectorAll('meta[property="article:tag"]'),o=0;o<n.length;o++)if(n[o].content.includes("John Deere")&&"John Deere Lawn Tractor"!==n[o].content){var i=n[o].content.split("John Deere ")[1];document.querySelector("#mce-MODEL").value=i.toUpperCase()}});for(n=0;n<e.length;n++)e[n].addEventListener("click",function(e){e.target.parentElement.parentElement.classList.add("modal--is-hidden"),document.body.classList.remove("modal--is-open")});document.addEventListener("keyup",function(e){if(27==e.keyCode){var t=document.querySelectorAll("div[data-modal]");document.body.classList.remove("modal--is-open");for(var n=0;n<t.length;n++)t[n].classList.add("modal--is-hidden")}})}}(),window.jQuery&&document.body.classList.contains("single-post")&&$("#mc-embedded-subscribe-form").on("submit",function(e){e.preventDefault();var t=$(this),n=t.find("#mce-EMAIL").val(),o=t.find("#mce-FNAME").val(),i=t.find("#mce-LNAME").val(),a=t.find("#mce-MODEL").val(),r=t.find("#mce-CURRENT_HR").val(),s=t.find("#mce-MOWING_TIM").val();s=s.split("(")[1].split(")")[0].toLowerCase(),$.ajax({type:t.attr("method"),url:t.attr("action"),data:t.serialize(),cache:!1,dataType:"json",contentType:"application/json; charset=utf-8",error:function(e){},success:function(e){"success"!=e.result?$("#mc_embed_signup_scroll").prepend('<p style="border: 1px solid red; padding: 1rem;">'+e.msg+"</p>"):(t.hide(),$('div[data-modal="sign-up-form"] .modal-heading').text("Great "+o+"!").next().text("You will receive a confirmation email soon and we will keep you up to date on your needed parts.")),$.ajax({type:"POST",url:"https://api.flock.com/hooks/sendMessage/855832cd-bd79-436d-9f1f-dcf0020251dd",data:JSON.stringify({text:o+" "+i+" has a "+a+" with "+r+" hours and takes "+s+" to mow. Contact "+o+" at "+n}),dataType:"json",contentType:"application/json"})}})}),function(){var e=parseInt(window.getComputedStyle(document.querySelector("body")).getPropertyValue("font-size")),t=document.querySelector("#stickyNav");if(t){var n=window.scrollY,o=t.offsetTop,i=t.clientWidth;window.addEventListener("resize",function(){o=t.offsetTop,console.log(o)}),document.addEventListener("scroll",function(){n=window.scrollY,o-3*e<n?(t.classList.add("nav--is-sticky"),t.style.maxWidth=i+"px"):t.classList.remove("nav--is-sticky")})}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
