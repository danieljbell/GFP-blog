!function(e,t){"function"==typeof define&&define.amd?define([],function(){return t(e)}):"object"==typeof exports?module.exports=t(e):window.atomic=t(e)}("undefined"!=typeof global?global:"undefined"!=typeof window?window:this,function(n){"use strict";var a,o={method:"GET",username:null,password:null,data:{},headers:{"Content-type":"application/x-www-form-urlencoded"},responseType:"text",timeout:null,withCredentials:!1},i=function(){for(var n={},e=0;e<arguments.length;e++){!function(e){for(var t in e)e.hasOwnProperty(t)&&("[object Object]"===Object.prototype.toString.call(e[t])?n[t]=i(n[t],e[t]):n[t]=e[t])}(arguments[e])}return n},r=function(o){var i=new XMLHttpRequest,e=new Promise(function(e,t){for(var n in i.onreadystatechange=function(){4===i.readyState&&(200<=i.status&&i.status<300?e(function(t){var n;if("text"!==a.responseType&&""!==a.responseType)return{data:t.response,xhr:t};try{n=JSON.parse(t.responseText)}catch(e){n=t.responseText}return{data:n,xhr:t}}(i)):t({status:i.status,statusText:i.statusText}))},i.open(a.method,o,!0,a.username,a.password),i.responseType=a.responseType,a.headers)a.headers.hasOwnProperty(n)&&i.setRequestHeader(n,a.headers[n]);a.timeout&&(i.timeout=a.timeout,i.ontimeout=function(e){t({status:408,statusText:"Request timeout"})}),a.withCredentials&&(i.withCredentials=!0),i.send(function(e){if("string"==typeof e||"[object FormData]"===Object.prototype.toString.call(e))return e;if(/application\/json/i.test(a.headers["Content-type"])||"[object Array]"===Object.prototype.toString.call(e))return JSON.stringify(e);var t=[];for(var n in e)e.hasOwnProperty(n)&&t.push(encodeURIComponent(n)+"="+encodeURIComponent(e[n]));return t.join("&")}(a.data))});return e.cancel=function(){i.abort()},e};return function(e,t){if(!("XMLHttpRequest"in n&&"JSON"in n&&"Promise"in n))throw"Atomic: This browser does not support the methods used in this plugin.";return a=i(o,t||{}),r(e)}}),window.innerWidth,document.querySelector("button#hamburger").addEventListener("click",function(e){toggleMenu();var t=document.querySelector(".site-header").offsetHeight;document.querySelector(".navigation--level-zero").style.top=t+"px"});for(var headerTopButtons=document.querySelectorAll(".navigation--button"),navLevelOne=document.querySelectorAll(".navigation--level-one"),i=0;i<navLevelOne.length;i++)navLevelOne[i].querySelector("li:first-child a").classList.add("active");for(i=0;i<headerTopButtons.length;i++)headerTopButtons[i].addEventListener("click",function(e){e.preventDefault();var t=e.target,n=t.nextElementSibling.querySelector(".navigation--level-one");n.classList.contains("active")?(n.classList.remove("active"),t.nextElementSibling.classList.remove("active")):(t.parentElement.classList.add("active"),t.nextElementSibling.classList.add("active"),t.nextElementSibling.querySelector(".navigation--level-one").classList.add("active"))});var allLevelOneLinks=document.querySelectorAll(".navigation--level-one > li > a");for(i=0;i<allLevelOneLinks.length;i++)allLevelOneLinks[i].addEventListener("click",function(e){e.preventDefault();for(var t=document.querySelectorAll(".navigation--level-one > li > a"),n=0;n<t.length;n++)t[n].classList.remove("active");e.target.classList.add("active")});function toggleMenu(){document.body.classList.toggle("menu-open"),document.querySelector("#hamburger").classList.toggle("is-active")}!function(){var e=document.querySelector(".single-comments"),t=document.querySelector("#respond");document.querySelector("#commentform");if(t){var n=document.createElement("button");n.innerHTML="Add Comment",n.id="addComment",t.style.visibility="hidden",t.style.maxHeight="0px",t.style.padding="0px",t.style.marginTop="0px",e.appendChild(n),document.querySelector("#addComment").addEventListener("click",function(e){e.preventDefault(),e.target.style.opacity="0",t.style.visibility="visible",t.style.maxHeight="1000px",t.style.padding="1rem",t.style.marginTop="3rem"})}}();var loadPosts=document.querySelector("#loadMorePosts");if(loadPosts){var offset=1,postCount=10,postListing=document.querySelector(".post-listing--list");loadPosts.addEventListener("click",function(e){var t=window.location.origin+"/wp-json/wp/v2/posts?offset="+offset*postCount;atomic(t).then(function(e){var t=[],n=e.data;console.log(n);for(var o=0;o<n.length;o++)t.push({date:n[o].date,author:n[o].author,category:n[o].categories[0],title:n[o].title.rendered,tags:n[o].tags,link:n[o].link,description:n[o].excerpt.rendered.slice(3,-5)});return e.data.length<10&&(loadPosts.textContent="All Posts Loaded",loadPosts.disabled=!0,loadPosts.classList.add("disabled")),t}).then(function(e){for(var t=0;t<e.length;t++){var n=e[t].date,o=new Date(n);o=o.toDateString().slice(3);var i=e[t].title,a="Uncategorized",r=e[t].link,s=e[t].description;switch(e[t].category){case 17:a="Maintenance Reminder";break;case 6:a="Talk With A Tech"}var l=document.createElement("div");l.classList.add("card"),l.innerHTML='<div class="card-meta"></div><div class="card-content">'+i+"</div>",l.querySelector(".card-meta").innerHTML='<time datetime="'+n+'">'+o+'</time><p><small>By: <a href="#0">Daniel</a></small></p>',l.querySelector(".card-content").innerHTML='<p class="card-category"><a href="/?cat='+e[t].postCategory+'">'+a+'</a></p><h4 class="card-title"><a href="'+r+'">'+i+'</a></h4><p class="card-description">'+s+'</p><ul class="single-tags--list"></ul>',postListing.appendChild(l)}}).catch(function(e){console.log(e)}),offset++})}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
